/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{isNone as e,isSome as t}from"../../../core/maybe.js";import{toQuantizationTransform as i}from"../../../geometry/support/quantizationUtils.js";import{isValid as s,equals as a}from"../../../geometry/support/spatialReferenceUtils.js";import{convertFromGeometry as r}from"../featureConversionUtils.js";import n from"./AttributesBuilder.js";import{getWhereClause as o}from"./attributeSupport.js";import{project as l,projectMany as u}from"./projectionSupport.js";import{getTimeOperator as c}from"./timeSupport.js";import{cleanFromGeometryEngine as d,getGeometry as m,transformCentroid as h}from"./utils.js";import{isStringField as f}from"../../support/fieldUtils.js";import{isNullCountSupported as p,calculateStringStatistics as y,calculateStatistics as g,processSummaryStatisticsResult as I,calculateUniqueValuesCount as x,createUVResult as T,calculateClassBreaks as V,resolveCBResult as F,calculateHistogram as b,getAttributeComparator as z,calculatePercentile as v}from"../../../statistics/utils.js";import{loadArcade as A}from"../../../support/arcadeOnDemand.js";class S{constructor(e,t,i){this.items=e,this.queryGeometry=t,this.definitionExpression=i.definitionExpression,this.geometryType=i.geometryType,this.hasM=i.hasM,this.hasZ=i.hasZ,this.objectIdField=i.objectIdField,this.spatialReference=i.spatialReference,this.fieldsIndex=i.fieldsIndex,this.timeInfo=i.timeInfo,this.featureAdapter=i.featureAdapter,this.aggregateAdapter=i.aggregateAdapter}get size(){return this.items.length}createQueryResponseForCount(e){const t=new n(e,this.featureAdapter,this.fieldsIndex);if(!e.outStatistics)return t.countDistinctValues(this.items);const{groupByFieldsForStatistics:i,having:s}=e;if(!!!(null==i?void 0:i.length))return 1;const a=new Map,r=new Map,o=new Set,l=e.outStatistics;for(const n of l){const{statisticType:e}=n,l="exceedslimit"!==e?n.onStatisticField:void 0;if(!r.has(l)){const e=[];for(const s of i){const i=this._getAttributeValues(t,s,a);e.push(i)}r.set(l,this._calculateUniqueValues(e,t.returnDistinctValues))}const u=r.get(l);for(const i in u){const{data:e,items:a}=u[i],r=e.join(",");s&&!t.validateItems(a,s)||o.add(r)}}return o.size}createQueryResponse(e){let t;if(e.outStatistics){t=e.outStatistics.some((e=>"exceedslimit"===e.statisticType))?this._createExceedsLimitQueryResponse(e):this._createStatisticsQueryResponse(e)}else t=this._createFeatureQueryResponse(e);return e.returnQueryGeometry&&(s(e.outSR)&&!a(this.queryGeometry.spatialReference,e.outSR)?t.queryGeometry=d({spatialReference:e.outSR,...l(this.queryGeometry,this.queryGeometry.spatialReference,e.outSR)}):t.queryGeometry=d({spatialReference:e.outSR,...this.queryGeometry})),t}createSnappingResponse(t,i){const s=this.featureAdapter,a=R(this.hasZ,this.hasM),{x:r,y:n}=t.point,o="number"==typeof t.distance?t.distance:t.distance.x,l="number"==typeof t.distance?t.distance:t.distance.y,u={candidates:[]},c="esriGeometryPolygon"===this.geometryType,d=this.getPointCreator(t.point,this.spatialReference,i);for(const m of this.items){const i=s.getGeometry(m);if(e(i))continue;const{coords:h,lengths:f}=i;if(1&t.types){let e=0;for(let t=0;t<f.length;t++){const i=f[t];for(let t=0;t<i;t++,e+=a){const c=h[e],f=h[e+1];if(t!==i-1){const t=h[e+a],i=h[e+a+1],{x:p,y}=_(r,n,c,f,t,i),g=(r-p)/o,I=(n-y)/l,x=g*g+I*I;x<=1&&u.candidates.push({type:"edge",objectId:s.getObjectId(m),distance:Math.sqrt(x),target:d(p,y),start:d(c,f),end:d(t,i)})}}}}if(2&t.types){const e=c?h.length-a:h.length;for(let t=0;t<e;t+=a){const e=h[t],i=h[t+1],a=(r-e)/o,c=(n-i)/l,f=a*a+c*c;f<=1&&u.candidates.push({type:"vertex",objectId:s.getObjectId(m),distance:Math.sqrt(f),target:d(e,i)})}}}return u.candidates.sort(((e,t)=>e.distance-t.distance)),u}getPointCreator(e,i,s){const r=t(s)&&!a(i,s)?e=>l(e,i,s):e=>e;return null!=e.z&&null!=e.m?(t,i)=>r({x:t,y:i,z:e.z,m:e.m}):null!=e.z?(t,i)=>r({x:t,y:i,z:e.z}):null!=e.m?(t,i)=>r({x:t,y:i,m:e.m}):(e,t)=>r({x:e,y:t})}executeAttributesQuery(e){const t=o(e.where,this.fieldsIndex);if(!t)return Promise.resolve(this);if(t.isStandardized){let i=0;const s=[];for(const e of this.items)t.testFeature(e,this.featureAdapter)&&(s[i++]=e);const a=new S(s,this.queryGeometry,this);return a.definitionExpression=e.where,Promise.resolve(a)}return Promise.reject(new TypeError("Where clause is not standardized"))}executeAggregateIdsQuery(t){if(!t.aggregateIds||!t.aggregateIds.length||e(this.aggregateAdapter))return Promise.resolve(this);const i=new Set;for(const e of t.aggregateIds){this.aggregateAdapter.getFeatureObjectIds(e).forEach((e=>i.add(e)))}const s=this.featureAdapter.getObjectId;return Promise.resolve(new S(this.items.filter((e=>i.has(s(e)))),this.queryGeometry,this))}executeObjectIdsQuery(e){if(!e.objectIds||!e.objectIds.length)return Promise.resolve(this);const t=new Set(e.objectIds),i=this.featureAdapter.getObjectId;return Promise.resolve(new S(this.items.filter((e=>t.has(i(e)))),this.queryGeometry,this))}executeTimeQuery(e){const i=c(this.timeInfo,e.timeExtent,this.featureAdapter);if(!t(i))return Promise.resolve(this);const s=this.items.filter(i);return Promise.resolve(new S(s,this.queryGeometry,this))}filterLatest(){const{trackIdField:e,startTimeField:t,endTimeField:i}=this.timeInfo,s=i||t,a=new Map,r=this.featureAdapter.getAttribute;for(const o of this.items){const t=r(o,e),i=r(o,s),n=a.get(t);(!n||i>r(n,s))&&a.set(t,o)}const n=Array.from(a.values());return Promise.resolve(new S(n,this.queryGeometry,this))}async project(e){if(!e||a(this.spatialReference,e))return this;const t=this.featureAdapter,i=(await u(this.items.map((e=>m(this.geometryType,this.hasZ,this.hasM,t.getGeometry(e)))),this.spatialReference,e)).map(((e,i)=>t.cloneWithGeometry(this.items[i],r(e,this.hasZ,this.hasM))));return new S(i,this.queryGeometry,{definitionExpression:this.definitionExpression,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,objectIdField:this.objectIdField,spatialReference:e,fieldsIndex:this.fieldsIndex,timeInfo:this.timeInfo,featureAdapter:this.featureAdapter})}async createSummaryStatisticsResponse(e,t){const{field:i,valueExpression:s,normalizationField:a,normalizationType:r,normalizationTotal:n,minValue:o,maxValue:l,scale:u}=t,c=this.fieldsIndex.isDateField(i),d=await this._getDataValues(e,{field:i,valueExpression:s,normalizationField:a,normalizationType:r,normalizationTotal:n,scale:u}),m=p({normalizationType:r,normalizationField:a,minValue:o,maxValue:l}),h=this.fieldsIndex.get(i),x={value:.5,fieldType:null==h?void 0:h.type},T=f(h)?y({values:d,supportsNullCount:m,percentileParams:x}):g({values:d,minValue:o,maxValue:l,useSampleStdDev:!r,supportsNullCount:m,percentileParams:x});return I(T,c)}async createUniqueValuesResponse(e,t){const{field:i,valueExpression:s,domain:a,returnAllCodedValues:r,scale:n}=t,o=await this._getDataValues(e,{field:i,valueExpression:s,scale:n}),l=x(o);return T(l,a,r)}async createClassBreaksResponse(e,t){const{field:i,valueExpression:s,normalizationField:a,normalizationType:r,normalizationTotal:n,classificationMethod:o,standardDeviationInterval:l,minValue:u,maxValue:c,numClasses:d,scale:m}=t,h=await this._getDataValues(e,{field:i,valueExpression:s,normalizationField:a,normalizationType:r,normalizationTotal:n,scale:m}),f=V(h,{field:i,normalizationField:a,normalizationType:r,normalizationTotal:n,classificationMethod:o,standardDeviationInterval:l,minValue:u,maxValue:c,numClasses:d});return F(f,o)}async createHistogramResponse(e,t){const{field:i,valueExpression:s,normalizationField:a,normalizationType:r,normalizationTotal:n,classificationMethod:o,standardDeviationInterval:l,minValue:u,maxValue:c,numBins:d,scale:m}=t,h=await this._getDataValues(e,{field:i,valueExpression:s,normalizationField:a,normalizationType:r,normalizationTotal:n,scale:m});return b(h,{field:i,normalizationField:a,normalizationType:r,normalizationTotal:n,classificationMethod:o,standardDeviationInterval:l,minValue:u,maxValue:c,numBins:d})}_sortFeatures(e,t,i){if(e.length>1&&t&&t.length)for(const s of t.reverse()){const t=s.split(" "),a=t[0],r=this.fieldsIndex.get(a),n=t[1]&&"desc"===t[1].toLowerCase(),o=z(null==r?void 0:r.type,n);e.sort(((e,t)=>{const s=i(e,a,r),n=i(t,a,r);return o(s,n)}))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:s,hasM:a,hasZ:r,objectIdField:n,spatialReference:o}=this,{outFields:l,outSR:u,quantizationParameters:c,resultRecordCount:m,resultOffset:h,returnZ:f,returnM:p}=e,y=null!=m&&t.length>(h||0)+m,g=l&&(l.includes("*")?[...this.fieldsIndex.fields]:l.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:y,features:this._createFeatures(e,t),fields:g,geometryType:s,hasM:a&&p,hasZ:r&&f,objectIdFieldName:n,spatialReference:d(u||o),transform:c&&i(c)||null}}_createFeatures(e,t){const s=new n(e,this.featureAdapter,this.fieldsIndex),{hasM:a,hasZ:r}=this,{orderByFields:o,quantizationParameters:l,returnGeometry:u,returnCentroid:c,maxAllowableOffset:d,resultOffset:f,resultRecordCount:p,returnZ:y=!1,returnM:g=!1}=e,I=r&&y,x=a&&g;let T=[],V=0;const F=[...t];if(this._sortFeatures(F,o,((e,t,i)=>s.getFieldValue(e,t,i))),u||c){const e=i(l);if(u&&!c)for(const t of F)T[V++]={attributes:s.getAttributes(t),geometry:m(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,I,x)};else if(!u&&c)for(const t of F)T[V++]={attributes:s.getAttributes(t),centroid:h(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of F)T[V++]={attributes:s.getAttributes(t),centroid:h(this,this.featureAdapter.getCentroid(t,this),e),geometry:m(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,I,x)}}else for(const i of F){const e=s.getAttributes(i);e&&(T[V++]={attributes:e})}const b=f||0;if(null!=p){const e=b+p;T=T.slice(b,Math.min(T.length,e))}return T}_createExceedsLimitQueryResponse(e){let i=!1,s=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const t of e.outStatistics)if("exceedslimit"===t.statisticType){s=null!=t.maxPointCount?t.maxPointCount:Number.POSITIVE_INFINITY,a=null!=t.maxRecordCount?t.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=t.maxVertexCount?t.maxVertexCount:Number.POSITIVE_INFINITY;break}if("esriGeometryPoint"===this.geometryType)i=this.items.length>s;else if(this.items.length>a)i=!0;else{const e=this.hasZ?this.hasM?4:3:this.hasM?3:2,s=this.featureAdapter;i=this.items.reduce(((e,i)=>{const a=s.getGeometry(i);return e+(t(a)&&a.coords.length||0)}),0)/e>r}return{fields:[{name:"exceedslimit",type:"esriFieldTypeInteger",alias:"exceedslimit",sqlType:"sqlTypeInteger",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(i)}}]}}_createStatisticsQueryResponse(e){const t={attributes:{}},i=[],s=new Map,a=new Map,r=new Map,o=new Map,l=new n(e,this.featureAdapter,this.fieldsIndex),u=e.outStatistics,{groupByFieldsForStatistics:c,having:d,orderByFields:m}=e,h=c&&c.length,f=!!h,p=f&&c[0],y=f&&!this.fieldsIndex.get(p);for(const n of u){const{outStatisticFieldName:e,statisticType:u}=n,m=n,g="exceedslimit"!==u?n.onStatisticField:void 0,I="percentile_disc"===u||"percentile_cont"===u,x=f&&1===h&&(g===p||y)&&"count"===u;if(f){if(!r.has(g)){const e=[];for(const t of c){const i=this._getAttributeValues(l,t,s);e.push(i)}r.set(g,this._calculateUniqueValues(e,l.returnDistinctValues))}const t=r.get(g);for(const i in t){const{count:a,data:r,items:n,itemPositions:u}=t[i],h=r.join(",");if(!d||l.validateItems(n,d)){const t=o.get(h)||{attributes:{}};let i=null;if(x)i=a;else{const e=this._getAttributeValues(l,g,s),t=u.map((t=>e[t]));i=I&&"statisticParameters"in m?this._getPercentileValue(m,t):this._getStatisticValue(m,t,null,l.returnDistinctValues)}t.attributes[e]=i,c.forEach(((e,i)=>t.attributes[this.fieldsIndex.get(e)?e:`EXPR_${i+1}`]=r[i])),o.set(h,t)}}}else{const i=this._getAttributeValues(l,g,s);t.attributes[e]=I&&"statisticParameters"in m?this._getPercentileValue(m,i):this._getStatisticValue(m,i,a,l.returnDistinctValues)}i.push({name:e,alias:e,type:"esriFieldTypeDouble"})}const g=f?Array.from(o.values()):[t];return this._sortFeatures(g,m,((e,t)=>e.attributes[t])),{fields:i,features:g}}_getStatisticValue(e,t,i,s){const{onStatisticField:a,statisticType:r}=e;let n=null;n=null!=i&&i.has(a)?i.get(a):f(this.fieldsIndex.get(a))?y({values:t,returnDistinct:s}):g({values:t,minValue:null,maxValue:null,useSampleStdDev:!0}),i&&i.set(a,n);return n["var"===r?"variance":r]}_getPercentileValue(e,t){const{onStatisticField:i,statisticParameters:s,statisticType:a}=e,{value:r,orderBy:n}=s,o=this.fieldsIndex.get(i),l={value:r,orderBy:n,fieldType:null==o?void 0:o.type,isDiscrete:"percentile_disc"===a};return v(t,l)}_getAttributeValues(e,t,i){if(i.has(t))return i.get(t);const s=this.fieldsIndex.get(t),a=this.items.map((i=>e.getFieldValue(i,t,s)));return i.set(t,a),a}_getAttributeNormalizedValues(e,t){return this.items.map((i=>e.getNormalizedValue(i,{field:t.field,fieldInfo:this.fieldsIndex.get(t.field),normalizationField:t.normalizationField,normalizationFieldInfo:this.fieldsIndex.get(t.normalizationField),normalizationType:t.normalizationType,normalizationTotal:t.normalizationTotal})))}async _getAttributeExpressionValues(e,t,i){const{arcadeUtils:s}=await A(),a=s.createFunction(t),r=i&&s.getViewInfo(i);return this.items.map((t=>e.getExpressionValue(t,{compiledFunc:a,viewInfo:r},s)))}_calculateUniqueValues(e,t){const i={},s=this.items,a=s.length;for(let r=0;r<a;r++){const a=s[r],n=[];for(const t of e)n.push(t[r]);const o=n.join(",");t?null==i[o]&&(i[o]={count:1,data:n,items:[a],itemPositions:[r]}):null==i[o]?i[o]={count:1,data:n,items:[a],itemPositions:[r]}:(i[o].count++,i[o].items.push(a),i[o].itemPositions.push(r))}return i}async _getDataValues(e,t){const i=new n(e,this.featureAdapter,this.fieldsIndex),{valueExpression:s,field:a,normalizationField:r,normalizationType:o,normalizationTotal:l,scale:u}=t,c=s?{viewingMode:"map",scale:u,spatialReference:e.outSR||this.spatialReference}:null;return s?this._getAttributeExpressionValues(i,s,c):this._getAttributeNormalizedValues(i,{field:a,normalizationField:r,normalizationType:o,normalizationTotal:l})}}function _(e,t,i,s,a,r){const n=a-i,o=r-s,l=n*n+o*o,u=(e-i)*n+(t-s)*o,c=Math.min(1,Math.max(0,u/l));return{x:i+n*c,y:s+o*c}}function R(e,t){return e?t?4:3:t?3:2}export{S as default};
