/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import"../geometry.js";import{isSome as r}from"../core/maybe.js";import{urlToObject as t}from"../core/urlUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/has.js";import"../core/accessorSupport/ensureType.js";import{reader as o}from"../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../core/accessorSupport/decorators/subclass.js";import a from"./FeatureLayer.js";import l from"./graphics/sources/CSVSource.js";import{createCapabilities as n}from"./graphics/sources/support/clientSideDefaults.js";import u from"../rest/support/Query.js";import{r as d,w as p}from"../chunks/persistableUrlUtils.js";import c from"../geometry/SpatialReference.js";let y=class extends a{constructor(...e){super(...e),this.capabilities=n(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=c.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,r){return null!=r.showLabels?r.showLabels:!!(r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.labelingInfo)}set url(e){if(!e)return void this._set("url",e);const r=t(e);this._set("url",r.path),r.query&&(this.customParameters={...this.customParameters,...r.query})}async createGraphicsSource(e){const r=new l({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url},customParameters:this.customParameters});return this._set("source",r),await r.load({signal:e}),this.read({locationInfo:r.locationInfo,columnDelimiter:r.delimiter},{origin:"service",url:this.parsedUrl}),r}queryFeatures(e,r){return this.load().then((()=>this.source.queryFeatures(u.from(e)||this.createQuery()))).then((e=>{if(null!=e&&e.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))}queryObjectIds(e,r){return this.load().then((()=>this.source.queryObjectIds(u.from(e)||this.createQuery())))}queryFeatureCount(e,r){return this.load().then((()=>this.source.queryFeatureCount(u.from(e)||this.createQuery())))}queryExtent(e,r){return this.load().then((()=>this.source.queryExtent(u.from(e)||this.createQuery())))}write(e,r){return super.write(e,{...r,writeLayerSchema:!0})}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return r(t)&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};e([i({readOnly:!0,json:{read:!1,write:!1}})],y.prototype,"capabilities",void 0),e([i({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],y.prototype,"delimiter",void 0),e([i({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],y.prototype,"editingEnabled",void 0),e([i({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],y.prototype,"fields",void 0),e([i({type:Boolean,readOnly:!0})],y.prototype,"isTable",null),e([o("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],y.prototype,"readWebMapLabelsVisible",null),e([i({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],y.prototype,"latitudeField",void 0),e([i({type:["show","hide"]})],y.prototype,"listMode",void 0),e([i({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],y.prototype,"locationType",void 0),e([i({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],y.prototype,"longitudeField",void 0),e([i({type:["CSV"]})],y.prototype,"operationalLayerType",void 0),e([i()],y.prototype,"outFields",void 0),e([i({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],y.prototype,"path",void 0),e([i({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],y.prototype,"portalItem",void 0),e([i({json:{read:!1},cast:null,type:l,readOnly:!0})],y.prototype,"source",void 0),e([i({json:{read:!1},value:"csv",readOnly:!0})],y.prototype,"type",void 0),e([i({json:{read:d,write:{isRequired:!0,ignoreOrigin:!0,writer:p}}})],y.prototype,"url",null),y=e([s("esri.layers.CSVLayer")],y);const h=y;export{h as default};
