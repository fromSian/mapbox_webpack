/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../Graphic.js";import"../../intl.js";import"../../symbols.js";import r from"../../core/Handles.js";import{destroyMaybe as s}from"../../core/maybe.js";import{formatDecimal as i,formatImperialArea as o,formatMetricArea as a,formatImperialLength as n,formatMetricLength as l}from"../../core/unitFormatUtils.js";import{convertUnit as m}from"../../core/unitUtils.js";import{init as c}from"../../core/watchUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{geodesicDensify as u,planarLength as d,simplify as y,geodesicLength as f,geodesicArea as v,planarArea as _}from"../../geometry/geometryEngine.js";import{isLoaded as g,load as w,project as b}from"../../geometry/projection.js";import{isSupported as j,geodesicDensify as S,geodesicLengths as L,geodesicAreas as A}from"../../geometry/support/geodesicUtils.js";import G from"../../layers/GraphicsLayer.js";import k from"../../layers/GroupLayer.js";import q from"../../views/draw/Draw.js";import{createManipulatorDragEventPipeline as x,screenToMap as T,dragGraphic as W}from"../../views/interactive/dragEventPipeline.js";import{GraphicManipulator as R}from"../../views/interactive/GraphicManipulator.js";import{InteractiveToolBase as D}from"../../views/interactive/InteractiveToolBase.js";import{fetchMessageBundle as I}from"../../intl/messages.js";import{onLocaleChange as M}from"../../intl/locale.js";import C from"../../geometry/Point.js";import U from"../../symbols/SimpleFillSymbol.js";import z from"../../symbols/SimpleLineSymbol.js";import E from"../../symbols/TextSymbol.js";import P from"../../symbols/Font.js";import F from"../../symbols/SimpleMarkerSymbol.js";import O from"../../geometry/Polyline.js";import B from"../../geometry/SpatialReference.js";import H from"../../geometry/Polygon.js";const N=1e5;let J=class extends D{constructor(){super(...arguments),this._drawActive=!1,this._handles=new r,this._graphicsLayer=new G,this._manipulatorLayer=new G,this._groupLayer=new k({layers:[this._graphicsLayer,this._manipulatorLayer],listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){I("esri/core/t9n/Units").then((e=>{this.messages=e})),this._handles.add(M((async()=>{this.messages=await I("esri/core/t9n/Units")}))),this.startToolCreation()}destroy(){this._draw=s(this._draw),this._handles=s(this._handles),this._graphicsLayer=s(this._graphicsLayer),this._manipulatorLayer=s(this._manipulatorLayer)}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onAttach(){const e=this.view;this._draw=new q({view:e}),e.map.add(this._groupLayer),e.focus(),this._handles.add([c(this,["unit","geodesicDistanceThreshold","palette","messages"],(()=>{this._vertices.length>0&&this._updateGraphics()})),c(this,"view.spatialReference",(e=>{X(e)&&!g()&&w()}))]),this.finishToolCreation()}onDetach(){const{map:e}=this.view;this._draw.view=null,this._draw=s(this._draw),e.remove(this._groupLayer),this._handles.removeAll(),this._graphicsLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null)}onShow(){this._groupLayer.visible=!0}onHide(){this._groupLayer.visible=!1}reset(){this._vertices=[],this._graphicsLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1,this._updateSketch([])}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),e.on("draw-complete",(()=>this._stopSketch()))}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach((e=>{e.manipulator.interactive=!0})),this._drawActive=!1,this.complete()}_updateSketch(e){if(X(this.view.spatialReference)&&!g())return;if(e.length<2)return this._vertices=[],this.manipulators.removeAll(),void this._graphicsLayer.removeAll();this.finishToolCreation();const t=this.view.spatialReference;for(;this._vertices.length>e.length;){const{manipulatorId:e}=this._vertices.pop();this.manipulators.remove(e)}for(let n=this._vertices.length;n<e.length;n++){const[r,s]=e[n],i=K(new C({x:r,y:s,spatialReference:t}),this.view,this._manipulatorLayer,this.palette),o=this.manipulators.add(i);x(i,((e,t)=>{t.next(T(this.view)).next(W(e.graphic,2)).next((()=>{const t=e.graphic.geometry;this._vertices[n].coord=[t.x,t.y],this._updateGraphics()}))})),this._vertices.push({manipulatorId:o,coord:[r,s]})}const r=this._vertices.length-1,s=this._vertices[r],[i,o]=e[r];if(s.coord[0]!==i||s.coord[1]!==o){s.coord=[i,o];const e=new C({x:i,y:o,spatialReference:t});this.manipulators.findById(s.manipulatorId).graphic.geometry=e}const a=this._drawActive?this._vertices[r].manipulatorId:null;this.manipulators.forEach((e=>{e.manipulator.interactive=null==a||e.id!==a})),this._updateGraphics()}_updateGraphics(){const e=Q(this._vertices.map((e=>e.coord)),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:r,fillGeometry:s,outlineGeometry:i}=e;this._set("measurement",r);const o=r?Y(this.messages,r,this.unit):null;if(this._set("measurementLabel",o),!s&&!i)return;let a,n,l;const{graphics:m}=this._graphicsLayer;if(3===m.length)a=m.getItemAt(0),n=m.getItemAt(1),l=m.getItemAt(2);else{const{fillColor:e,pathColor:r,pathWidth:s}=this.palette;a=new t({symbol:new U({color:e,outline:null})}),n=new t({symbol:new z({color:r,width:s})}),l=new t({symbol:new E({color:[255,255,255,1],font:new P({size:14,family:"sans-serif"}),haloColor:[0,0,0,.5],haloSize:2})}),m.removeAll(),m.addMany([a,n,l])}a.geometry=s,n.geometry=i,l.geometry=null==s?void 0:s.centroid,l.symbol.text=null==o?void 0:o.area}};function K(e,r,s,i){const o=new F({style:"circle",color:i.handleColor,size:i.handleWidth,outline:{type:"simple-line",width:0}}),a=new F({style:"circle",color:i.handleColor,size:1.5*i.handleWidth,outline:{type:"simple-line",width:0}}),n=new t({geometry:e,symbol:o});return new R({view:r,layer:s,graphic:n,focusedSymbol:a})}function Q(e,t,r){if(2===e.length){const s=new O({paths:e,spatialReference:t});let i;if(t.isGeographic)if(j(t))i=S(s,N);else{const e=b(s,B.WGS84),r=S(e,N);i=b(r,t)}else if(t.isWebMercator)i=u(s,N,"meters");else{if(d(s,"meters")>=r){const e=b(s,B.WGS84),r=S(e,N);i=b(r,t)}else i=s}return{measurement:null,fillGeometry:null,outlineGeometry:i}}e.push(e[0]);const s=new O({paths:[e],spatialReference:t}),i=new H({rings:[e],spatialReference:t});let o,a,n=null,l=null;if(t.isGeographic)if(j(t)){if(n=S(s,N),l=S(i,N),l=y(l),!l)return null;o=L([s],"meters")[0],a=A([l],"square-meters")[0]}else{const e=B.WGS84,r=b(s,e),m=b(i,e);if(n=S(r,N),l=S(m,N),l=y(l),!l)return null;o=L([r],"meters")[0],a=A([l],"square-meters")[0],n=b(n,t),l=b(l,t)}else if(t.isWebMercator){if(n=u(s,N,"meters"),l=u(i,N,"meters"),l=y(l),!l)return null;o=f(s,"meters"),a=v(l,"square-meters")}else{const e=d(s,"meters");if(e>=r){const e=B.WGS84,r=b(s,e),m=b(i,e);if(n=S(r,N),l=S(m,N),l=y(l),!l)return null;o=L([r],"meters")[0],a=A([l],"square-meters")[0],n=b(n,t),l=b(l,t)}else{if(n=s,l=y(i),!l)return null;o=e,a=_(l,"square-meters")}}return{measurement:{geometry:l,area:a,perimeter:o},fillGeometry:l,outlineGeometry:n}}function V(e){return null!=e}function X(e){if(!e)return!1;const{isGeographic:t,isWebMercator:r,isWGS84:s}=e;return t&&!s&&!j(e)||!t&&!r}function Y(e,t,r){if(!t||!e)return null;const s={area:null,perimeter:null},{area:c,perimeter:h}=t;switch(r){case"metric":s.area=a(e,c,"square-meters");break;case"imperial":s.area=o(e,c,"square-meters");break;default:{const t=m(c,"square-meters",r);s.area=i(e,t,r);break}}const p=Z(r);if(p)switch(p){case"metric":s.perimeter=l(e,h,"meters");break;case"imperial":s.perimeter=n(e,h,"meters");break;default:{const t=m(h,"meters",p);s.perimeter=i(e,t,p);break}}else s.perimeter="";return s}function Z(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}e([h()],J.prototype,"_drawActive",void 0),e([h()],J.prototype,"cursor",null),e([h({value:!0})],J.prototype,"editable",null),e([h({type:Number})],J.prototype,"geodesicDistanceThreshold",void 0),e([h({readOnly:!0})],J.prototype,"measurement",void 0),e([h({readOnly:!0})],J.prototype,"measurementLabel",void 0),e([h()],J.prototype,"messages",void 0),e([h()],J.prototype,"palette",void 0),e([h()],J.prototype,"unit",void 0),e([h({constructOnly:!0})],J.prototype,"view",void 0),J=e([p("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],J);const $=J;export{Q as createAreaMeasurementInfo2D,Y as createAreaMeasurementLabel,$ as default,V as isSupported};
