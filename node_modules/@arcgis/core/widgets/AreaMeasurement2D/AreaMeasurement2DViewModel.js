/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Handles.js";import s from"../../core/Logger.js";import{isNone as i,isSome as r}from"../../core/maybe.js";import{measurementAreaUnits as o}from"../../core/unitUtils.js";import{init as a}from"../../core/watchUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{defaultUnitPropertyMetadata as d}from"../../properties/defaultUnit.js";import p,{isSupported as u}from"./AreaMeasurement2DTool.js";import{InteractiveToolViewModel as h}from"../support/InteractiveToolViewModel.js";const m={handleWidth:8,handleColor:[255,128,0,.5],pathWidth:2,pathColor:[255,128,0,1],fillColor:[255,128,0,.3]},c=s.getLogger("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel");let f=class extends h{constructor(e){super(e),this.logger=c,this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views.",this._handles=new t,this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null,this.palette=m}initialize(){this._handles.add([a(this,["unit","palette","geodesicDistanceThreshold"],((e,t,s)=>{this.tool&&(this.tool[s]=e)}))])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get state(){return this.disabled||i(this.view)||!u(this.view.spatialReference)?"disabled":r(this.tool)&&this.tool.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){void 0!==e?this._override("unit",this._validateUnit(e)):this._clearOverride("unit")}get unitOptions(){return o}set unitOptions(e){void 0!==e?this._override("unitOptions",this._validateUnits(e)):this._clearOverride("unitOptions")}start(){return this.createTool()}clear(){this.removeTool()}createToolParams(){return{toolConstructor:p,constructorArguments:()=>({geodesicDistanceThreshold:this.geodesicDistanceThreshold,palette:this.palette,unit:this.unit})}}_validateUnit(e){return-1!==this.unitOptions.indexOf(e)?e:-1!==this.unitOptions.indexOf(this.defaultUnit)?this.defaultUnit:this.unitOptions[0]}_validateUnits(e=[]){const t=e.filter((e=>-1!==o.indexOf(e)));return 0===t.length?o.slice():t}};e([n(d)],f.prototype,"defaultUnit",void 0),e([n({type:Number})],f.prototype,"geodesicDistanceThreshold",void 0),e([n({readOnly:!0,aliasOf:"tool.measurement"})],f.prototype,"measurement",void 0),e([n({readOnly:!0,aliasOf:"tool.measurementLabel"})],f.prototype,"measurementLabel",void 0),e([n()],f.prototype,"palette",void 0),e([n({readOnly:!0})],f.prototype,"state",null),e([n({type:String})],f.prototype,"unit",null),e([n({type:[String]})],f.prototype,"unitOptions",null),f=e([l("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],f);const g=f;export{g as default};
