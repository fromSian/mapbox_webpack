/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{isSome as t}from"../../core/maybe.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/set.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import a from"./CreateWorkflowData.js";import{Edits as i}from"./Edits.js";import r from"./Workflow.js";import{createWorkflowSteps as s,avoidFeatureTemplateSelectionWithOnlyOneItem as n,setUpFeatureAdd as l,findLayerInfo as c,getVisualVariableAttributes as d,startUpdatingFeature as f,visualVariableInteractiveUpdate as w,updateGraphicSymbolWhenRequired as u}from"./workflowUtils.js";var m;let p=m=class extends r{constructor(e){super(e),this.type="create"}static create(e,t,o){const r=new m({data:new a({edits:new i,viewModel:e}),onCommit:async e=>{await o(e.creationInfo.layer,{addFeatures:[e.edits.feature]})}});return r._set("steps",this._createWorkflowSteps(r,t)),r}static _createWorkflowSteps(e,o="awaiting-feature-creation-info"){const{data:a,handles:i}=e,r=s(["awaiting-feature-creation-info","awaiting-feature-to-create","editing-new-feature"],o,{"awaiting-feature-creation-info":()=>({id:"awaiting-feature-creation-info",async setUp(){a.creationInfo=null,a.edits.feature=null,a.viewModel.featureTemplatesViewModel.select(null),i.add(a.viewModel.featureTemplatesViewModel.on("select",(({item:e})=>{a.creationInfo={layer:e.layer,template:e.template},a.viewModel.activeWorkflow.next()})),this.id)},async tearDown(){i.remove(this.id)}}),"awaiting-feature-to-create":()=>({id:"awaiting-feature-to-create",async setUp(){i.add(await l(a.viewModel.sketchViewModel,a.creationInfo,(e=>{a.edits.feature=e,a.viewModel.activeWorkflow.next()})),this.id)},async tearDown(){i.remove(this.id)}}),"editing-new-feature":()=>({id:"editing-new-feature",async setUp(){const e=a.edits.feature,o=e.sourceLayer,r=a.viewModel,s=r.sketchViewModel,n=c(r.layerInfos,o),l=null==n?void 0:n.formTemplate,m=l?null:null==n?void 0:n.fieldConfig;r.featureFormViewModel.set({feature:e,fieldConfig:m,formTemplate:l}),s.allowDeleteKey=!1;const p=d(e);await f(s,e,o,p);const v=s.on("update",(async e=>{const a=e.graphics[0];if("complete"===e.state)return f(s,a,o,p);await w(s.view,a,e,p);const i=a.attributes;if(t(p.rotation)){const{field:e}=p.rotation;r.featureFormViewModel.setValue(e,i[e])}if(t(p.size)){const{field:e}=p.size;r.featureFormViewModel.setValue(e,i[e])}}));i.add([a.viewModel.featureFormViewModel.on("value-change",(async()=>{a.edits.updateAttributes(a.viewModel.featureFormViewModel.getValues()),e.attributes=a.edits.feature.attributes,"3d"===s.view.type&&await u(e)})),v],this.id)},async tearDown(e){e.cancelled&&a.viewModel.sketchViewModel.layer.removeAll(),i.remove(this.id)}})});return n(a,r)}};p=m=e([o("esri.widgets.Editor.CreateWorkflow")],p);const v=p;export{v as default};
