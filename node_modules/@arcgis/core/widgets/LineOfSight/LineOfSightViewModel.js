/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../analysis/LineOfSight.js";import s from"../../analysis/LineOfSightTarget.js";import o from"../../core/Collection.js";import{castForReferenceSetter as i,referenceSetter as r}from"../../core/collectionUtils.js";import a from"../../core/Handles.js";import{handlesGroup as n}from"../../core/handleUtils.js";import l from"../../core/Logger.js";import{destroyMaybe as c,isNone as d,isSome as h,applySome as g,unwrap as m}from"../../core/maybe.js";import{react as y}from"../../core/reactiveUtils.js";import{whenTrueOnce as T}from"../../core/watchUtils.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as v}from"../../core/accessorSupport/decorators/subclass.js";import{LineOfSightTool as w}from"../../views/3d/interactive/analysisTools/lineOfSight/LineOfSightTool.js";import u from"./LineOfSightTarget.js";import{InteractiveToolViewModel as f}from"../support/InteractiveToolViewModel.js";const _=l.getLogger("esri.widgets.LineOfSight.LineOfSightViewModel"),M=o.ofType(u);let V=class extends f{constructor(e){super(e),this.logger=_,this.supportedViewType="3d",this.unsupportedErrorMessage="LineOfSightViewModel is only supported in 3D views.",this.handles=new a,this._vmTargetsToConnection=new Map,this._analysisTargetsToConnection=new Map,this.ready=!1,this.analysis=new t,this.analysisView=null,this.observer=null}initialize(){this.handles.add([this.targets.on("after-add",(e=>this._onViewModelTargetAdded(e.item))),this.targets.on("after-remove",(e=>this._onViewModelTargetRemoved(e.item))),this.analysis.targets.on("after-add",(e=>this._onAnalysisTargetAdded(e.item))),this.analysis.targets.on("after-remove",(e=>this._onAnalysisTargetRemoved(e.item)))])}destroy(){this._analysisTargetsToConnection.forEach((e=>e.remove())),this.handles=c(this.handles)}get state(){return this.disabled||!this.ready?"disabled":d(this.tool)||"pending"===this.tool.toolState?"ready":this.tool.state}get targets(){return this._get("targets")||new M}set targets(e){this._set("targets",r(e,this.targets,M))}async start(){return this.ready||await T(this,"ready"),this.createTool()}clear(){this.removeTool(),this.observer=null,this.targets.removeAll()}continue(){h(this.tool)&&this.tool.continue()}stop(){h(this.tool)&&this.tool.stop()}get testInfo(){return{getAnalysisTargetFromViewModelTarget:e=>g(this._vmTargetsToConnection.get(e),(e=>e.analysisTarget))}}createToolParams(){return{toolConstructor:w,constructorArguments:()=>({analysis:this.analysis})}}async onConnectToAnalysisView(e){this.analysisView=e,this.ready=!0,this.handles.add([this.analysisView.on("result-changed",(e=>{const t=this._analysisTargetsToConnection.get(e.target);h(e.result)?(t.viewModelTarget.intersectedGraphic=e.result.intersectedGraphic,t.viewModelTarget.intersectedLocation=m(e.result.intersectedLocation),t.viewModelTarget.visible=e.result.visible):(t.viewModelTarget.intersectedGraphic=null,t.viewModelTarget.intersectedLocation=null,t.viewModelTarget.visible=void 0)}))],"view")}onDisconnectFromAnalysisView(){this.ready=!1,null!=this.handles&&this.handles.remove("view"),this.analysisView=null}_onViewModelTargetAdded(e){if(this._vmTargetsToConnection.get(e))return;const t=new s({location:e.location});this._connectViewModelWithAnalysisTarget(e,t),this.analysis.targets.add(t)}_onViewModelTargetRemoved(e){const t=this._vmTargetsToConnection.get(e);t&&(t.remove(),this.analysis.targets.remove(t.analysisTarget))}_onAnalysisTargetAdded(e){if(this._analysisTargetsToConnection.get(e))return;const t=new u({location:g(e.location,(e=>e.clone()))});this._connectViewModelWithAnalysisTarget(t,e),this.targets.add(t)}_onAnalysisTargetRemoved(e){const t=this._analysisTargetsToConnection.get(e);t&&(t.remove(),this.targets.remove(t.viewModelTarget))}_connectViewModelWithAnalysisTarget(e,t){let s=!1;const o=n([y((()=>t.location),(t=>{s||(s=!0,e.location=g(t,(e=>e.clone())),s=!1)}),{sync:!0}),y((()=>e.location),(e=>{s||(s=!0,t.location=g(e,(e=>e.clone())),s=!1)}),{sync:!0})]),i={analysisTarget:t,viewModelTarget:e,remove:()=>{o.remove(),this._vmTargetsToConnection.delete(e),this._analysisTargetsToConnection.delete(t)}};this._vmTargetsToConnection.set(e,i),this._analysisTargetsToConnection.set(t,i)}};e([p({readOnly:!0})],V.prototype,"state",null),e([p()],V.prototype,"ready",void 0),e([p()],V.prototype,"analysis",void 0),e([p()],V.prototype,"analysisView",void 0),e([p({aliasOf:"analysis.observer"})],V.prototype,"observer",void 0),e([p({type:M,cast:i,nonNullable:!0})],V.prototype,"targets",null),V=e([v("esri.widgets.lineOfSight.LineOfSightViewModel")],V);const j=V;export{j as default};
