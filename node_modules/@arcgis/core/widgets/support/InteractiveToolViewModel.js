/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import s from"../../core/Error.js";import i from"../../core/Handles.js";import{isSome as o,abortMaybe as r,destroyMaybe as n,isNone as a,unwrap as l}from"../../core/maybe.js";import{createTask as h,throwIfAborted as c,isAborted as p}from"../../core/promiseUtils.js";import{react as d,syncAndInitial as w,reactTruthy as v}from"../../core/reactiveUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as y}from"../../core/accessorSupport/decorators/subclass.js";import{evaluateToolConstructorArguments as _}from"../../views/interactive/interactiveToolUtils.js";let m=class extends t{constructor(e){super(e),this.analysis=null,this.tool=null,this._baseHandles=new i,this._loggedUnsupportedErrorOnce=!1,this._reconnectViewTask=null,this._isAnalysisOwner=!0,this._parentChangeFromReconnect=!1,this._toolCreationTask=null,e&&null!=e.visible&&(this.visible=e.visible)}initialize(){this._baseHandles.add([d((()=>({ready:o(this.view)&&this.view.ready,supported:this.supported})),(({ready:e,supported:t})=>{!e||t||this._loggedUnsupportedErrorOnce||(this.logError(this.unsupportedErrorMessage),this._loggedUnsupportedErrorOnce=!0),this._scheduleViewReconnect()}),w),d((()=>o(this.analysis)?this.analysis.parent:null),(e=>{this._isAnalysisOwner&&o(e)&&e!==this.view&&(this._isAnalysisOwner=!1),this._parentChangeFromReconnect||this._scheduleViewReconnect()}),{sync:!0})])}destroy(){this.removeTool(),this._reconnectViewTask=r(this._reconnectViewTask),this._disconnectFromView(this.view),this.view=null,this._baseHandles=n(this._baseHandles),this._isAnalysisOwner&&o(this.analysis)&&(this.analysis.destroy(),this._set("analysis",null))}get supported(){return a(this.view)||this.view.type===this.supportedViewType}get view(){return this._get("view")}set view(e){if(e===this.view)return;this._disconnectFromView(this.view),this.removeTool(),this._set("view",e);const t="tools";this._baseHandles.remove(t),a(e)||this._baseHandles.add(e.tools.on("change",(e=>{if(this.tool)for(const t of e.removed)if(this.tool===t){t.destroyed||t.destroy(),this._set("tool",null);break}})),t)}set visible(e){this._set("visible",e),o(this.tool)&&(this.tool.visible=e),e||(this._toolCreationTask=r(this._toolCreationTask))}get active(){return o(this._toolCreationTask)&&!this._toolCreationTask.finished||o(this.tool)&&this.tool.active}get disabled(){return a(this.view)||!this.view.ready||!this.supported}get creatingTool(){return o(this._toolCreationTask)&&!this._toolCreationTask.finished}onConnectToAnalysisView(e){}onDisconnectFromAnalysisView(){}async createTool(){const e="Tool creation was interrupted by another tool being created.";if(o(this.tool)&&this.tool.rejectCreation(e),this.removeTool(),a(this.view)||!this.supported)return Promise.reject(new s("tool:create","The view does not support the tool.",this.unsupportedErrorMessage));this._toolCreationTask=h((async t=>{await l(this.view).whenReady(),c(t,e);const s=this.createToolParams(),i=_(s.constructorArguments);o(this.analysis)&&(i.analysis=this.analysis);const r=new s.toolConstructor({visible:this.visible,...i,view:this.view});return await r.whenCreationStarted(),p(t)&&r.rejectCreation(e),c(t,e),r}));const t=await this._toolCreationTask.promise;this._set("tool",t),t.completed?this.view.tools.add(t):(this.view.addAndActivateTool(t),v((()=>t.completed),(()=>{t.active&&o(this.view)&&(this.view.activeTool=null)}),{initial:!0,once:!0}))}removeTool(){this._toolCreationTask=r(this._toolCreationTask),a(this.tool)||(o(this.view)&&this.view.tools&&this.view.tools.remove(this.tool),this.tool.rejectCreation("Rejecting creation because tool is removed."),this.tool.destroyed||this.tool.destroy(),this._set("tool",null))}_scheduleViewReconnect(){this._reconnectViewTask=r(this._reconnectViewTask),this._reconnectViewTask=h((e=>this._reconnectView(e)))}async _reconnectView(e){const t=o(this.view)&&this.view.ready&&this.supported;if(p(e))return;if(this._disconnectFromView(this.view),!t||a(this.view))return;const s=this.view;if(o(this.analysis)){if(this._isAnalysisOwner){if(o(this.analysis.parent))return void this.logError("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,s.analyses.add(this.analysis),this._parentChangeFromReconnect=!1}const t=await s.whenAnalysisView(this.analysis);if(p(e))return void this._disconnectFromView(s);if(a(t))return void this.logError("Unable to retrieve analysis view for analysis. Analysis may not be part of the scene.");this.onConnectToAnalysisView(t)}}_disconnectFromView(e){o(this.analysis)&&(o(e)&&this._isAnalysisOwner&&(this._parentChangeFromReconnect=!0,e.analyses.remove(this.analysis),this._parentChangeFromReconnect=!1),this.onDisconnectFromAnalysisView())}logError(...e){this.logger.error(...e)}};e([u({constructOnly:!0})],m.prototype,"analysis",void 0),e([u({constructOnly:!0})],m.prototype,"tool",void 0),e([u()],m.prototype,"supported",null),e([u({value:null})],m.prototype,"view",null),e([u({type:Boolean,value:!0})],m.prototype,"visible",null),e([u()],m.prototype,"active",null),e([u()],m.prototype,"disabled",null),e([u()],m.prototype,"_toolCreationTask",void 0),e([u({readOnly:!0})],m.prototype,"creatingTool",null),m=e([y("esri.widgets.support.InteractiveToolViewModel")],m);export{m as InteractiveToolViewModel};
