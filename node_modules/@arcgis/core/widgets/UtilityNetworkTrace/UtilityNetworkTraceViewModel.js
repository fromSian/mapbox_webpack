/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Collection.js";import r from"../../core/Error.js";import s from"../../core/Evented.js";import{HandleOwnerMixin as i}from"../../core/HandleOwner.js";import a from"../../core/Logger.js";import{isSome as l}from"../../core/maybe.js";import{whenFalse as o}from"../../core/watchUtils.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../core/accessorSupport/decorators/subclass.js";import h from"../../geometry/Point.js";import{getObjectIdsFromElements as p,getFeaturesFromLayers as u}from"../../networks/support/utils.js";import{trace as g}from"../../rest/networks/trace.js";import d from"../../rest/networks/support/TraceLocation.js";import m from"../../rest/networks/support/TraceParameters.js";import{GeometryHandler as y}from"./support/GeometryHandler.js";import{GraphicHandler as f}from"./support/GraphicHandler.js";const w="esri.widgets.UtilityNetworkTrace.UtilityNetworkTraceViewModel",_=a.getLogger(w);let b=class extends(i(s.EventedAccessor)){constructor(e){super(e),this._activeProgress=!1,this._clickHandler=null,this._defaultGraphicColor={color:[255,255,0,.6],haloOpacity:.9,fillOpacity:.2,hex:"#FFFF00"},this._flags=[],this._geometryHandler=null,this._graphicHandler=null,this._highlightHandler=[],this._traces=[],this._traceResults=[],this._unObject=null,this.flags=[],this.gdbVersion="sde.DEFAULT",this.selectedTraces=[],this.selectOnComplete=!0,this.showGraphicsOnComplete=!0,this.showSelectionAttributes=!0}initialize(){this._geometryHandler=new y,this._graphicHandler=new f}destroy(){this.view=null}get state(){var e;return null!=(e=this.view)&&e.ready?"ready":"loading"}get view(){return this._get("view")}set view(e){e&&"2d"!==e.type&&_.error(new r("view:invalid-view","SceneView is not supported",{view:e})),this._set("view",e)}addFlagByHit(e){return new Promise(((t,r)=>{this.view.popup.autoOpenEnabled=!1,this._clickHandler&&this._clickHandler.remove(),this._clickHandler=this.view.on("click",(s=>{this.queryFlagByHitTest(s,e).then((e=>{this.view.popup.autoOpenEnabled=!0,this._clickHandler.remove(),t(e)})).catch((e=>{this.view.popup.autoOpenEnabled=!0,this._clickHandler.remove(),r(e)}))}))}))}addFlagsOnLoad(){return new Promise((async e=>{const t=[];await this.view.when();const r=o(this.view,"updating",(async()=>{await Promise.all(this.flags.map((async e=>{if(e.mapPoint){const r=new h({x:e.mapPoint.x,y:e.mapPoint.y,spatialReference:e.mapPoint.spatialReference.wkid}),s={screenPoint:this.view.toScreen(r),mapPoint:r};await this.queryFlagByHitTest(s,e.type)||("barrier"===e.type?t.push("barrier"):t.push("starting-point"))}}))),r.remove(),e(t)}))}))}async addResultGraphicToView(e,t){for(const r in e.results.aggregatedGeometry)if("line,multipoint,polygon".indexOf(r)>-1&&null!==e.results.aggregatedGeometry[r]){e.results.aggregatedGeometry[r].spatialReference=this._unObject.spatialReference,e.graphicEnabled=!0;const s=await this._geometryHandler.projectGeometry(e.results.aggregatedGeometry[r],this.view.spatialReference),i={globalid:e.trace.globalId};if(null!==s){const e=this._graphicHandler.makeGraphic(s,t.color,i,this.view.spatialReference);this.view.graphics.add(e)}}}addTerminal(e,t){const r=[...this._flags];r.forEach((r=>{r.globalId===t.globalId&&-1===t.selectedTerminals.indexOf(parseInt(e,10))&&r.selectedTerminals.push(parseInt(e,10))})),this._flags=r}callTrace(){return new Promise((async e=>{const t=this._traces.filter((e=>e.selected));t.length>0&&(this._traceResults.length>0&&this._traceResults.forEach((e=>{this.removeResultGraphicFromView(e)})),this._traceResults=[],this.removeSelection(),await Promise.all(t.map((async(e,t)=>{const r=e,s=new m({gdbVersion:this.gdbVersion,moment:null,traceType:r.traceType,traceLocations:this._flags,namedTraceConfigurationGlobalId:r.globalId,traceConfiguration:null,outSpatialReference:null,resultTypes:null});await this.executeTrace(r,this._unObject.networkServiceUrl,s).then((e=>{if(e.hasOwnProperty("results")){const r=[...this._traceResults];r.splice(t,0,e),this._traceResults=r,null!==e.results&&(this.selectOnComplete&&this.mergeSelection(!0,e.trace),this.showGraphicsOnComplete&&this.addResultGraphicToView(e,e.graphicColor)),this._activeProgress=!1}else{this._activeProgress=!1;const r=[...this._traceResults];r.splice(t,0,e),this._traceResults=r}})).catch((e=>{throw this._activeProgress=!1,e}))}))),e(!0))}))}changeResultGraphicColor(e,t){const r=[...this._traceResults];r.length>0&&r.forEach((r=>{r.trace.globalId===t.trace.globalId&&(r.graphicColor=e,r.graphicEnabled=!0)})),this._traceResults=r,this.removeResultGraphicFromView(t),this.addResultGraphicToView(t,e)}checkCanTrace(){const e={status:!0,issues:[]};let t=[];return this._flags.some((e=>"starting-point"===e.type))?(t=this._traces.filter((e=>e.selected)),t.length<=0&&(e.status=!1,e.issues=["noTrace"])):(t=this._traces.filter((e=>!0===e.selected)),t.length>0?(e.status=!1,e.issues=["noStart"]):(e.status=!1,e.issues=["noStart","noTrace"])),e}checkSelectionExist(){let e=!1;return this._highlightHandler.some((t=>{t&&(e=!0)})),e}clearResult(e){let t=this._traceResults;if(t.length>0){const r=t.filter((t=>t.trace.globalId===e.globalId));r.length>0&&this.removeResultGraphicFromView(r[0]),t=t.filter((t=>t.trace.globalId!==e.globalId))}this._traceResults=t,0===t.length?this.removeSelection():this.mergeSelection(!1,e)}executeTrace(e,t,r){const s=this._processFlags(r.traceLocations);return r.traceLocations=s,g(t,r).then((t=>({trace:e,results:t,selectionEnabled:!1,graphicEnabled:!1,graphicColor:this._defaultGraphicColor,status:"success"}))).catch((t=>({trace:e,results:null,selectionEnabled:!1,graphicEnabled:!1,graphicColor:this._defaultGraphicColor,status:t.message})))}getValidSources(){let e=[];const t=this._unObject.dataElement.domainNetworks;for(const r of t)e=e.concat(r.junctionSources),e=e.concat(r.edgeSources);return e}async loadUtilityNetwork(){var e;await this.view.when();const t=this.view.map;if(null!=(e=t.utilityNetworks)&&e.length){const e=t.utilityNetworks.getItemAt(0);await e.load(),this._unObject=e;try{await t.loadAll(),this._populateOutfields()}catch(r){this._populateOutfields()}return e}return null}manageFilterBarrier(e,t){const r=[...this._flags];r.forEach((r=>{r.globalId===t.globalId&&"barrier"===t.type&&r.id===t.id&&(r.isFilterBarrier=e)})),this._flags=r}mergeSelection(e,t){let r=[];const s=[...this._traceResults],i=t.globalId;s.forEach((t=>{i===t.trace.globalId&&(t.selectionEnabled=e),t.selectionEnabled&&null!==t.results.elements&&(r=r.concat(t.results.elements))})),this.selectResults([...new Set(r)])}queryFeaturesById(e){return new Promise((async r=>{const s=p(this._unObject,e),i=this._getUniqueMapLayerViews(this.view),a={layerUrl:s[0].layerUrl,objectIds:s[0].objectIds,outFields:["*"]},l=i.filter((e=>e.layer.parsedUrl.path===s[0].layerUrl));if(l.length>0){const e=(await Promise.all(l.map((async e=>{const r=new t,s=e.layer;r.add(s);const i={layers:r,layerInfos:[a],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return(await u(i))[0]})))).filter((e=>e.featureSet.features.length>0));e.length>0?r(e[0]):r(null)}else r(null)}))}queryFlagByHitTest(e,t){return this._lookupFlagByHit(e).then((e=>{if(e.length>0){const r=[...this._flags];return e.forEach((e=>{const s=e.graphic,i=s.attributes.hasOwnProperty("GLOBALID")?s.attributes.GLOBALID:s.attributes.globalid;if(r.filter((e=>e.globalId===i)).length<=0){const e=this._graphicHandler.getFlagGraphic(s.mapPoint,t,s);this.view.graphics.add(e),r.push({...s,type:t,globalId:s.attributes.globalid?s.attributes.globalid:s.attributes.GLOBALID,details:s,mapGraphic:e,id:r.length+1})}else if(null!==s.percentAlong){const e=this._graphicHandler.getFlagGraphic(s.mapPoint,t,s);this.view.graphics.add(e),r.push({...s,type:t,globalId:s.attributes.globalid?s.attributes.globalid:s.attributes.GLOBALID,details:s,mapGraphic:e,id:r.length+1})}})),this._flags=r,!0}return!1}))}removeResultGraphicFromView(e){const t=this.view.graphics;e.graphicEnabled=!1;t.filter((t=>t.attributes[t.attributes.hasOwnProperty("GLOBALID")?"GLOBALID":"globalid"]===e.trace.globalId)).forEach((e=>{this.view.graphics.remove(e)}))}removeFlag(e){const t=this._flags.filter((t=>{if(t.id!==e.id)return t}));this._removeGraphic(e),this._flags=t}removeSelection(){this._highlightHandler.forEach((e=>{e&&e.remove()})),this._highlightHandler=[]}removeTerminal(e,t){const r=[...this._flags];r.forEach((r=>{if(r.globalId===t.globalId&&t.selectedTerminals.indexOf(parseInt(e,10))>-1){const s=t.selectedTerminals.indexOf(parseInt(e,10));r.selectedTerminals.splice(s,1)}})),this._flags=r}reset(){this._flags=[],this._traceResults=[];const e=[...this._traces];e.forEach((e=>{e.selected=!1})),this._traces=e,this.view.graphics.removeAll(),this.removeSelection()}selectFeaturesById(e){const t=p(this._unObject,e);this._getUniqueMapLayerViews(this.view).forEach((e=>{e.layer.parsedUrl.path===t[0].layerUrl&&this._highlightHandler.push(e.highlight(t[0].objectIds))}))}selectResults(e){if(e.length>0){this.removeSelection();const t=this._groupResultsByNetworkSource(e);for(const e in t)this.selectFeaturesById(t[e])}else this.removeSelection()}selectTraces(e,t){const r=[...this._traces];r.forEach((r=>{t===r.globalId&&(r.selected=e)})),this._traces=r}selectTracesOnLoad(){this._unObject.hasOwnProperty("sharedNamedTraceConfigurations")&&(this._traces=[...this._unObject.sharedNamedTraceConfigurations],this._traces.forEach((e=>{e.selected=!1,-1!==this.selectedTraces.indexOf(e.globalId)&&(e.selected=!0)})))}zoomToAsset(e){this.view.goTo(e).catch((e=>{console.error(e)}))}_getUniqueMapLayerViews(e){const t=[];return e.layerViews.filter((e=>"feature"===e.layer.type||"group"===e.layer.type)).forEach((e=>{"group"===e.type?e.layerViews.forEach((e=>{t.push(e)})):t.find((t=>t.layer.layerId===e.layer.layerId))||t.push(e)})),t}_processFlags(e){const t=[];return e.forEach((e=>{if(null!==e.selectedTerminals&&e.selectedTerminals.length>0)e.selectedTerminals.forEach((r=>{const s=new d({globalId:e.globalId,percentAlong:e.percentAlong,terminalId:r,type:e.type,isFilterBarrier:e.isFilterBarrier});t.push(s)}));else{const r=new d({globalId:e.globalId,percentAlong:e.percentAlong,terminalId:null,type:e.type,isFilterBarrier:e.isFilterBarrier});t.push(r)}})),t}_getDisplayField(e){const t=e.layer;let r=t.displayField,s="";for(const i in e.attributes){const a=i.toLowerCase();if(a===r.toLowerCase())if(s=e.attributes[i],"assetgroup"===a||"assettype"===a){let i=e.attributes[t.typeIdField.toUpperCase()];i||(i=e.attributes[t.typeIdField.toLowerCase()]),r=t.typeIdField,s=this._checkSubtype(t,i)}else s=this._checkDomain(t.fields,i,s)}return{field:r,value:s}}_checkSubtype(e,t){let r=t;if(null!==e.types&&e.types.length>0){const s=e.types.filter((e=>e.id===t));s.length>0&&(r=s[0].name)}return r}_checkDomain(e,t,r){let s=r;const i=e.filter((e=>e.name.toLowerCase()===t.toLowerCase()));if(i.length>0&&null!==i[0].domain){const e=i[0].domain.codedValues.filter((e=>e.code===r));e.length>0&&(s=e[0].name)}return s}_groupBy(e,t){return e.reduce((function(e,r){return(e[r[t]]=e[r[t]]||[]).push(r),e}),{})}_groupResultsByNetworkSource(e){if(e.length>0){if(e[0].hasOwnProperty("results")){const t=e[0].results.elements;return this._groupBy(t,"networkSourceId")}return this._groupBy(e,"networkSourceId")}if(e.hasOwnProperty("results")){const t=e.results.elements;return this._groupBy(t,"networkSourceId")}return[]}_lookupFlagByHit(e){return this.view.hitTest(e.screenPoint,{exclude:this.view.graphics}).then((t=>{const r=[];if(t.results.length>0){const s=t.results[0];if(s.graphic&&l(s.graphic.geometry))if("polyline"===s.graphic.geometry.type){const t=this._geometryHandler.getPercentageAlong(s.graphic.geometry,e.mapPoint,s.graphic.geometry.spatialReference),i=this._getDisplayField(s.graphic);s.graphic.terminalId=null,s.graphic.isFilterBarrier=!1,s.graphic.allTerminals=null,s.graphic.selectedTerminals=null,s.graphic.percentAlong=t,s.graphic.displayValue=i,s.graphic.mapPoint=s.mapPoint,r.push(s)}else if(("point"===s.graphic.geometry.type||"polygon"===s.graphic.geometry.type)&&null!==this._unObject){const e=this._unObject.getTerminalConfiguration(s.graphic),t=this._getDisplayField(s.graphic);s.graphic.terminalId=e?e.terminals[0].id?e.terminals[0].id:null:1,s.graphic.isFilterBarrier=!1,s.graphic.allTerminals=e||null,s.graphic.selectedTerminals=[e?e.terminals[0].id?e.terminals[0].id:null:1],s.graphic.percentAlong=null,s.graphic.displayValue=t,s.graphic.mapPoint=s.mapPoint,r.push(s)}}return r}))}async _populateOutfields(){const e=this.view.map,t=this.getValidSources();e.layers.forEach((e=>{"group"===e.type?e.layers.forEach((e=>{t.some((t=>t.layerId===e.layerId))&&e.fields.some((e=>"assetgroup"===e.name.toLowerCase()))&&(e.outFields=["assetgroup","assettype","globalid","objectid"])})):t.some((t=>t.layerId===e.layerId))&&e.fields.some((e=>"assetgroup"===e.name.toLowerCase()))&&(e.outFields=["assetgroup","assettype","globalid","objectid"])}))}_removeGraphic(e){this.view.graphics.remove(e.mapGraphic)}};e([n()],b.prototype,"flags",void 0),e([n()],b.prototype,"gdbVersion",void 0),e([n()],b.prototype,"selectedTraces",void 0),e([n()],b.prototype,"selectOnComplete",void 0),e([n()],b.prototype,"showGraphicsOnComplete",void 0),e([n()],b.prototype,"showSelectionAttributes",void 0),e([n({readOnly:!0})],b.prototype,"state",null),e([n({value:null})],b.prototype,"view",null),b=e([c(w)],b);const v=b;export{v as default};
