/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../analysis/Slice.js";import s from"../../core/Collection.js";import o from"../../core/Handles.js";import r from"../../core/Logger.js";import{isNone as i,isSome as a,destroyMaybe as l}from"../../core/maybe.js";import{ignoreAbortErrors as d}from"../../core/promiseUtils.js";import{whenTrueOnce as n}from"../../core/watchUtils.js";import{aliasOf as c}from"../../core/accessorSupport/decorators/aliasOf.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import u from"../../views/3d/interactive/analysisTools/slice/SliceTool.js";import{InteractiveToolViewModel as y}from"../support/InteractiveToolViewModel.js";const m=r.getLogger("esri.widgets.Slice.SliceViewModel"),w=new Set;let f=class extends y{constructor(e){super(e),this.analysisView=null,this.logger=m,this.supportedViewType="3d",this.unsupportedErrorMessage="SliceViewModel is only supported in 3D views.",this.handles=new o,this.analysis=new t,this.shape=null,this.tiltEnabled=!1,this.ready=!1,w.add(this)}initialize(){this.handles.add(this.watch("shape",((e,t)=>{i(t)&&a(e)?i(this.tool)&&!this.creatingTool&&this.createTool():a(t)&&i(e)&&this.removeTool()}),!0)),this.handles.add(this.watch("tiltEnabled",(e=>this._updateToolOrRecreate((t=>t.tiltEnabled=e))),!0))}destroy(){w.delete(this),this.handles=l(this.handles)}get state(){return this.disabled||!this.ready?"disabled":i(this.tool)||"pending"===this.tool.toolState?"ready":this.tool.state}get excludedLayers(){return this.analysis.excludedLayers}set excludedLayers(e){this.analysis.excludedLayers=e}get excludeGroundSurface(){return this.analysis.excludeGroundSurface}set excludeGroundSurface(e){this.analysis.excludeGroundSurface=e}async start(){return this.removeTool(),this.ready||await n(this,"ready"),w.forEach((e=>{e.view===this.view&&e!==this&&e.clear()})),this.createTool()}clear(){this.removeTool(),this.shape=null,this.excludeGroundSurface=!1,this.excludedLayers=new s}removeSliceAndStart(){return this.removeTool(),this.shape=null,this.start()}enterExcludeLayerMode(){a(this.tool)&&this.tool.enterExcludeLayerMode()}exitExcludeLayerMode(){a(this.tool)&&this.tool.exitExcludeLayerMode()}_updateToolOrRecreate(e){a(this.tool)?e(this.tool):this.creatingTool&&d(this.createTool())}onConnectToAnalysisView(e){this.analysisView=e,this.ready=!0}onDisconnectFromAnalysisView(){this.ready=!1,this.analysisView=null}createToolParams(){return{toolConstructor:u,constructorArguments:()=>({tiltEnabled:this.tiltEnabled})}}};e([h()],f.prototype,"analysisView",void 0),e([h()],f.prototype,"analysis",void 0),e([h({readOnly:!0})],f.prototype,"state",null),e([h({aliasOf:"analysis.shape"})],f.prototype,"shape",void 0),e([h({aliasOf:"analysis.tiltEnabled"})],f.prototype,"tiltEnabled",void 0),e([c("tool.layersMode")],f.prototype,"layersMode",void 0),e([h()],f.prototype,"excludedLayers",null),e([h({nonNullable:!0})],f.prototype,"excludeGroundSurface",null),e([h()],f.prototype,"ready",void 0),f=e([p("esri.widgets.slice.SliceViewModel")],f);const x=f;export{x as default};
