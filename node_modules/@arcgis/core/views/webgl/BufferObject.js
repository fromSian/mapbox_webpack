/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import e from"../../core/Logger.js";import{isUint16Array as t,isUint32Array as i}from"../../core/typedArrayUtil.js";import{checkWebGLError as s}from"./checkWebGLError.js";import{ResourceType as r}from"./enums.js";const n=e.getLogger("esri.views.webgl.BufferObject");class o{constructor(e,t,i,n,o){this._context=e,this.bufferType=t,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(r.Buffer,this),this._glName=this._context.gl.createBuffer(),s(this._context.gl),n&&this.setData(n,o)}static createIndex(e,t,i,s){return new o(e,34963,t,i,s)}static createVertex(e,t,i){return new o(e,34962,t,i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return 34962===this.bufferType?this._size:5125===this._indexType?4*this._size:2*this._size}dispose(){var e;if(null!=(e=this._context)&&e.gl){if(this._glName){this._context.gl.deleteBuffer(this._glName),this._glName=null}this._context.instanceCounter.decrement(r.Buffer,this),this._context=null}else this._glName&&n.warn("Leaked WebGL buffer object")}setData(e,r){if(!e)return;if("number"==typeof e){if(e<0&&n.error("Buffer size cannot be negative!"),this._size=e,34963===this.bufferType&&r)switch(this._indexType=r,this._size=e,r){case 5123:e*=2;break;case 5125:e*=4}}else{let s=e.byteLength;t(e)&&(s/=2,this._indexType=5123),i(e)&&(s/=4,this._indexType=5125),this._size=s}const o=this._context.getBoundVAO();this._context.bindVAO(null),this._context.bindBuffer(this);const h=this._context.gl;h.bufferData(this.bufferType,e,this.usage),s(h),this._context.bindVAO(o)}setSubData(e,r=0,o=0,h=e.byteLength){if(!e)return;(r<0||r>=this._size)&&n.error("offset is out of range!");let f=r,u=o,a=h,c=e.byteLength;t(e)?(c/=2,f*=2,u*=2,a*=2):i(e)&&(c/=4,f*=4,u*=4,a*=4),void 0===h&&(h=c-1),o>=h&&n.error("end must be bigger than start!"),r+o-h>this._size&&n.error("An attempt to write beyond the end of the buffer!");const _=this._context.getBoundVAO();this._context.bindVAO(null),this._context.bindBuffer(this);const b=this._context.gl,g=ArrayBuffer.isView(e)?e.buffer:e,l=0===u&&a===e.byteLength?g:g.slice(u,a);b.bufferSubData(this.bufferType,f,l),s(b),this._context.bindVAO(_)}setSubDataFromView(e,t,i,r){if(!e)return;(t<0||t>=this._size)&&n.error("offset is out of range!"),i>=r&&n.error("end must be bigger than start!"),t+i-r>this._size&&n.error("An attempt to write beyond the end of the buffer!");const o=this._context.getBoundVAO();this._context.bindVAO(null),this._context.bindBuffer(this);const h=this._context.gl,f=0===i&&r===e.length?e:e.subarray(i,r);h.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,f),s(h),this._context.bindVAO(o)}}export{o as default};
