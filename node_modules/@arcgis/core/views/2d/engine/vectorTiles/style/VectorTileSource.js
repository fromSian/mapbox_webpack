/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{clone as t}from"../../../../../core/lang.js";import{urlToObject as e,isAbsolute as i,join as l,addQueryParameters as r}from"../../../../../core/urlUtils.js";import s from"../../../../../geometry/Extent.js";import{readServiceTileInfo as o}from"../../../../../layers/support/serviceTileInfoProperty.js";import{TilemapCache as n}from"../../../../../layers/support/TilemapCache.js";import a from"../TilemapIndex.js";import p from"../TilemapRequest.js";class u{constructor(u,h,c){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.name=u,this.sourceUrl=h;const m=e(this.sourceUrl),f=t(c),d=f.tiles;if(m)for(let t=0;t<d.length;t++){const s=e(d[t]);s&&(i(s.path)||(s.path=l(m.path,s.path)),d[t]=r(s.path,{...m.query,...s.query}))}this.tileServers=d;const g=c.capabilities&&c.capabilities.split(",").map((t=>t.toLowerCase().trim())),x=!0===(null==c?void 0:c.exportTilesAllowed),y=!0===(null==g?void 0:g.includes("tilemap")),v=x&&c.hasOwnProperty("maxExportTilesCount")?c.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:x,supportsTileMap:y},exportTiles:x?{maxExportTilesCount:+v}:null},this.tileInfo=o(f.tileInfo,f,null,{ignoreMinMaxLOD:!0});const T=c.tileMap?r(l(m.path,c.tileMap),m.query):null;y?(this.type="vector-tile",this.tilemap=new p(new n({layer:{parsedUrl:m,tileInfo:this.tileInfo,type:"vector-tile",tileServers:this.tileServers}}),T)):T&&(this.tilemap=new a(T)),this.fullExtent=s.fromJSON(c.fullExtent)}async getRefKey(t,e){var i,l;return null!=(i=null==(l=this.tilemap)?void 0:l.dataKey(t,e))?i:t}getSourceTileUrl(t,e,i){return this.tileServers[e%this.tileServers.length].replace(/\{z\}/gi,t.toString()).replace(/\{y\}/gi,e.toString()).replace(/\{x\}/gi,i.toString())}isCompatibleWith(t){const e=this.tileInfo,i=t.tileInfo;if(!e.spatialReference.equals(i.spatialReference))return!1;if(!e.origin.equals(i.origin))return!1;if(Math.round(e.dpi)!==Math.round(i.dpi))return!1;const l=e.lods,r=i.lods,s=Math.min(l.length,r.length);for(let o=0;o<s;o++){const t=l[o],e=r[o];if(t.level!==e.level||Math.round(t.scale)!==Math.round(e.scale))return!1}return!0}}export{u as default};
