/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import e from"../../../../core/Error.js";import t from"../../../../core/Logger.js";import{isPowerOfTwo as r}from"../../../../core/mathUtils.js";import{pt2px as n}from"../../../../core/screenUtils.js";import{copyAndPremultiply as i}from"./color.js";import{WGLGeometryType as o,VVType as s}from"./enums.js";import{TextProperties as a}from"./SymbolProperties.js";import c from"../../../webgl/Texture.js";const u=t.getLogger("esri.views.2d.engine.webgl.Utils"),l="geometry",f="per_instance",d="per_instance_vv",m=[{name:l,strideInBytes:36,divisor:0}],p=[{name:l,strideInBytes:32,divisor:0}],y=[{name:l,strideInBytes:20,divisor:0}],g=[{name:l,strideInBytes:12,divisor:0}],h=[{name:l,strideInBytes:40,divisor:0}],w=[{name:l,strideInBytes:36,divisor:0}],v=[{name:l,strideInBytes:36,divisor:0}];function S(e){const t={};for(const r of e)t[r.name]=r.strideInBytes;return t}const I=S(m),L=S(p),M=S(y),A=S(g),T=S(h),C=S(w),b=S(v);function z(e,{fill:t}){switch(e){case o.MARKER:return I;case o.FILL:return"dot-density"===t?A:"simple"===t?M:L;case o.LINE:return T;case o.TEXT:return C;case o.LABEL:return b}}const x=[l],E=[l],F=[l],B=[l],D=[l];function U(e){switch(e){case o.MARKER:return x;case o.FILL:return E;case o.LINE:return F;case o.TEXT:return B;case o.LABEL:return D}}function j(e){switch(e%4){case 0:case 2:return 4;case 1:case 3:return 1}}function R(e,t){switch(t%4){case 0:case 2:return new Uint32Array(Math.floor(e*t/4));case 1:case 3:return new Uint8Array(e*t)}}function $(e,t){switch(t%4){case 0:case 2:return new Uint32Array(e);case 1:case 3:return new Uint8Array(e)}}function N(e){return a.pool.acquire(e.color?i(e.color):[255,255,255,255],e.haloColor?i(e.haloColor):[255,255,255,255],n(e.haloSize),n(e.font.size),e.angle*Math.PI/180,e.xoffset/e.font.size,e.yoffset/e.font.size,"left"===e.horizontalAlignment?0:"right"===e.horizontalAlignment?1:.5,"top"===e.verticalAlignment?0:"bottom"===e.verticalAlignment?1:.5)}function O(e){return null!=e}function P(e){return"number"==typeof e}function k(t){switch(t){case"butt":return 0;case"round":return 1;case"square":return 2;default:return u.error(new e("mapview-invalid-type",`Cap type ${t} is not a valid option. Defaulting to round`)),1}}function V(t){switch(t){case"miter":return 2;case"bevel":return 0;case"round":return 1;default:return u.error(new e("mapview-invalid-type",`Join type ${t} is not a valid option. Defaulting to round`)),1}}function q(e){switch(e){case"opacity":return s.OPACITY;case"color":return s.COLOR;case"rotation":return s.ROTATION;case"size":return s.SIZE;default:return u.error(`Cannot interpret unknown vv: ${e}`),null}}function K(e){const{transform:t,hasZ:r,hasM:n}=e;return{transform:t,hasZ:r,hasM:n}}function X(e,t,r,n,i,o,s){for(const c in o){const t=o[c].stride,n=j(t),s=o[c].data,a=r[c].data,u=t*i.vertexCount/n,l=t*e/n,f=t*i.vertexFrom/n;for(let e=0;e<u;++e)a[e+l]=s[e+f]}const a=i.indexCount;for(let c=0;c<a;++c)n[c+t]=s[c+i.indexFrom]-i.vertexFrom+e}const Z={[l]:35044};function _(e,t){const r=[];for(let n=0;n<5;++n){const i=U(n),o={};for(const e of i)o[e]={data:t(n,e)};r.push({data:e(n),buffers:o})}return r}function J(e,t){let n,i;return r(t.width)&&r(t.height)?(n=!0,i=9987):(n=!1,i=9729),new c(e,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,hasMipmap:n,samplingMode:i,wrapMode:33071,flipped:!0},t)}function Y(e){return{vertexFrom:void 0,vertexTo:void 0,geometry:e}}function G(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5126:case 5124:case 5125:return 4}}function H(t){switch(t){case 5121:return 1;case 32819:return 2;case 5126:return 4;default:return void u.error(new e("webgl-utils",`Unable to handle type ${t}`))}}function Q(t){switch(t){case 5121:return Uint8Array;case 32819:return Uint16Array;case 5126:return Float32Array;default:return void u.error(new e("webgl-utils",`Unable to handle type ${t}`))}}function W(e){const t={};for(const r in e){const n=e[r];let i=0;t[r]=n.map((e=>{const t={...e,normalized:e.normalized||!1,divisor:e.divisor||0,offset:i,stride:0};return i+=e.count*G(e.type),t})),t[r].forEach((e=>e.stride=i))}return t}const ee=e=>{const t=new Map;for(const r in e)for(const n of e[r])t.set(n.name,n.location);return t},te=e=>{const t={};for(const r in e){const n=e[r];t[r]=n.length?n[0].stride:0}return t},re=new Map,ne=(e,t)=>{if(!re.has(e)){const r=W(t),n={strides:te(r),bufferLayouts:r,attributes:ee(t)};re.set(e,n)}return re.get(e)};function ie(e){e(o.FILL),e(o.LINE),e(o.MARKER),e(o.TEXT),e(o.LABEL)}const oe=e=>"path"in e&&ge(e.path),se=e=>"url"in e&&e.url||"imageData"in e&&e.imageData,ae=e=>"imageData"in e&&e.imageData&&"contentType"in e&&e.contentType?`data:${e.contentType};base64,${e.imageData}`:"url"in e?e.url:null,ce=e=>"url"in e&&e.url&&e.url.includes(".gif")||"contentType"in e&&"image/gif"===e.contentType||"imageData"in e&&e.imageData.includes("data:image/gif"),ue=e=>"url"in e&&e.url&&e.url.includes(".png")||"contentType"in e&&"image/png"===e.contentType||"imageData"in e&&e.imageData.includes("data:image/png"),le=e=>e.type&&-1!==e.type.toLowerCase().indexOf("3d");function fe(e){switch(e.type){case"line":{const t=e;return"CIMSolidStroke"===t.cim.type&&!t.dashTemplate}case"fill":return"CIMSolidFill"===e.cim.type;case"esriSFS":return"esriSFSSolid"===e.style||"esriSFSNull"===e.style;case"esriSLS":return"esriSLSSolid"===e.style||"esriSLSNull"===e.style;default:return!1}}const de=e=>e.includes("data:image/svg+xml");function me(e){switch("cim"in e?e.cim.type:e.type){case"esriSMS":case"esriPMS":case"CIMPointSymbol":case"CIMVectorMarker":case"CIMPictureMarker":case"CIMCharacterMarker":return!1;default:return!0}}function pe(e){const t="maxVVSize"in e&&e.maxVVSize,r="width"in e&&e.width||"size"in e&&e.size||0;return t||r}function ye(e){const t=[];for(let r=0;r<e.length;r++)t.push(e.charCodeAt(r));return t}const ge=e=>!!e&&(e=e.trim(),!!(/^[mzlhvcsqta]\s*[-+.0-9][^mlhvzcsqta]+/i.test(e)&&/[\dz]$/i.test(e)&&e.length>4));export{L as C_FILL_STRIDE_SPEC,A as C_FILL_STRIDE_SPEC_DD,M as C_FILL_STRIDE_SPEC_SIMPLE,p as C_FILL_VERTEX_DEF,g as C_FILL_VERTEX_DEF_DD,y as C_FILL_VERTEX_DEF_SIMPLE,I as C_ICON_STRIDE_SPEC,m as C_ICON_VERTEX_DEF,b as C_LABEL_STRIDE_SPEC,v as C_LABEL_VERTEX_DEF,T as C_LINE_STRIDE_SPEC,h as C_LINE_VERTEX_DEF,C as C_TEXT_STRIDE_SPEC,w as C_TEXT_VERTEX_DEF,l as C_VBO_GEOMETRY,Z as C_VBO_INFO,f as C_VBO_PERINSTANCE,d as C_VBO_PERINSTANCE_VV,R as allocateTypedArrayBuffer,$ as allocateTypedArrayBufferwithData,ye as charCodes,X as copyMeshData,_ as createGeometryData,ne as createProgramDescriptor,J as createTextureFromTexelData,ie as forEachGeometryType,Y as geometryToMappedGeometry,G as getBytes,k as getCapType,V as getJoinType,U as getNamedBuffers,pe as getPMSResourceSize,Q as getPixelArrayCtor,H as getPixelBytes,z as getStrides,N as getTextProperties,K as getTransformParams,ae as getUrl,q as getVVType,le as is3D,O as isDefined,ce as isGIF,se as isImageResource,P as isNumber,ue as isPNG,de as isSVGImage,oe as isSVGResource,fe as isSimple,ge as isValidSVG,me as shouldRepeat,j as strideToPackingFactor};
