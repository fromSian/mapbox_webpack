/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import e from"../../../../../core/Error.js";import r from"../../../../../core/Logger.js";import{isSome as t}from"../../../../../core/maybe.js";import"../../../../webgl/BufferObject.js";import"../../../../webgl/FramebufferObject.js";import"../../../../../core/has.js";import"../../../../webgl/checkWebGLError.js";import"../../../../webgl/enums.js";import"../../../../../chunks/builtins.js";import s from"../../../../webgl/ProgramCache.js";import i from"../../../../webgl/Texture.js";import"../../../../webgl/VertexArrayObject.js";import{WGLDrawPhase as o}from"../enums.js";import a from"../VertexStream.js";import{blend as n}from"../shaders/BlendPrograms.js";const d=r.getLogger("esri.views.2d.engine.webgl.effects.blendEffects.BlendEffect");class u{constructor(){this._size=[0,0]}dispose(e){this._backBufferTexture&&(this._backBufferTexture.dispose(),this._backBufferTexture=null),this._programCache&&(this._programCache.dispose(),this._programCache=null),this._quad&&(this._quad.dispose(),this._quad=null)}draw(r,t,s,i,a){const{context:u,drawPhase:c}=r;if(this._setupShader(u),i&&"normal"!==i&&c!==o.LABEL)return void this._drawBlended(r,t,s,i,a);const m=this._programCache.getProgram(n,"normal");if(!m)return void d.error(new e("mapview-BlendEffect",'Error creating shader program for blend mode "normal"'));u.useProgram(m),t.setSamplingMode(s),u.bindTexture(t,0),m.setUniform1i("u_layerTexture",0),m.setUniform1f("u_opacity",a),u.setBlendingEnabled(!0),u.setBlendFunction(1,771);const f=this._quad;f.draw(),f.unbind()}_drawBlended(r,s,i,o,a){const{context:u,state:c,pixelRatio:m,inFadeTransition:f}=r,{size:h}=c,l=u.getBoundFramebufferObject();let p,g;if(t(l)){const e=l.descriptor;p=e.width,g=e.height}else p=Math.round(m*h[0]),g=Math.round(m*h[1]);this._createOrResizeTexture(r,p,g);const b=this._backBufferTexture;l.copyToTexture(0,0,p,g,0,0,b),u.setStencilTestEnabled(!1),u.setStencilWriteMask(0),u.setBlendingEnabled(!0),u.setDepthTestEnabled(!1),u.setDepthWriteEnabled(!1);const _=this._programCache.getProgram(n,o);if(!_)return void d.error(new e("mapview-BlendEffect",`Error creating shader program for blend mode ${o}`));u.useProgram(_),b.setSamplingMode(i),u.bindTexture(b,0),_.setUniform1i("u_backbufferTexture",0),s.setSamplingMode(i),u.bindTexture(s,1),_.setUniform1i("u_layerTexture",1),_.setUniform1f("u_opacity",a),_.setUniform1f("u_inFadeOpacity",f?1:0),u.setBlendFunction(1,0);const x=this._quad;x.draw(),x.unbind(),u.setBlendFunction(1,771)}_setupShader(e){this._programCache||(this._programCache=new s(e),this._quad||(this._quad=new a(e,[-1,-1,1,-1,-1,1,1,1])))}_createOrResizeTexture(e,r,t){const{context:s}=e;null!==this._backBufferTexture&&r===this._size[0]&&t===this._size[1]||(this._backBufferTexture?this._backBufferTexture.resize(r,t):this._backBufferTexture=new i(s,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!1,width:r,height:t}),this._size[0]=r,this._size[1]=t)}}export{u as BlendEffect};
