/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{unwrapOr as t}from"../../../../../../core/maybe.js";import{pt2px as e}from"../../../../../../core/screenUtils.js";import{c as o}from"../../../../../../chunks/mat2df32.js";import{c as i}from"../../../../../../chunks/vec2f32.js";import{premultiplyAlphaRGBA as s,premultiplyAlphaRGBAArray as r}from"../../color.js";import{MIN_MAX_ZOOM_PRECISION_FACTOR as a,SPRITE_PADDING as n,BITSET_MARKER_ALIGNMENT_MAP as h,BITSET_MARKER_ALIGNMENT_SCREEN as l,BITSET_GENERIC_LOCK_COLOR as m,BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE as c,BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY as f,PICTURE_FILL_COLOR as d}from"../../definitions.js";import{i1616to32 as u,i8888to32 as x}from"../../number.js";import{MarkerMaterialKey as p}from"../../materialKey/MaterialKey.js";import{getMinMaxZoom as M,DEFAULT_MIN_ZOOM as y,DEFAULT_MAX_ZOOM as _}from"./util.js";import S from"./WGLBaseMarkerTemplate.js";import g from"./WGLMeshTemplate.js";class V extends(S(g)){constructor(t,e,s,r,d,M,y,_,S,g,V,z,B,k,w,b,L,j,P,C,R,v,K){super(),this.angle=r,this.height=y,this.width=M,this.xOffset=e*P,this.yOffset=s*P,this._markerPlacement=C,this._effects=R,this._anchorX=.5-(.5+b)*w.width/w.width,this._anchorY=.5-(.5+L)*w.height/w.height,this._minMaxZoom=u(Math.round(v*a),Math.round(K*a));const U=(1===k?h:l)|(V?m:0)|(B?c:0)|(z?f:0),W=w&&w.sdf,X=p.load(t);X.sdf=W,X.pattern=!0,X.textureBinding=w.textureBinding,this._materialKey=X.data,this._fillColor=d,this._outlineColor=S,this._sizeOutlineWidth=x(Math.round(Math.min(Math.sqrt(128*M),255)),Math.round(Math.min(Math.sqrt(128*y),255)),Math.round(Math.min(Math.sqrt(128*g),255)),Math.round(Math.min(Math.sqrt(128*_),255)));const q=w.rect.x+n,T=w.rect.y+n,A=q+w.width,Y=T+w.height;this._offsets.xUpperLeft=q,this._offsets.yUpperLeft=T,this._offsets.xUpperRight=A,this._offsets.yUpperRight=T,this._offsets.xBottomLeft=q,this._offsets.yBottomLeft=Y,this._offsets.xBottomRight=A,this._offsets.yBottomRight=Y,this._texUpperLeft=u(q,T),this._texUpperRight=u(A,T),this._texBottomLeft=u(q,Y),this._texBottomRight=u(A,Y),M*=j,y*=j,M*=P,y*=P;const H=Math.round(64*j);this._bitestAndDistRatio=u(U,H),this._computedWidth=M,this._computedHeight=y;const I=i(),O=o();this._applyTransformation(O,I)}static fromCIMMarker(o,i,r){const a=i&&i.width||1,n=i&&i.height||1,h=o.size,l=a/n*o.scaleX,m=o.scaleSymbolsProportionally&&o.frameHeight?h/o.frameHeight:1;let c=s(o.color);const f=s(o.outlineColor),d=e(h),u=d*l,x=e(o.offsetX||0),p=e(o.offsetY||0),y=e(o.outlineWidth||0)*m,_=o.alignment||0,S=e(o.referenceSize),[g,z]=M(o.scaleInfo,r);i.sdf||0!==c||(c=-1);let B=o.rotation||0;o.rotateClockwise||(B=-B);let k=0,w=0;const b=o.anchorPoint;b&&(o.isAbsoluteAnchorPoint?h&&(k=-b.x/(h*l),w=b.y/h):(k=b.x,w=b.y));const L=new V(o.materialKey,x,p,B,c,u,d,S,f,y,o.colorLocked,o.scaleSymbolsProportionally,!1,_,i,k,w,o.sizeRatio,t(o.scaleFactor,1),o.markerPlacement,o.effects,g,z);return L._vertexBoundsScaleX=o.maxVVSize?o.maxVVSize/u:1,L._vertexBoundsScaleY=o.maxVVSize?o.maxVVSize/d:1,L}static fromPictureMarker(t,o){const i=Math.round(e(t.width)),s=Math.round(e(t.height)),r=d,a=Math.round(e(t.xoffset||0)),n=Math.round(e(t.yoffset||0)),h=new V(t.materialKey,a,n,t.angle,r,i,s,s,0,0,!1,!1,!1,0,o,0,0,1,1,null,null,y,_);return h._vertexBoundsScaleX=t.maxVVSize?t.maxVVSize/t.width:1,h._vertexBoundsScaleY=t.maxVVSize?t.maxVVSize/t.height:1,h}static fromSimpleMarker(t,o){const i=r(t.color),s=Math.round(e(t.size)),a=s,n=Math.round(e(t.xoffset||0)),h=Math.round(e(t.yoffset||0)),l=t.style,m=t.outline,c=0|(m&&m.color&&r(m.color)),f=0|(m&&m.width&&Math.round(e(m.width))),d=new V(t.materialKey,n,h,t.angle,i,s,a,a,c,f,!1,!1,"esriSMSCross"===l||"esriSMSX"===l,0,o,0,0,126/64,1,null,null,y,_);return d.boundsType="esriSMSCircle"===l?"circle":"square",d._vertexBoundsScaleX=t.maxVVSize?t.maxVVSize/t.size:1,d._vertexBoundsScaleY=t.maxVVSize?t.maxVVSize/t.size:1,d}static fromLineSymbolMarker(t,o){const i=r(t.color),s=6,a=Math.round(e(s*t.lineWidth)),n=a,h="cross"===t.style||"x"===t.style;let l;switch(t.placement){case"begin-end":l="Both";break;case"begin":l="JustBegin";break;case"end":l="JustEnd";break;default:l="None"}const m={type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:l,offsetAlongLine:0},c=new V(t.materialKey,0,0,0,i,a,n,n/s,i,h?Math.round(e(t.lineWidth)):0,!1,!1,h,1,o,0,0,126/64,1,m,null,y,_);return c.boundsType="circle"===t.style?"circle":"square",c}}export{V as default};
