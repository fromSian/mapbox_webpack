/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../../../../../core/screenUtils.js";import{premultiplyAlphaRGBA as e}from"../../color.js";import{MIN_MAX_ZOOM_PRECISION_FACTOR as i,SPRITE_PADDING as s}from"../../definitions.js";import{i1616to32 as r}from"../../number.js";import{LineMaterialKey as o}from"../../materialKey/MaterialKey.js";import{isFunction as a,getLimitCosine as l,getMinMaxZoom as h}from"./util.js";import n from"./WGLBaseLineTemplate.js";import c from"./WGLDynamicMeshTemplate.js";import{ok as m}from"../../util/Result.js";class p extends(n(c)){constructor(s,o,h){super(s),this._minMaxZoom=r(Math.round(o*i),Math.round(h*i)),this._cimLineLayer=s;let n=0;a(s.width)||(n=.5*t(s.width));const c=(e,i,r)=>a(s.width)?.5*t(s.width(e,i,r)):n;if(this._dynamicPropertyMap.set("_halfWidth",c),a(s.cap)?this._dynamicPropertyMap.set("_capType",s.cap):this._capType=s.cap,a(s.join)?this._dynamicPropertyMap.set("_joinType",s.join):this._joinType=s.join,a(s.color)){const t=(t,i,r)=>{const o=s.color(t,i,r);return o&&e(o)||0};this._dynamicPropertyMap.set("_fillColor",t)}else{const t=s.color;this._fillColor=t&&e(t)||0}if(a(s.miterLimit)){const t=(t,e,i)=>l(s.miterLimit(t,e,i));this._dynamicPropertyMap.set("_miterLimitCosine",t)}else this._miterLimitCosine=l(s.miterLimit);this._scaleFactor=s.scaleFactor||1,this._isDashed=null!=s.dashTemplate,this._effects=s.effects,this.tessellationProperties._bitset=(s.colorLocked?1:0)|(s.scaleDash?1:0)<<1,this._materialKey=s.materialKey,this._initializeTessellator(!0)}static fromCIMLine(t,e){const[i,s]=h(t.scaleInfo,e);return new p(t,i,s)}bindFeature(t,e,i){const a=t.readLegacyFeature();this._dynamicPropertyMap.forEach(((t,s)=>{this[s]=t(a,e,i)})),this._halfWidth*=this._scaleFactor;const l=this._materialCache,h=(0,this._cimLineLayer.materialHash)(a,e,i),n=l.get(h);let c=null;if(n&&m(n.spriteMosaicItem)&&(c=n.spriteMosaicItem),c){this._hasPattern=!0;const{rect:t,width:e,height:i}=c,o=t.x+s,a=t.y+s,l=o+e,h=a+i;this.tessellationProperties._tl=r(o,a),this.tessellationProperties._br=r(l,h)}else this._hasPattern=!1,this.tessellationProperties._tl=0,this.tessellationProperties._br=0;this.tessellationProperties._fillColor=this._fillColor,this.tessellationProperties._halfWidth=this._halfWidth,this.tessellationProperties.offset=0,this.tessellationProperties._halfReferenceWidth=this.tessellationProperties._halfWidth;const p=o.load(this._materialKey);c&&(p.sdf=c.sdf,p.pattern=!0,p.textureBinding=c.textureBinding),this._materialKey=p.data}}export{p as default};
