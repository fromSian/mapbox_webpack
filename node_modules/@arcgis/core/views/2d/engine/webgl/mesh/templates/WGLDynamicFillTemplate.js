/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../../../../../core/screenUtils.js";import{premultiplyAlphaRGBA as e}from"../../color.js";import{MIN_MAX_ZOOM_PRECISION_FACTOR as s,SPRITE_PADDING as i}from"../../definitions.js";import{radToByte as r}from"../../GeometryUtils.js";import{i1616to32 as o,i8888to32 as a}from"../../number.js";import{FillMaterialKey as l}from"../../materialKey/MaterialKey.js";import{isFunction as n,getMinMaxZoom as h}from"./util.js";import f from"./WGLBaseFillTemplate.js";import c from"./WGLDynamicMeshTemplate.js";import{ok as m}from"../../util/Result.js";const p=128;class d extends(f(c)){constructor(i,a,h){var f;if(super(i),this._minMaxZoom=o(Math.round(a*s),Math.round(h*s)),n(i.color)){const t=(t,s,r)=>{const o=i.color(t,s,r);return o&&e(o)||0};this._dynamicPropertyMap.set("fillColor",t)}else{const t=i.color;this.fillColor=t&&e(t)||0}let c=0;n(i.height)||(c=i.height||0);const m="CIMMarkerPlacementInsidePolygon"===(null==(f=i.cim.placement)?void 0:f.type)&&i.cim.placement.shiftOddRows?2:1,d=(t,e,s)=>n(i.height)?i.height(t,e,s)*m:c*m;this._dynamicPropertyMap.set("_height",d);let u=0;n(i.offsetX)||(u=t(i.offsetX||0)+p,u>255&&(u=255));const y=(e,s,r)=>{if(n(i.offsetX)){let o=t(i.offsetX(e,s,r))+p;return o>255&&(o=255),o}return u};this._dynamicPropertyMap.set("_offsetX",y);let _=1;n(i.scaleX)||(_=i.scaleX||1);const M=(t,e,s)=>n(i.scaleX)?i.scaleX(t,e,s):_;this._dynamicPropertyMap.set("_scaleX",M);let g=0;n(i.offsetY)||(g=t(-i.offsetY||0)+p,g>255&&(g=255));const X=(e,s,r)=>{if(n(i.offsetY)){let o=t(-i.offsetY(e,s,r))+p;return o>255&&(o=255),o}return g};this._dynamicPropertyMap.set("_offsetY",X);let x=0;n(i.angle)||(x=r(i.angle)||0);const j=(t,e,s)=>n(i.angle)?r(i.angle(t,e,s)):x;this._dynamicPropertyMap.set("_angle",j),this._effects=i.effects,this._cimFillLayer=i,this._fillMaterialKey=l.load(i.materialKey)}static fromCIMFill(t,e){const[s,i]=h(t.scaleInfo,e);return new d(t,s,i)}bindFeature(e,s,r){const l=e.readLegacyFeature();this._dynamicPropertyMap.forEach(((t,e)=>{this[e]=t(l,s,r)}));const n=this._fillMaterialKey,h=this._materialCache,f=(0,this._cimFillLayer.materialHash)(l,s,r),c=h.get(f);let p=null;if(c&&m(c.spriteMosaicItem)&&(p=c.spriteMosaicItem),p){const{rect:e,width:s,height:r}=p,l=e.x+i,h=e.y+i,f=l+s,c=h+r;let m=Math.round(t(this._height));m>255?m=255:m<=0&&(m=c-h);let d=Math.round(t(this._height/r*s||0));d>255?d=255:d<=0&&(d=f-l);const u=this._scaleX,y=1;this.tl=o(l,h),this.br=o(f,c),this.aux2=a(d,m,this._offsetX,this._offsetY),this.aux3=a(u,y,this._angle,0),n.sdf=p.sdf,n.pattern=!0,n.textureBinding=p.textureBinding}else this.tl=0,this.br=0,this.aux2=0,this.aux3=0,n.sdf=!1,n.pattern=!1,n.textureBinding=0;this._materialKey=n.data}}export{d as default};
