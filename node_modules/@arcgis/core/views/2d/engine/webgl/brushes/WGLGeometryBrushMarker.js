/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{WGLGeometryType as t}from"../enums.js";import{createProgramDescriptor as e}from"../Utils.js";import o from"./WGLGeometryBrush.js";import{MarkerMaterialKey as a}from"../materialKey/MaterialKey.js";const n=t=>e(t.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_vertexOffset",count:2,type:5122},{location:2,name:"a_texCoords",count:2,type:5123},{location:3,name:"a_bitSetAndDistRatio",count:2,type:5123},{location:4,name:"a_id",count:4,type:5121},{location:5,name:"a_color",count:4,type:5121,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:5121,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:5121},{location:8,name:"a_zoomRange",count:2,type:5123}]});class i extends o{dispose(){}getGeometryType(){return t.MARKER}drawGeometry(t,e,o,i){const{context:r,painter:s,rendererInfo:m,state:l}=t,c=a.load(o.materialKey),{bufferLayouts:u,attributes:d}=n(c),p=s.materialManager.getMaterialProgram(t,c,"materials/icon",d,i);r.useProgram(p),c.textureBinding&&s.textureManager.bindTextures(r,p,c,!0),this._setSharedUniforms(p,t,e);const y=c.vvRotation?l.displayViewMat3:l.displayMat3;p.setUniformMatrix3fv("u_displayMat3",y),this._setSizeVVUniforms(c,p,m,e),this._setColorAndOpacityVVUniforms(c,p,m),this._setRotationVVUniforms(c,p,m),o.draw(r,u,d)}}export{i as default};
