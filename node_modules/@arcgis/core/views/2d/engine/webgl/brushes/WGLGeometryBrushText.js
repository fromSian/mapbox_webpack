/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{WGLGeometryType as t}from"../enums.js";import{createProgramDescriptor as e}from"../Utils.js";import a from"./WGLGeometryBrush.js";import{TextMaterialKey as o}from"../materialKey/MaterialKey.js";const r=t=>e(t.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_haloColor",count:4,type:5121,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:5121},{location:5,name:"a_aux",count:4,type:5120},{location:6,name:"a_zoomRange",count:2,type:5123},{location:7,name:"a_vertexOffset",count:2,type:5122},{location:8,name:"a_texCoords",count:2,type:5123}]});class i extends a{dispose(){}getGeometryType(){return t.TEXT}drawGeometry(t,e,a,i){const{context:n,painter:s,rendererInfo:m,state:l}=t,c=o.load(a.materialKey),{bufferLayouts:u,attributes:p}=r(c),y=s.materialManager.getMaterialProgram(t,c,"materials/text",p,i);n.useProgram(y),this._setSharedUniforms(y,t,e),s.textureManager.bindTextures(n,y,c),y.setUniformMatrix3fv("u_displayMat3",l.displayMat3),y.setUniformMatrix3fv("u_displayViewMat3",l.displayViewMat3),this._setSizeVVUniforms(c,y,m,e),this._setColorAndOpacityVVUniforms(c,y,m),this._setRotationVVUniforms(c,y,m),y.setUniform1f("u_isHalo",1),a.draw(n,u,p),y.setUniform1f("u_isHalo",0),a.draw(n,u,p)}}export{i as default};
