/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{isNone as e}from"../../../../../core/maybe.js";import{MIN_MAX_ZOOM_PRECISION_FACTOR as t,TEXTURE_BINDING_ATTRIBUTE_DATA_0 as i,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as o,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as s,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as a}from"../definitions.js";import r from"./WGLBrush.js";class n extends r{prepareState({context:e},t,i){const o=i&&-1!==i.indexOf("id");e.setBlendingEnabled(!o),e.setBlendFunctionSeparate(1,771,1,771),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(514,t.stencilRef,255)}draw(t,i,o){const s=this.getGeometryType();i.commit(t);const a=i.getGeometry(s);e(a)||(t.timeline.begin(this.name),t.attributeView.bindTextures(t.context),a.forEachCommand((e=>this.drawGeometry(t,i,e,o))))}_setSharedUniforms(e,r,n){const{displayLevel:v,pixelRatio:l,state:u}=r;e.setUniform1f("u_pixelRatio",l),e.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs,!1,!0),e.setUniformMatrix3fv("u_displayViewMat3",u.displayViewMat3,!1,!0),e.setUniform1f("u_currentZoom",Math.round(v*t)),e.setUniform1i("u_attributeTextureSize",r.attributeView.size),e.setUniform1i("u_attributeData0",i),e.setUniform1i("u_attributeData1",o),e.setUniform1i("u_attributeData2",s),e.setUniform1i("u_attributeData3",a)}_setSizeVVUniforms(e,t,i,o){if(e.vvSizeMinMaxValue&&t.setUniform4fv("u_vvSizeMinMaxValue",i.vvSizeMinMaxValue),e.vvSizeScaleStops&&t.setUniform1f("u_vvSizeScaleStopsValue",i.vvSizeScaleStopsValue),e.vvSizeFieldStops){const e=i.getSizeVVFieldStops(o.key.level);t.setUniform1fv("u_vvSizeFieldStopsValues",e.values),t.setUniform1fv("u_vvSizeFieldStopsSizes",e.sizes)}e.vvSizeUnitValue&&t.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(e,t,i){e.vvColor&&(t.setUniform1fv("u_vvColorValues",i.vvColorValues),t.setUniform4fv("u_vvColors",i.vvColors)),e.vvOpacity&&(t.setUniform1fv("u_vvOpacityValues",i.vvOpacityValues),t.setUniform1fv("u_vvOpacities",i.vvOpacities))}_setRotationVVUniforms(e,t,i){e.vvRotation&&t.setUniform1f("u_vvRotationType","geographic"===i.vvMaterialParameters.vvRotationType?0:1)}}export{n as default};
