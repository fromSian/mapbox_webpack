/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Accessor.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/has.js";import"../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import{s as i,f as r,c as p}from"../../chunks/vec2.js";import{a}from"../../chunks/vec2f64.js";import{addPadding as d}from"./viewpointUtils.js";import n from"./ViewState.js";let c=class extends e{constructor(){super(...arguments),this.left=0,this.top=0,this.right=0,this.bottom=0}};t([s()],c.prototype,"left",void 0),t([s()],c.prototype,"top",void 0),t([s()],c.prototype,"right",void 0),t([s()],c.prototype,"bottom",void 0),c=t([o("esri.views.2d.PaddedViewState.Padding")],c);let h=class extends n{constructor(...t){super(...t),this.paddedViewState=new n,this._updateContent=(()=>{const t=a();return()=>{const e=this._get("size"),s=this._get("padding");if(!e||!s)return;const o=this.paddedViewState;i(t,s.left+s.right,s.top+s.bottom),r(t,e,t),p(o.size,t);const a=o.viewpoint;a&&(this.viewpoint=a)}})(),this.watch(["size","padding"],this._updateContent,!0),this.padding=new c,this.size=[0,0]}set padding(t){this._set("padding",t||new c)}set viewpoint(t){if(t){const e=t.clone();this.paddedViewState.viewpoint=t,d(e,t,this._get("size"),this._get("padding"));const s=this._viewpoint2D,o=e.targetGeometry;s.center[0]=o.x,s.center[1]=o.y,s.rotation=e.rotation,s.scale=e.scale,s.spatialReference=o.spatialReference,this._update()}}};t([s()],h.prototype,"paddedViewState",void 0),t([s({type:c})],h.prototype,"padding",null),t([s()],h.prototype,"viewpoint",null),h=t([o("esri.views.2d.PaddedViewState")],h);const m=h;export{m as default};
