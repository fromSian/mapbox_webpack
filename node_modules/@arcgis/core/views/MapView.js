/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../Graphic.js";import i from"../core/Collection.js";import r from"../core/CollectionFlattener.js";import s from"../core/Error.js";import a from"../core/has.js";import{isIterable as n}from"../core/iteratorUtils.js";import o from"../core/Logger.js";import{isSome as h}from"../core/maybe.js";import{init as l}from"../core/watchUtils.js";import{initialize as p}from"../core/workers/workers.js";import{property as d}from"../core/accessorSupport/decorators/property.js";import"../core/arrayUtils.js";import"../core/accessorSupport/ensureType.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import{BreakpointsOwner as u}from"./BreakpointsOwner.js";import{DOMContainer as g}from"./DOMContainer.js";import m from"./MapViewBase.js";import w from"./2d/input/MapViewInputManager.js";import y from"./2d/support/HighlightOptions.js";import f from"./support/createScreenshotPlan.js";import{getMaximumResolutionScale as v,getFormatAndQuality as V}from"./support/screenshotUtils.js";import{isSupportedScreenPointEvent as b,createScreenPointFromSupportedEvent as _}from"./support/screenUtils.js";import{check as M}from"./support/WebGLRequirements.js";import j from"./ui/2d/DefaultUI2D.js";import L from"../webmap/background/ColorBackground.js";const O=o.getLogger("esri.views.MapView");let S,C,k,E,x,N;async function W(){const[,{GraphicsView2D:e,GraphicContainer:t,LabelManager:i,MapViewNavigation:r,MagnifierView2D:s,Stage:a}]=await Promise.all([import("./webgl.js"),import("./2d/mapViewDeps.js")]);C=e,k=t,E=i,x=r,N=s,S=a}let P=class extends(u(g(m))){constructor(e){super(e),this._magnifierView=null,this._stage=null,this._resolveWhenReady=[],this.rootLayerViews=new r({getCollections:()=>{var e,t;return[null==(e=this.basemapView)?void 0:e.baseLayerViews,this.layerViews,null==(t=this.basemapView)?void 0:t.referenceLayerViews]},getChildrenFunction:()=>null}),this.floors=new i,this.graphicsView=null,this.highlightOptions=new y,this.inputManager=new w({view:this}),this.mapViewNavigation=null,this.supersampleScreenshotsEnabled=!1,this.ui=new j,this.rendering=!1,p()}destroy(){this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)}get background(){return this.get("map.initialViewProperties.background")||null}set background(e){void 0===e?this._clearOverride("background"):this._override("background",e)}get resourceManager(){return this._stage.resourceManager}get textureManager(){return this._stage.painter.textureManager}get navigating(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)}toMap(e){if(b(e)){const t=_(this,e);return super.toMap(t)}return super.toMap(e)}async hitTest(e,t){const i=b(e)?_(this,e):e;if(!this.ready||isNaN(i.x)||isNaN(i.y))return{screenPoint:i,results:[]};let r=new Set,s=!1,a=null,n=null;null!=t&&t.include?q(t.include,U(this,(e=>r.add(e)),(e=>{a||(a=new Set),a.add(e)}),(e=>r.add(e)),(()=>s=!0))):(s=!0,r=new Set(this.allLayerViews)),null!=t&&t.exclude&&q(t.exclude,U(this,(e=>r.delete(e)),(e=>{n||(n=new Set),n.add(e)})));const o=this.allLayerViews.filter((e=>!e.suspended&&r.has(e))).reverse(),l=this.toMap(i);let p=(await Promise.all([s?this.graphicsView.hitTest(l):null,...o.map((e=>e.hitTest(l,i)))])).filter(h).flat();return a&&(p=p.filter((e=>a.has(G(e))))),n&&(p=p.filter((e=>!n.has(G(e))))),{screenPoint:i,results:p.map((e=>({mapPoint:l,graphic:e})))}}takeScreenshot(e){e=e||{};const t=this.supersampleScreenshotsEnabled?Math.min(4,v(this.size,Math.min(4096,this._stage.context.parameters.maxTextureSize))):1;let i;e.layers?(i=[],e.layers.forEach((e=>{const t=this.allLayerViews.find((t=>t.layer.id===e.id));t&&"container"in t&&t.container&&i.push(t.container)}))):i=this._stage.children;const{format:r,quality:s}=V(e.format,e.quality),a=f(e,t,this.size,this.padding,r,s,i,e.rotation);return this._stage.takeScreenshot(a)}on(e,t,i,r){const s=this.inputManager&&this.viewEvents.on(e,t,i,r);return s||super.on(e,t)}hasEventListener(e){return super.hasEventListener(e)||this.viewEvents.hasHandler(e)}whenLayerView(e){return super.whenLayerView(e)}graphicChanged(e){if(this.graphicsView){this.graphicsView.graphicUpdateHandler(e)}}whenReady(){return new Promise((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))}forceDOMReadyCycle(){this.forceReadyCycle()}validate(){let e=M({checkMajorWebPerformanceCaveat:!1});return a("safari")&&a("safari")<9&&(e=new s("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:a("safari")})),h(e)?(O.warn("#validate()",e.message),Promise.reject(e)):W()}_startup(){this.timeline.begin("MapView Startup"),super._startup(),this.graphics.owner=this;const e={disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},t=new S(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenshotsEnabled,contextOptions:e,renderingOptions:this.renderingOptions,timeline:this.timeline}),i=new C({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new k(this.featuresTilingScheme)}),r=new x({view:this,animationManager:this.animationManager}),s=new E({view:this});this._magnifierView=new N,this._magnifierView.magnifier=this.magnifier,this._stage=t,this.frameTask.graphicsView=i,this._set("graphicsView",i),this._set("mapViewNavigation",r),this._set("labelManager",s),this.handles.add([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),t.on("post-render",(()=>this._set("rendering",t.renderRequested))),t.on("will-render",(()=>this._set("rendering",t.renderRequested))),t.on("webgl-error",(e=>this.fatalError=e.error)),l(this,"stationary",(e=>t.stationary=e),!0),l(this,"state.id",(()=>t.state=this.state),!0),l(this,"background",(e=>{t.background=e,this._magnifierView.background=e}),!0),l(this,"magnifier",(e=>this._magnifierView.magnifier=e),!0),l(this,"renderingOptions",(e=>t.renderingOptions=e),!0),l(this,"highlightOptions",(()=>t.highlightOptions=this.highlightOptions),!0)],"map-view"),t.state=this.state,this._updateStageChildren();const a=this._resolveWhenReady;this._resolveWhenReady=[],a.forEach((e=>e(this))),this.timeline.end("MapView Startup")}_teardown(){this.handles.remove("map-view"),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy();this.graphicsView.destroy(),this.mapViewNavigation.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,super._teardown()}_updateStageChildren(){this._stage.removeAllChildren(),this.rootLayerViews.forEach((e=>{this._stage.addChild(e.container)}));const e=this.graphicsView;this._stage.addChild(e.container),this._stage.addChild(this._magnifierView)}};e([d({type:L})],P.prototype,"background",null),e([d()],P.prototype,"floors",void 0),e([d()],P.prototype,"graphicsView",void 0),e([d({type:y})],P.prototype,"highlightOptions",void 0),e([d({readOnly:!0})],P.prototype,"inputManager",void 0),e([d({readOnly:!0})],P.prototype,"resourceManager",null),e([d({readOnly:!0})],P.prototype,"textureManager",null),e([d({readOnly:!0})],P.prototype,"mapViewNavigation",void 0),e([d({type:Boolean})],P.prototype,"navigating",null),e([d({type:Boolean,constructOnly:!0})],P.prototype,"supersampleScreenshotsEnabled",void 0),e([d({type:j})],P.prototype,"ui",void 0),e([d({readOnly:!0})],P.prototype,"rendering",void 0),e([d({constructOnly:!0})],P.prototype,"renderCanvas",void 0),e([d({constructOnly:!0})],P.prototype,"deactivatedWebGLExtensions",void 0),e([d({constructOnly:!0})],P.prototype,"debugWebGLExtensions",void 0),P=e([c("esri.views.MapView")],P);const R=P;function G(e){const t=e.getObjectId();var i,r,s,a;return t?`${null!=(i=null!=(r=null==(s=e.layer)?void 0:s.uid)?r:null==(a=e.sourceLayer)?void 0:a.uid)?i:"MapView"}/${t}`:`"MapView/${e.uid}`}function U(e,i,r,s,a){return n=>{if(n instanceof t){if(n.layer===e)null==a||a();else{const t=e.allLayerViews.find((e=>e.layer===n.layer));t&&(null==s||s(t))}r(G(n))}else{const t=e.allLayerViews.find((e=>e.layer===n));t&&i(t)}}}function q(e,t){if(e)if(n(e))for(const i of e)if(n(i))for(const e of i)t(e);else t(i);else t(e)}export{R as default};
