/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{unpackFloatRGBA as e}from"../../../../core/floatRGBA.js";import{isSome as t,isNone as r}from"../../../../core/maybe.js";import i from"../../../../core/PooledArray.js";import{m as n,c as s}from"../../../../chunks/mat4.js";import{c as a}from"../../../../chunks/mat4f64.js";import{m as o}from"../../../../chunks/vec3.js";import{l as h}from"../../../../chunks/vec4.js";import{c as f}from"../../../../chunks/vec4f64.js";import{intersectsSphere as c,create as l,copy as u}from"../../../../geometry/support/frustum.js";import{c as d}from"../../../../chunks/sphere.js";import{maxScale as g}from"../../support/mathUtils.js";import{empty as m,union as p,set as b}from"./depthRange.js";import{assert as w}from"./Util.js";const v=1e4,j=100,R=500,B=500,C=.1;function M(t,r,i){return e(r,t)*(i[1]-i[0])+i[0]}function A(e,t,r){if(t.size<v)return U.compute(e,t);const i=m();return r.forAll((t=>{t.isVisible&&p(i,S(e,t))})),i}function S(e,r){if(!r.isVisible)return;const i=m(),n=r.getSpatialQueryAccelerator();return t(n)?y(i,e,n):I(i,e,r.objects),i}function y(e,t,r){const i=t.eye,n=t.viewForward,s=t.frustum,a=e=>e.isVisible,o=r.objectCount;if(o<R)b(T,t.near,Math.min(e.near,t.far)),r.forEachInDepthRange(i,n,1,T,((r,i)=>{P(e,t,r),T.far=e.near,i.setRange(T)}),s,a),b(T,Math.max(e.far,t.near),t.far),r.forEachInDepthRange(i,n,-1,T,((r,i)=>{P(e,t,r),T.near=e.far,i.setRange(T)}),s,a);else{const i=Math.max(Math.min(o,B),Math.ceil(o*C)),h=r.findClosest(n,1,s,a,i),f=r.findClosest(n,-1,s,a,i);h&&f&&(V(e,t,h.boundingVolumeWorldSpace.bounds),V(e,t,f.boundingVolumeWorldSpace.bounds))}}function I(e,t,r){N.clear(),r.forAll((e=>{e.isVisible&&0!==e.geometryRecords.length&&N.add(e)})),N.empty||(N.sort(t),b(T,t.near,Math.min(e.near,t.far)),N.forEachInDepthRange(T,1,((r,i)=>{i<e.near&&P(e,t,r)})),b(T,Math.max(e.far,t.near),t.far),N.forEachInDepthRange(T,-1,((t,r,i)=>{e.far=Math.max(e.far,i)})))}function P(e,t,r){if(!r.isVisible)return;if(!c(t.frustum,r.boundingVolumeWorldSpace.bounds))return;const i=r.transformation,s=F;r.geometryRecords.forEach((r=>{n(s,i,r.getShaderTransformation());const a=g(s);x(e,t,r.geometry.boundingInfo,s,a)}))}function x(e,t,i,n,s){if(r(i))return;const a=t.eye,h=t.viewForward;o(k,i.center,n);const f=h[0]*(k[0]-a[0])+h[1]*(k[1]-a[1])+h[2]*(k[2]-a[2]);if(k[3]=i.radius*s,!(f-k[3]>e.near&&f+k[3]<e.far)&&c(t.frustum,k))if(i.radius>j&&i.getChildren()){const r=i.getChildren();for(let i=0;i<8;++i)r[i]&&x(e,t,r[i],n,s)}else L.unionDepthRangeWithAABB(e,t.viewProjectionMatrix,n,i.bbMin,i.bbMax)}function V(e,t,r){const i=t.eye,n=t.viewForward,s=(r[0]-i[0])*n[0]+(r[1]-i[1])*n[1]+(r[2]-i[2])*n[2];e.near=Math.min(e.near,s-r[3]),e.far=Math.max(e.far,s+r[3])}class _{constructor(){this._items=new i({allocator:e=>e||{obj:null,distance:0,near:0,far:0},deallocator:e=>(e.obj=null,e.distance=0,e.near=0,e.far=0,e)})}get length(){return this._items.length}get empty(){return 0===this._items.length}clear(){this._items.clear()}add(e){this._items.pushNew().obj=e}sort(e){const t=e.eye,r=e.viewForward;this._items.forAll((e=>{const i=e.obj.boundingVolumeWorldSpace.bounds,n=(i[0]-t[0])*r[0]+(i[1]-t[1])*r[1]+(i[2]-t[2])*r[2];e.distance=n,e.near=n-i[3],e.far=n+i[3]})),this._items.sort(((e,t)=>e.distance-t.distance))}forEachInDepthRange(e,t,r){if(1===t)for(let i=0;i<this._items.length;++i){const t=this._items.data[i];t.far<e.near||t.near>e.far||r(t.obj,t.near,t.far)}else for(let i=this._items.length-1;i>=0;--i){const t=this._items.data[i];t.far<e.near||t.near>e.far||r(t.obj,t.near,t.far)}}}class D{constructor(){this.view=a(),this.viewProj=a(),this.frustum=l(),this.geometries=[],this.near=[],this.far=[],this.nearCandidates=[],this.farCandidates=[],this.range={near:0,far:0},this.looseRange={near:0,far:0}}compute(e,t){this.reset(),s(this.view,e.viewMatrix),n(this.viewProj,e.projectionMatrix,this.view),u(e.frustum,this.frustum);const r=this.view,i=r[2],a=r[6],o=r[10],h=r[14],f=this.range;let c=0;if(t.forEach((e=>{if(!e.instanceParameters.visible)return;if(!e.castShadow)return;let t;e.hasShaderTransformation?(e.computeBoundingSphere(e.getShaderTransformation(),k,1),t=k):t=e.boundingSphere;const r=i*t[0]+a*t[1]+o*t[2]+h,n=r-t[3],s=r+t[3];this.geometries[c]=e,this.near[c]=-s,this.far[c]=-n,++c})),0===this.geometries.length)return f;for(let n=0;n<this.geometries.length;++n)this.near[n]>f.far&&(f.far=this.near[n]),this.near[n]>2&&this.far[n]<f.near&&(f.near=this.far[n]);const l=this.looseRange;l.near=Math.max(.5*f.near,2),l.far=2*f.far;let d=0,g=0;for(let n=0;n<this.geometries.length;++n)this.near[n]<f.near&&(this.near[n]>=l.near?f.near=this.near[n]:this.nearCandidates[d++]=n),this.far[n]>f.far&&(this.far[n]<=l.far?f.far=this.far[n]:this.farCandidates[g++]=n);if(0===this.nearCandidates.length&&0===this.farCandidates.length)return f;this.nearCandidates.sort(((e,t)=>this.near[e]<this.near[t]?-1:this.near[e]>this.near[t]?1:0)),this.farCandidates.sort(((e,t)=>this.far[e]<this.far[t]?1:this.far[e]>this.far[t]?-1:0));for(let n=0;n<this.nearCandidates.length;++n){const e=this.nearCandidates[n];if(this.near[e]<f.near){const t=this.geometries[e],r=t.boundingInfo;this.includeNearBoundingInfoRec(r,t.getShaderTransformation())}}for(let n=0;n<this.farCandidates.length;++n){const e=this.farCandidates[n];if(this.far[e]>f.far){const t=this.geometries[e],r=t.boundingInfo;this.includeFarBoundingInfoRec(r,t.getShaderTransformation())}}return f}reset(){this.geometries.length=0,this.near.length=0,this.far.length=0,this.nearCandidates.length=0,this.farCandidates.length=0,this.range.near=Number.MAX_VALUE,this.range.far=-Number.MAX_VALUE}includeNearBoundingInfoRec(e,t){if(r(e))return;const i=e.getCenter();o(k,i,t);const n=g(t),s=k[0],a=k[1],h=k[2],f=e.getBSRadius()*n,c=this.frustum;if(c[0][0]*s+c[0][1]*a+c[0][2]*h+c[0][3]>f||c[1][0]*s+c[1][1]*a+c[1][2]*h+c[1][3]>f||c[2][0]*s+c[2][1]*a+c[2][2]*h+c[2][3]>f||c[3][0]*s+c[3][1]*a+c[3][2]*h+c[3][3]>f)return;const l=this.view[2]*s+this.view[6]*a+this.view[10]*h+this.view[14],u=l+f;if(!(-(l-f)<2||-u>=this.range.near))if(-u>this.looseRange.near)this.range.near=-u;else{if(f>j){const r=e.getChildren();if(void 0!==r){for(let e=0;e<8;++e)void 0!==r[e]&&this.includeNearBoundingInfoRec(r[e],t);return}}L.unionDepthRangeWithAABB(this.range,this.viewProj,t,e.getBBMin(),e.getBBMax())}}includeFarBoundingInfoRec(e,t){if(r(e))return;let i=e.getBSRadius();const n=e.getCenter();o(k,n,t);const s=g(t),a=k[0],h=k[1],f=k[2];i*=s;const c=this.frustum;if(c[0][0]*a+c[0][1]*h+c[0][2]*f+c[0][3]>i||c[1][0]*a+c[1][1]*h+c[1][2]*f+c[1][3]>i||c[2][0]*a+c[2][1]*h+c[2][2]*f+c[2][3]>i||c[3][0]*a+c[3][1]*h+c[3][2]*f+c[3][3]>i)return;const l=this.view[2]*a+this.view[6]*h+this.view[10]*f+this.view[14]-i;if(!(-l<=this.range.far))if(-l<this.looseRange.far)this.range.far=-l;else{if(i>j){const r=e.getChildren();if(void 0!==r){for(let e=0;e<8;++e)void 0!==r[e]&&this.includeFarBoundingInfoRec(r[e],t);return}}L.unionDepthRangeWithAABB(this.range,this.viewProj,t,e.getBBMin(),e.getBBMax())}}}class E{constructor(){this.modelViewProj=a(),this.clipPosition=[f(),f(),f(),f(),f(),f(),f(),f()]}unionDepthRangeWithAABB(e,t,r,i,s){const a=this.modelViewProj;n(a,t,r);let o=!1;for(let n=0;n<8;++n){const e=this.clipPosition[n],t=0===n||3===n||4===n||7===n?i[0]:s[0],r=0===n||1===n||4===n||5===n?i[1]:s[1],o=n<4?i[2]:s[2];e[0]=a[0]*t+a[4]*r+a[8]*o+a[12],e[1]=a[1]*t+a[5]*r+a[9]*o+a[13],e[2]=a[2]*t+a[6]*r+a[10]*o+a[14],e[3]=a[3]*t+a[7]*r+a[11]*o+a[15]}for(let n=0;n<12;++n){const t=this.clipPosition[W[n][0]],r=this.clipPosition[W[n][1]],i=this.clipPosition[W[n][2]],s=this.clipTriangle(t,r,i);let a=!0;for(let e=0;e<s.length;++e){if(s[e][3]>=2){a=!1;break}}if(!a){o=!0;for(let t=0;t<s.length;++t){const r=s[t][3];r<e.near&&(e.near=r),r>e.far&&(e.far=r)}}}return o}inside(e,t){return 0===t?e[0]>=-e[3]:1===t?e[1]>=-e[3]:2===t?e[0]<=e[3]:3===t?e[1]<=e[3]:void w(!1)}intersect(e,t,r){let i=0;return 0===r?i=(-e[3]-e[0])/(t[0]-e[0]+t[3]-e[3]):1===r?i=(-e[3]-e[1])/(t[1]-e[1]+t[3]-e[3]):2===r?i=(e[3]-e[0])/(t[0]-e[0]-t[3]+e[3]):3===r&&(i=(e[3]-e[1])/(t[1]-e[1]-t[3]+e[3])),h(f(),e,t,i)}clipTriangle(e,t,r){let i=[e,t,r];for(let n=0;n<4;++n){const e=i;i=[];for(let t=0;t<e.length;++t){const r=e[t],s=e[(t+1)%e.length];this.inside(s,n)?(this.inside(r,n)||i.push(this.intersect(r,s,n)),i.push(s)):this.inside(r,n)&&i.push(this.intersect(r,s,n))}}return i}}const W=[[0,1,3],[2,3,1],[1,5,2],[6,2,5],[5,4,6],[7,6,4],[4,0,7],[3,7,0],[3,2,7],[6,7,2],[4,5,0],[1,0,5]],k=d(),F=a(),T=m(),N=new _,U=new D,L=new E;export{D as DepthRangeFromRenderGeometries,S as depthRangeFromLayer,A as depthRangeFromScene,M as textureToDepth};
