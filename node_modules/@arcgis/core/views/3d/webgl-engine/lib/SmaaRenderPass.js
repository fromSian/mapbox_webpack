/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{abortMaybe as r,isSome as i,disposeMaybe as s}from"../../../../core/maybe.js";import{throwIfAborted as o,isAborted as h}from"../../../../core/promiseUtils.js";import{property as a}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../../../core/accessorSupport/decorators/subclass.js";import{requestImage as n}from"../../../../support/requestImageUtils.js";import{createScreenSizeTriangleVAO as d}from"./glUtil3D.js";import{SMAATechniqueConfiguration as u,SMAATechnique as c}from"./SMAATechnique.js";import g from"../../../webgl/FramebufferObject.js";import p from"../../../webgl/Texture.js";let _=class extends t{constructor(e,t){super({}),this.rctx=e,this._techniqueRep=t,this._isEnabled=!1}normalizeCtorArgs(){return{}}dispose(){this._abortController=r(this._abortController),this.disable()}_loadResources(e){if(i(this._abortController))return!1;if(i(this._searchTexture))return!0;this._abortController=new AbortController;const t=this._abortController.signal;return import("./SmaaRenderPassData.js").then((e=>this._loadTextures(e,t))).then((()=>e())).finally((()=>this._abortController=null)),!1}_loadTextures(e,t){return o(t),Promise.all([this.loadTextureFromBase64(e.areaTexture,9729,6407),this.loadTextureFromBase64(e.searchTexure,9728,6409)]).then((([e,r])=>{h(t)?(e.dispose(),r.dispose(),o(t)):(this._areaTexture=e,this._searchTexture=r)}))}get updating(){return i(this._abortController)}enable(e){if(this._isEnabled)return!0;if(!this._edgeDetectTechnique||!this._blendWeights||!this._blur){const e=new u,t=(e,t)=>this._techniqueRep.releaseAndAcquire(c,e,t);e.output=0,this._edgeDetectTechnique=t(e,this._edgeDetectTechnique),e.output=1,this._blendWeights=t(e,this._blendWeights),e.output=2,this._blur=t(e,this._blur)}return!!this._loadResources(e)&&(this._vao=d(this.rctx),this._edges=new g(this.rctx,{colorTarget:0,depthStencilTarget:0},{target:3553,pixelFormat:6407,dataType:5121,samplingMode:9729,wrapMode:33071,width:4,height:4}),this._blend=new g(this.rctx,{colorTarget:0,depthStencilTarget:0},{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9729,wrapMode:33071,width:4,height:4}),this._isEnabled=!0,!0)}disable(){this._isEnabled&&(this._vao=s(this._vao),this._areaTexture=s(this._areaTexture),this._searchTexture=s(this._searchTexture),this._blend=s(this._blend),this._edges=s(this._edges),this._isEnabled=!1)}render(e){if(!this._isEnabled)return;const t=this.rctx,r=t.getBoundFramebufferObject(),i={x:0,y:0,width:e.descriptor.width,height:e.descriptor.height};t.bindVAO(this._vao),this._edgeDetectTechnique.bindPipelineState(t),t.setViewport(i.x,i.y,i.width,i.height),this._edges.resize(i.width,i.height),t.bindFramebuffer(this._edges),t.setClearColor(0,0,0,1),t.clear(16384),t.useProgram(this._edgeDetectTechnique.program),this._edgeDetectTechnique.program.bindTexture(e,"tColor"),this._edgeDetectTechnique.program.setUniform4f("uResolution",1/i.width,1/i.height,i.width,i.height),t.drawArrays(4,0,3),this._blend.resize(i.width,i.height),t.bindFramebuffer(this._blend),t.setClearColor(0,0,1,1),t.clear(16384),t.useProgram(this._blendWeights.program),this._blendWeights.program.setUniform4f("uResolution",1/i.width,1/i.height,i.width,i.height),this._blendWeights.program.bindTexture(this._searchTexture,"tSearch"),this._blendWeights.program.bindTexture(this._areaTexture,"tArea"),this._blendWeights.program.bindTexture(this._edges.colorTexture,"tEdges"),t.drawArrays(4,0,3),t.bindFramebuffer(r),t.setClearColor(0,1,0,1),t.clear(16384),t.useProgram(this._blur.program),this._blur.program.setUniform4f("uResolution",1/i.width,1/i.height,i.width,i.height),this._blur.program.bindTexture(e,"tColor"),this._blur.program.bindTexture(this._blend.colorTexture,"tBlendWeights"),t.drawArrays(4,0,3)}loadTextureFromBase64(e,t,r){const i=new p(this.rctx,{pixelFormat:r,dataType:5121,wrapMode:33071,samplingMode:t},null);return n(e).then((e=>(i.resize(e.width,e.height),i.setData(e),i)))}};e([a()],_.prototype,"_abortController",void 0),e([a({readOnly:!0})],_.prototype,"updating",null),_=e([l("esri.views.3d.webgl-engine.lib.SmaaRenderPass")],_);export{_ as SmaaRenderPass};
