/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{clamp as t,acosClamped as s,lerp as e}from"../../../../core/mathUtils.js";import{isSome as a,disposeMaybe as i}from"../../../../core/maybe.js";import{c as r}from"../../../../chunks/mat3f64.js";import{a as h,m as o,o as c,b as n,l as u}from"../../../../chunks/mat4.js";import{c as d}from"../../../../chunks/mat4f64.js";import{s as m,m as p,g as l,o as f,a as x,f as g,k as b,n as S,i as T,c as w}from"../../../../chunks/vec2.js";import{a as M}from"../../../../chunks/vec2f64.js";import{g as _,o as C,m as j,s as v}from"../../../../chunks/vec3.js";import{c as z}from"../../../../chunks/vec3f64.js";import{s as D,t as U}from"../../../../chunks/vec4.js";import{c as y}from"../../../../chunks/vec4f64.js";import F from"./Camera.js";import{assert as k,logWithBase as N,verify as O,rayRay2D as A}from"./Util.js";import P from"../../../webgl/FramebufferObject.js";import R from"../../../webgl/Texture.js";import{getGpuMemoryUsage as E}from"../../../webgl/Util.js";class L{constructor(){this.camera=new F,this.lightMat=d()}}class H{constructor(t,s,e=0){this.rctx=t,this.viewingMode=s,this._enabled=!1,this._snapshots=new Array,this.textureSize=0,this.maxTextureSize=0,this.numCascades=1,this.maxNumCascades=4,this.splitSchemeLambda=0,this.warp=!0,this.cascadeDistances=[0,0,0,0,0],this.cascades=[],this.maxTextureSize=this.rctx.parameters.maxTextureSize;for(let a=0;a<4;++a)this.cascades.push(new L);this.snapshotCount=e}dispose(){this.discardDepthTexture(),this.discardAllSnapshots()}set maxCascades(s){this.maxNumCascades=t(Math.floor(s),1,4)}get maxCascades(){return this.maxNumCascades}set enabled(t){this._enabled=t,t||(this.discardDepthTexture(),this.discardAllSnapshots())}get enabled(){return this._enabled}get snapshotCount(){return this._snapshots.length}set snapshotCount(t){const s=this._snapshots.length;if(t>s){const e=t-s;this._snapshots.length=t;for(let t=0;t<e;++t)this._snapshots[s+t]=null}else if(t<this.snapshotCount){const e=s-t;for(let s=0;s<e;++s)this.discardSnapshot(t+s);this._snapshots.length=t}}getSnapshot(t){return this.enabled?this._snapshots[t]:null}getCascades(){for(let t=0;t<this.numCascades;++t)st[t]=this.cascades[t];return st.length=this.numCascades,st}start(t,s,e){k(this.enabled),this.textureSize=this.computeTextureSize(t.fullWidth,t.fullHeight),this.ensureDepthTexture();const{near:a,far:i}=this.clampNearFar(e);this.computeCascadeDistances(i,a),this.setupMatrices(t,s);const r=t.viewMatrix,h=t.projectionMatrix;for(let o=0;o<this.numCascades;++o)this.constructCascade(o,h,r,s);this.lastOrigin=null,this.clear()}finish(t){k(this.enabled),this.rctx.bindFramebuffer(t)}bind(t){this.enabled?(this._depthTextureUnit=t.bindTexture(this._depthTexture,"uShadowMapTex"),t.setUniform1f("uDepthHalfPixelSz",.5/this.textureSize),t.setUniform1i("uShadowMapNum",this.numCascades),t.setUniform4f("uShadowMapDistance",this.cascadeDistances[0],this.numCascades>1?this.cascadeDistances[1]:1/0,this.numCascades>2?this.cascadeDistances[2]:1/0,this.numCascades>3?this.cascadeDistances[3]:1/0)):t.setUniform1f("uDepthHalfPixelSz",-1)}bindView(t,s){if(!this.enabled)return;const e=this.lastOrigin;if(!(e&&e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2])){this.lastOrigin=this.lastOrigin||z(),_(this.lastOrigin,s);for(let t=0;t<this.numCascades;++t){h(et,this.cascades[t].lightMat,s);for(let s=0;s<16;++s)at[16*t+s]=et[s]}}t.setUniformMatrix4fv("uShadowMapMatrix",at)}takeCascadeSnapshotTo(t,s){k(this.enabled),this.ensureSnapshot(s),this._bindFbo();const e=this.rctx,a=e.bindTexture(this._snapshots[s],R.TEXTURE_UNIT_FOR_UPDATES);e.gl.copyTexSubImage2D(3553,0,t.camera.viewport[0],t.camera.viewport[1],t.camera.viewport[0],t.camera.viewport[1],t.camera.viewport[2],t.camera.viewport[3]),e.bindTexture(a,R.TEXTURE_UNIT_FOR_UPDATES)}clear(){const t=this.rctx;this._bindFbo(),t.setClearColor(1,1,1,1),t.clearSafe(16640)}computeTextureSize(t,s){const e=.5*Math.log(t*t+s*s)*Math.LOG2E,a=.35,i=2**Math.round(e+a);return Math.min(this.maxTextureSize,2*i)}ensureDepthTexture(){if(null!=this._depthTexture&&this._depthTexture.descriptor.width===this.textureSize)return;this.discardDepthTexture();const t={target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0,width:this.textureSize,height:this.textureSize};this._depthTexture=new R(this.rctx,t),this.fbo=new P(this.rctx,{colorTarget:0,depthStencilTarget:1,width:this.textureSize,height:this.textureSize},this._depthTexture)}ensureSnapshot(t){const s=this._snapshots[t];if(a(s)&&s.descriptor.width===this.textureSize)return;this.discardSnapshot(t);const e={target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0,width:this.textureSize,height:this.textureSize};this._snapshots[t]=new R(this.rctx,e)}discardDepthTexture(){this.fbo=i(this.fbo),this._depthTexture=i(this._depthTexture)}discardSnapshot(t){this._snapshots[t]=i(this._snapshots[t])}discardAllSnapshots(){for(let t=0;t<this.snapshotCount;++t)this.discardSnapshot(t)}_bindFbo(){const t=this.rctx;a(this._depthTextureUnit)&&(t.bindTexture(null,this._depthTextureUnit),this._depthTextureUnit=null),t.bindFramebuffer(this.fbo)}constructCascade(t,s,e,a){const i=this.cascades[t],r=-this.cascadeDistances[t],c=-this.cascadeDistances[t+1],n=(s[10]*r+s[14])/Math.abs(s[11]*r+s[15]),u=(s[10]*c+s[14])/Math.abs(s[11]*c+s[15]);k(n<u);for(let h=0;h<8;++h){D(G,h%4==0||h%4==3?-1:1,h%4==0||h%4==1?-1:1,h<4?n:u,1),U(V[h],G,q);for(let t=0;t<3;++t)V[h][t]/=V[h][3]}C(tt,V[0]),h(I,$,tt),i.camera.viewMatrix=I;for(let h=0;h<8;++h)j(V[h],V[h],i.camera.viewMatrix);_(W,V[0]),_(B,V[0]);for(let h=1;h<8;++h)for(let t=0;t<3;++t)W[t]=Math.min(W[t],V[h][t]),B[t]=Math.max(B[t],V[h][t]);W[2]-=200,B[2]+=200,i.camera.near=-B[2],i.camera.far=-W[2],this.warp?this.constructTrapezoidalProjection(e,a,i):this.constructOrthogonalProjection(i),o(i.lightMat,i.camera.projectionMatrix,i.camera.viewMatrix);const d=this.textureSize/2;i.camera.viewport[0]=t%2==0?0:d,i.camera.viewport[1]=0===Math.floor(t/2)?0:d,i.camera.viewport[2]=d,i.camera.viewport[3]=d}constructOrthogonalProjection(t){c(t.camera.projectionMatrix,W[0],B[0],W[1],B[1],t.camera.near,t.camera.far)}constructTrapezoidalProjection(t,e,a){const i=1/V[0][3],r=1/V[4][3];k(i<r);let h=i+Math.sqrt(i*r);const o=Math.sin(s(t[2]*e[0]+t[6]*e[1]+t[10]*e[2]));h/=o,lt(V,h,o,J,K,Q,Y,Z),Tt(J,K,Y,Z,a.camera.projectionMatrix),a.camera.projectionMatrix[10]=2/(W[2]-B[2]),a.camera.projectionMatrix[14]=-(W[2]+B[2])/(W[2]-B[2])}setupMatrices(t,s){o(X,t.projectionMatrix,t.viewMatrix),n(q,X);const e=1===this.viewingMode?t.eye:v(tt,0,0,1);u($,[0,0,0],[-s[0],-s[1],-s[2]],e)}clampNearFar(t){let{near:s,far:e}=t;return s<2&&(s=2),e<2&&(e=2),s>=e&&(s=2,e=4),{near:s,far:e}}computeCascadeDistances(t,s){this.numCascades=Math.min(1+Math.floor(N(t/s,4)),this.maxNumCascades);const a=(t-s)/this.numCascades,i=(t/s)**(1/this.numCascades);let r=s,h=s;for(let o=0;o<this.numCascades+1;++o)this.cascadeDistances[o]=e(r,h,this.splitSchemeLambda),r*=i,h+=a}get gpuMemoryUsage(){var t,s;return this._snapshots.reduce(((t,s)=>t+E(s)),null!=(t=null==(s=this.fbo)?void 0:s.gpuMemoryUsage)?t:0)}get test(){const t=this;return{maxNumCascades:this.maxNumCascades,cascades:this.cascades,textureSize:this.textureSize,depthTexture:this._depthTexture,set splitSchemeLambda(s){t.splitSchemeLambda=s},get splitSchemeLambda(){return t.splitSchemeLambda},set warp(s){t.warp=s},get warp(){return t.warp}}}}const I=d(),X=d(),q=d(),G=y(),V=[];for(let wt=0;wt<8;++wt)V.push(y());const W=z(),B=z(),J=M(),K=M(),Q=M(),Y=M(),Z=M(),$=d(),tt=z(),st=[],et=d(),at=new Float32Array(64),it=M(),rt=M(),ht=[M(),M(),M(),M()],ot=M(),ct=M(),nt=M(),ut=M(),dt=M(),mt=M(),pt=M();function lt(t,s,e,a,i,r,h,o){m(it,0,0);for(let m=0;m<4;++m)p(it,it,t[m]);l(it,it,.25),m(rt,0,0);for(let m=4;m<8;++m)p(rt,rt,t[m]);l(rt,rt,.25),f(ht[0],t[4],t[5],.5),f(ht[1],t[5],t[6],.5),f(ht[2],t[6],t[7],.5),f(ht[3],t[7],t[4],.5);let c=0,n=x(ht[0],it);for(let m=1;m<4;++m){const t=x(ht[m],it);t<n&&(n=t,c=m)}g(ot,ht[c],t[c+4]);const u=ot[0];let d,M;ot[0]=-ot[1],ot[1]=u,g(ct,rt,it),b(ct,ot)<0&&S(ot,ot),f(ot,ot,ct,e),T(ot,ot),d=M=b(g(nt,t[0],it),ot);for(let m=1;m<8;++m){const s=b(g(nt,t[m],it),ot);s<d?d=s:s>M&&(M=s)}w(a,it),l(nt,ot,d-s),p(a,a,nt);let _=-1,C=1,j=0,v=0;for(let m=0;m<8;++m){g(ut,t[m],a),T(ut,ut);const s=ot[0]*ut[1]-ot[1]*ut[0];s>0?s>_&&(_=s,j=m):s<C&&(C=s,v=m)}O(_>0,"leftArea"),O(C<0,"rightArea"),l(dt,ot,d),p(dt,dt,it),l(mt,ot,M),p(mt,mt,it),pt[0]=-ot[1],pt[1]=ot[0];const z=A(a,t[v],mt,p(nt,mt,pt),1,i),D=A(a,t[j],mt,nt,1,r),U=A(a,t[j],dt,p(nt,dt,pt),1,h),y=A(a,t[v],dt,nt,1,o);O(z,"rayRay"),O(D,"rayRay"),O(U,"rayRay"),O(y,"rayRay")}function ft(t,s){return 3*s+t}const xt=M();function gt(t,s){return m(xt,t[s],t[s+3]),xt}const bt=M(),St=r();function Tt(t,s,e,a,i){g(bt,e,a),l(bt,bt,.5),St[0]=bt[0],St[1]=bt[1],St[2]=0,St[3]=bt[1],St[4]=-bt[0],St[5]=0,St[6]=bt[0]*bt[0]+bt[1]*bt[1],St[7]=bt[0]*bt[1]-bt[1]*bt[0],St[8]=1,St[ft(0,2)]=-b(gt(St,0),t),St[ft(1,2)]=-b(gt(St,1),t);let r=b(gt(St,0),e)+St[ft(0,2)],h=b(gt(St,1),e)+St[ft(1,2)],o=b(gt(St,0),a)+St[ft(0,2)],c=b(gt(St,1),a)+St[ft(1,2)];r=-(r+o)/(h+c),St[ft(0,0)]+=St[ft(1,0)]*r,St[ft(0,1)]+=St[ft(1,1)]*r,St[ft(0,2)]+=St[ft(1,2)]*r,r=1/(b(gt(St,0),e)+St[ft(0,2)]),h=1/(b(gt(St,1),e)+St[ft(1,2)]),St[ft(0,0)]*=r,St[ft(0,1)]*=r,St[ft(0,2)]*=r,St[ft(1,0)]*=h,St[ft(1,1)]*=h,St[ft(1,2)]*=h,St[ft(2,0)]=St[ft(1,0)],St[ft(2,1)]=St[ft(1,1)],St[ft(2,2)]=St[ft(1,2)],St[ft(1,2)]+=1,r=b(gt(St,1),s)+St[ft(1,2)],h=b(gt(St,2),s)+St[ft(2,2)],o=b(gt(St,1),e)+St[ft(1,2)],c=b(gt(St,2),e)+St[ft(2,2)],r=-.5*(r/h+o/c),St[ft(1,0)]+=St[ft(2,0)]*r,St[ft(1,1)]+=St[ft(2,1)]*r,St[ft(1,2)]+=St[ft(2,2)]*r,r=b(gt(St,1),s)+St[ft(1,2)],h=b(gt(St,2),s)+St[ft(2,2)],o=-h/r,St[ft(1,0)]*=o,St[ft(1,1)]*=o,St[ft(1,2)]*=o,i[0]=St[0],i[1]=St[1],i[2]=0,i[3]=St[2],i[4]=St[3],i[5]=St[4],i[6]=0,i[7]=St[5],i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=St[6],i[13]=St[7],i[14]=0,i[15]=St[8]}export{H as default};
