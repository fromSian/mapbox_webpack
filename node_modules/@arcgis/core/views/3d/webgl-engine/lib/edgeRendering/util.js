/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{binaryIndexOf as t}from"../../../../../core/arrayUtils.js";import{isNone as r,isSome as n}from"../../../../../core/maybe.js";function e(t){let e=null;for(const n of t){const t=n.type;if(f(n))if(r(e))e=t;else if(e!==t)return"uber"}return n(e)?e:"uber"}function o(t){let r=0;for(const{material:n}of t)if(c(n)){if(n.color[3]*n.opacity<1)return 1;r=2}return r}function i(t){let r=0;for(const{material:n}of t)if(c(n)){switch(n.objectTransparency){case 1:case 0:return 1;case 2:if(n.opacity<1)return 1}r=2}return r}function c(t){return t.size*t.color[3]*t.opacity>0}function f(t){return t.size*t.color[3]>0}function u(t,r,n,e){return n*(e/t)*2*Math.tan(.5*r)}function s(r,n){const e=t(r,n,!0);return-1===e?n<r[0]?0:r.length:e}function l(t,r,n){return t.length-s(t,r*n.minimumEdgeLength)}function a(t,r,n,e){for(let o=0;o<t.length;o++){const i=t[o].index,c=r[o],f=r[o+1];if(e)for(let t=c;t<f;t++){const r=e[t];n.set(r,i)}else for(let t=c;t<f;t++)n.set(t,i)}}export{l as computeEdgeCount,o as determineEdgeTransparency,i as determineObjectTransparency,e as determineRendererType,u as estimateLengthAtDistance,a as fillComponenBufferIndices};
