/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../../chunks/tslib.es6.js";import{isSome as r}from"../../../../../../core/maybe.js";import{c as o}from"../../../../../../chunks/mat3f64.js";import{c as t}from"../../../../../../chunks/vec4f64.js";import{C as s}from"../../../../../../chunks/ComponentShader.glsl.js";import{bindSliceUniforms as i}from"../../../core/shaderLibrary/Slice.glsl.js";import{VertexPosition as a}from"../../../core/shaderLibrary/attributes/VertexPosition.glsl.js";import{bindOutputHighlight as n}from"../../../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindPBRUniforms as l}from"../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{bindSSRUniforms as d}from"../../../core/shaderLibrary/shading/ScreenSpaceReflections.glsl.js";import{doublePrecisionRequiresObfuscation as u}from"../../../core/shaderLibrary/util/DoublePrecision.glsl.js";import{ReloadableShaderModule as c}from"../../../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as p}from"../../../core/shaderTechnique/ShaderTechnique.js";import{parameter as m,ShaderTechniqueConfiguration as h}from"../../../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{blendingDefault as b,OITBlending as f,OITDepthTest as x,OITPolygonOffset as T}from"../../../lib/OrderIndependentTransparency.js";import{Program as v}from"../../../lib/Program.js";import{stencilWriteMaskOn as g,replaceBitWhenDepthTestPasses as M,stencilBaseAllZerosParams as y}from"../../../lib/StencilUtils.js";import{makePipelineState as S,cullingParams as P,defaultDepthWriteParams as C,defaultColorWriteParams as E}from"../../../../../webgl/renderState.js";class O extends p{bindPass(e){const r=this.program;a.bindViewProjTransform(r,e.viewTransform),i(this.program,this.configuration,e.slicePlane),0===e.identifier&&(void 0!==e.ssrParams&&d(this.program,e.ssrParams),r.setUniformMatrix3fv("uTransformNormal_ViewFromGlobal",e.transformNormal_ViewFromGlobal),2===e.subPass&&r.setUniform2fv("cameraNearFar",e.cameraNearFar),0===e.subPass&&e.lighting.setUniforms(this.program,e.integratedMesh)),1===e.identifier&&this.program.setUniform2fv("cameraNearFar",e.cameraNearFar)}bindMaterial(e,o){this._material=e;const t=this.program;t.setUniform4fv("uBaseColor",e.baseColor),t.setUniform1f("uObjectOpacity",e.objectOpacity),t.setUniform1f("textureAlphaCutoff",e.alphaCutoff),1===e.componentParameters.type?e.componentParameters.texture.bind(t,"uComponentColorTex","uComponentColorTexInvDim"):(t.setUniform4fv("uExternalColor",e.componentParameters.externalColor),t.setUniform1i("uExternalColorMixMode",e.componentParameters.externalColorMixMode)),r(e.baseColorTexture)&&e.baseColorTexture.bind(t,"uBaseColorTexture","uBaseColorTextureSize"),0!==this.configuration.output&&7!==this.configuration.output||(l(this.program,e,this.configuration.isSchematic),r(e.metallicRoughnessTexture)&&e.metallicRoughnessTexture.bind(t,"texMetallicRoughness","texMetallicRoughnessSize"),r(e.emissionTexture)&&e.emissionTexture.bind(t,"texEmission","texEmissionSize"),r(e.occlusionTexture)&&e.occlusionTexture.bind(t,"texOcclusion","texOcclusionSize"),r(e.normalTexture)&&e.normalTexture.bind(t,"normalTexture","normalTextureSize")),e.isIntegratedMesh&&(0===o.identifier&&0===o.subPass?(t.bindTexture(e.overlayColor,"ovColorTex"),t.bindTexture(e.overlayNormal,"ovNormalTex")):2===o.identifier&&t.bindTexture(e.overlayHighlight,"ovColorTex"),t.setUniform1f("overlayOpacity",1)),2===o.identifier&&n(this.program,o),0===o.identifier&&0===o.subPass&&(o.ambientOcclusionEnabled&&o.bindAmbientOcclusion(t),o.shadowsEnabled&&o.bindShadowMap(t)),0!==o.identifier||0!==o.subPass&&1!==o.subPass||!o.multipassTerrainParams.multipassTerrainEnabled||(this.program.setUniform2fv("cameraNearFar",o.cameraNearFar),t.setUniform2fv("inverseViewport",o.inverseViewport),o.multipassTerrainParams.terrainLinearDepthTexture&&t.bindTexture(o.multipassTerrainParams.terrainLinearDepthTexture,"terrainDepthTexture"))}bindDraw(e){if(a.bindModelTransform(this.program,e),this.program.setUniformMatrix3fv("uTransformNormal_GlobalFromModel",e.transformNormal_GlobalFromModel),this.program.rebindTextures(),r(this._material)&&this._material.isIntegratedMesh){const r=this._material.overlayTexScale,o=this._material.overlayTexOffset;this.program.setUniform4fv("overlayTexOffset",[e.toMapSpace[0]*r[0]+o[0],e.toMapSpace[1]*r[1]+o[1],e.toMapSpace[0]*r[2]+o[2],e.toMapSpace[1]*r[3]+o[3]]),this.program.setUniform4fv("overlayTexScale",[e.toMapSpace[2]*r[0],e.toMapSpace[3]*r[1],e.toMapSpace[2]*r[2],e.toMapSpace[3]*r[3]])}}initializeProgram(e){const r=O.shader.get(),o=this.configuration,t=r.build({multipassTerrainEnabled:o.multipassTerrainEnabled,cullAboveGround:o.cullAboveGround,OITEnabled:0===o.transparencyPassType,output:o.output,normalType:0===o.integratedMeshMode?o.hasNormals?1:3:2,attributeColor:o.hasVertexColors,attributeTextureCoordinates:o.vertexTextureCoordinates,componentData:o.componentData,alphaDiscardMode:o.alphaDiscardMode,baseColorTexture:o.baseColorTexture,doubleSidedMode:o.doubleSidedMode,receiveAmbientOcclusion:o.receiveAmbientOcclusion,receiveShadows:o.receiveShadows,slicePlaneEnabled:o.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,viewingMode:e.viewingMode,vertexDiscardMode:o.vertexDiscardMode,pbrMode:3===o.integratedMeshMode?4:o.usePBR?o.isSchematic?2:1:0,hasMetalnessAndRoughnessTexture:o.hasMetalnessAndRoughnessTexture,hasEmissionTexture:o.hasEmissionTexture,hasOcclusionTexture:o.hasOcclusionTexture,hasNormalTexture:o.hasNormalTexture,vertexTangents:!1,supportsTextureAtlas:!0,doublePrecisionRequiresObfuscation:u(e.rctx),overlayEnabled:2===o.integratedMeshMode||3===o.integratedMeshMode,ssrEnabled:o.ssrEnabled,highStepCount:!1,ellipsoidMode:o.ellipsoidMode});return new v(e.rctx,t,r.attributeLocations)}setPipelineState(e){const r=this.configuration,o=0!==r.integratedMeshMode,t=3===e,s=2===e;return S({blending:0!==r.output&&7!==r.output||!r.blendingEnabled?null:t?b:f(e),culling:P(r.cullFace),depthTest:{func:x(e)},depthWrite:t||s?C:null,colorWrite:E,stencilWrite:o||r.sceneHasOcludees?g:null,stencilTest:o?M(1):r.sceneHasOcludees?y:null,polygonOffset:t||s?r.polygonOffsetEnabled?{factor:2,units:2}:null:T})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}O.shader=new c(s,(()=>import("./shader/ComponentShader.glsl.js")));class j extends a.ModelTransform{constructor(){super(...arguments),this.transformNormal_GlobalFromModel=o(),this.toMapSpace=t()}}class N extends h{constructor(){super(...arguments),this.output=0,this.hasVertexColors=!1,this.hasNormals=!1,this.vertexTextureCoordinates=0,this.componentData=0,this.slicePlaneEnabled=!1,this.cullFace=2,this.baseColorTexture=!1,this.receiveAmbientOcclusion=!0,this.receiveShadows=!0,this.vertexDiscardMode=0,this.doubleSidedMode=2,this.blendingEnabled=!0,this.alphaDiscardMode=1,this.integratedMeshMode=0,this.ssrEnabled=!1,this.polygonOffsetEnabled=!1,this.usePBR=!1,this.isSchematic=!1,this.hasMetalnessAndRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.sceneHasOcludees=!1,this.transparencyPassType=3,this.ellipsoidMode=1,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([m({count:8})],N.prototype,"output",void 0),e([m()],N.prototype,"hasVertexColors",void 0),e([m()],N.prototype,"hasNormals",void 0),e([m({count:3})],N.prototype,"vertexTextureCoordinates",void 0),e([m({count:2})],N.prototype,"componentData",void 0),e([m()],N.prototype,"slicePlaneEnabled",void 0),e([m({count:3})],N.prototype,"cullFace",void 0),e([m()],N.prototype,"baseColorTexture",void 0),e([m()],N.prototype,"receiveAmbientOcclusion",void 0),e([m()],N.prototype,"receiveShadows",void 0),e([m({count:3})],N.prototype,"vertexDiscardMode",void 0),e([m({count:3})],N.prototype,"doubleSidedMode",void 0),e([m()],N.prototype,"blendingEnabled",void 0),e([m({count:4})],N.prototype,"alphaDiscardMode",void 0),e([m({count:4})],N.prototype,"integratedMeshMode",void 0),e([m()],N.prototype,"ssrEnabled",void 0),e([m()],N.prototype,"polygonOffsetEnabled",void 0),e([m()],N.prototype,"usePBR",void 0),e([m()],N.prototype,"isSchematic",void 0),e([m()],N.prototype,"hasMetalnessAndRoughnessTexture",void 0),e([m()],N.prototype,"hasEmissionTexture",void 0),e([m()],N.prototype,"hasOcclusionTexture",void 0),e([m()],N.prototype,"hasNormalTexture",void 0),e([m()],N.prototype,"sceneHasOcludees",void 0),e([m({count:4})],N.prototype,"transparencyPassType",void 0),e([m({count:4})],N.prototype,"ellipsoidMode",void 0),e([m()],N.prototype,"multipassTerrainEnabled",void 0),e([m()],N.prototype,"cullAboveGround",void 0);export{j as ComponentDrawParameters,O as ComponentTechnique,N as ComponentTechniqueConfiguration};
