/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{BufferViewMat3f as e,BufferViewVec4f as t,BufferViewVec4u8 as r,BufferViewVec3f as i}from"../../../../geometry/support/buffer/BufferView.js";import{newLayout as s}from"../../support/buffer/InterleavedLayout.js";import a from"../lib/GLMaterial.js";import{outputFromPass as n}from"../lib/GLMaterials.js";import{Material as o,materialParametersDefaults as u}from"../lib/Material.js";import{OITPolygonOffsetLimit as c}from"../lib/OrderIndependentTransparency.js";import{assert as l}from"../lib/Util.js";import{writeBufferVec4 as p,writeColor as h,writePosition as f}from"./internal/bufferWriterUtils.js";import{DefaultBufferWriter as d}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as m}from"./internal/MaterialUtil.js";import{patternVertexAttributeLocations as g,PatternTechniqueConfiguration as b,PatternTechnique as q}from"../shaders/PatternTechnique.js";class C extends o{constructor(e){super(e,w),this.supportsEdges=!0,this._vertexAttributeLocations=g,this.techniqueConfig=new b}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.parameters.cullFace,this.techniqueConfig.vertexColors=this.parameters.vertexColors,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.style=this.parameters.style,this.techniqueConfig.patternSpacing=this.parameters.patternSpacing,this.techniqueConfig.lineWidth=this.parameters.lineWidth,this.techniqueConfig.draped=this.parameters.draped,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.enableOffset=t.camera.relativeElevation<c,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig}getPassParameters(){return this.parameters}intersect(e,t,r,i,s,a,n){m(e,t,i,s,a,void 0,n)}requiresSlot(e,t){if(20===e)return!0;if(4===n(t))return 2===e;return e===(this.parameters.writeDepth?4:7)}createGLMaterial(e){return 0===e.output||7===e.output||4===e.output||1===e.output&&this.parameters.writeLinearDepth?new v(e):null}createBufferWriter(){const e=s().vec3f("position").vec4u8("color").vec4f("uvMapSpace");return this.parameters.draped||e.mat3f("boundingRect"),new y(e)}}class v extends a{updateParameters(e){return this.ensureTechnique(q,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})}beginSlot(e){return 0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}class y extends d{write(s,a,n,o){for(const u of this.vertexBufferLayout.fieldNames){const c=a.vertexAttributes.get(u),d=a.indices.get(u);if(c&&d)switch(u){case"position":{l(3===c.size);const e=n.getField(u,i);e&&f(d,c.data,s.transformation,e,o);break}case"color":{l(3===c.size||4===c.size);const e=n.getField(u,r);e&&h(d,c.data,c.size,e,o);break}case"uvMapSpace":{l(4===c.size);const e=n.getField(u,t);e&&p(d,c.data,e,o);break}case"boundingRect":{l(9===c.size);const t=n.getField(u,e);t&&this.writeBoundingRect(d,c.data,s.transformation,t,o);break}}}}writeBoundingRect(e,t,r,i,s){const a=r,n=i.typedBuffer,o=i.typedBufferStride,u=e.length;s*=o;for(let c=0;c<u;++c){const r=9*e[c],i=t[r],u=t[r+1],l=t[r+2];n[s]=a[0]*i+a[4]*u+a[8]*l+a[12],n[s+1]=a[1]*i+a[5]*u+a[9]*l+a[13],n[s+2]=a[2]*i+a[6]*u+a[10]*l+a[14];for(let e=3;e<9;++e)n[s+e]=t[r+e];s+=o}}}const w={color:[1,1,1,1],writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,style:2,patternSpacing:10,lineWidth:1,draped:!0,...u};export{C as PatternMaterial};
