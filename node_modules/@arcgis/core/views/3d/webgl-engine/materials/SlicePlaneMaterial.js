/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{unwrap as r}from"../../../../core/maybe.js";import{ShaderTechniqueConfiguration as e}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import t from"../lib/GLMaterial.js";import{Material as i,materialParametersDefaults as n}from"../lib/Material.js";import{DefaultBufferWriter as o,PositionUVLayout as s}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as a}from"./internal/MaterialUtil.js";import{SlicePlaneMaterialTechnique as u}from"../shaders/SlicePlaneMaterialTechnique.js";class l extends i{constructor(r){super(r,m),this._config=new e}intersect(r,e,t,i,n,o,s){return a(r,e,i,n,o,void 0,s)}createBufferWriter(){return new o(s)}requiresSlot(r){return 7===r}createGLMaterial(r){return 0===r.output?new c(r):null}getTechniqueConfig(){return this._config}}class c extends t{constructor(r){super(r),this.ensureTechnique(u,null)}updateParameters(){return r(this.technique)}beginSlot(){return r(this.technique)}bind(r,e){e.bindPass(this._material.parameters,r)}}const m={backgroundColor:[1,0,0,.5],gridColor:[0,1,0,.5],gridWidth:4,...n};export{l as SlicePlaneMaterial};
