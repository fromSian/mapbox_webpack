/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{isSome as t,isNone as r}from"../../../../core/maybe.js";import{createRenderScreenPointArray3 as s}from"../../../../core/screenUtils.js";import{c as i}from"../../../../chunks/vec2.js";import{s as o,f as n,d as a,a as u,b as c,g as l,l as f,i as p,m}from"../../../../chunks/vec3.js";import{c as h}from"../../../../chunks/vec3f64.js";import{create as d,distance2 as g,fromPoints as v,closestLineSegmentPoint as b}from"../../../../geometry/support/lineSegment.js";import{create as j,fromPoints as C,signedDistance as y,normal as x}from"../../../../geometry/support/plane.js";import{BufferViewVec3f as _,BufferViewVec2f as P}from"../../../../geometry/support/buffer/BufferView.js";import{computeAttachmentOriginLines as q}from"../lib/geometryDataUtils.js";import w from"../lib/GLMaterial.js";import{Material as L,materialParametersDefaults as O}from"../lib/Material.js";import{isTranslationMatrix as S}from"../lib/Util.js";import{writeDefaultAttributes as A}from"./internal/bufferWriterUtils.js";import{PositionColorLayout as B,PositionLayout as T,DefaultBufferWriter as U}from"./internal/DefaultBufferWriter.js";import{intersectDrapedRenderLineGeometry as E}from"./internal/MaterialUtil.js";import{isInstanceHidden as M}from"./renderers/utils.js";import{NativeLineTechniqueConfiguration as H,NativeLineTechnique as R}from"../shaders/NativeLineTechnique.js";const V=e.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial");class G extends L{constructor(e){super(e,F),this._techniqueConfig=new H}getTechniqueConfig(e,r){this._techniqueConfig.output=e,this._techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this._techniqueConfig.vertexColors=this.parameters.vertexColors,this._techniqueConfig.transparent=this.parameters.color[3]<1||this.parameters.width<1,this._techniqueConfig.draped=20===r.slot;const s=t(this.parameters.stipplePattern);return this._techniqueConfig.stippleEnabled=s,this._techniqueConfig.stippleOffColorEnabled=s&&t(this.parameters.stippleOffColor),this._techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this._techniqueConfig.stipplePreferContinuous=this.parameters.stipplePreferContinuous,this._techniqueConfig}getPassParameters(){return this.parameters}intersect(e,r,s,i,o,n,a,u,c){t(c)?E(e,i,c,n,1,a):this.intersectLineGeometry(e,r,s,i,a)}intersectLineGeometry(e,t,r,s,m){if(!s.options.selectionMode||M(t))return;if(!S(r))return void V.error("intersection assumes a translation-only matrix");const h=e.vertexAttributes.get("position").data,d=s.camera,j=$;i(j,s.point);const _=2;o(ee[0],j[0]-_,j[1]+_,0),o(ee[1],j[0]+_,j[1]+_,0),o(ee[2],j[0]+_,j[1]-_,0),o(ee[3],j[0]-_,j[1]-_,0);for(let i=0;i<4;i++)if(!d.unprojectFromRenderScreen(ee[i],te[i]))return;C(d.eye,te[0],te[1],re),C(d.eye,te[1],te[2],se),C(d.eye,te[2],te[3],ie),C(d.eye,te[3],te[0],oe);let P=Number.MAX_VALUE,q=0;for(let i=0;i<h.length-5;i+=3){if(W[0]=h[i]+r[12],W[1]=h[i+1]+r[13],W[2]=h[i+2]+r[14],D[0]=h[i+3]+r[12],D[1]=h[i+4]+r[13],D[2]=h[i+5]+r[14],y(re,W)<0&&y(re,D)<0||y(se,W)<0&&y(se,D)<0||y(ie,W)<0&&y(ie,D)<0||y(oe,W)<0&&y(oe,D)<0)continue;if(d.projectToRenderScreen(W,I),d.projectToRenderScreen(D,J),I[2]<0&&J[2]>0){n(X,W,D);const e=d.frustum,t=-y(e[4],W)/a(X,x(e[4]));u(X,X,t),c(W,W,X),d.projectToRenderScreen(W,I)}else if(I[2]>0&&J[2]<0){n(X,D,W);const e=d.frustum,t=-y(e[4],D)/a(X,x(e[4]));u(X,X,t),c(D,D,X),d.projectToRenderScreen(D,J)}else if(I[2]<0&&J[2]<0)continue;I[2]=0,J[2]=0;const e=g(v(I,J,Y),j);e<P&&(P=e,l(K,W),l(Q,D),q=i/3)}const w=s.rayBegin,L=s.rayEnd;if(P<_*_){let e=Number.MAX_VALUE;if(b(v(K,Q,Y),v(w,L,Z),z)){n(z,z,w);const t=f(z);u(z,z,1/t),e=t/p(w,L)}m(e,z,q,!1)}}computeAttachmentOrigin(e,t){const r=e.vertexAttributes;if(!r)return!1;const s=r.get("position");return q(s,null,!1,t)}requiresSlot(e){return 2===e||20===e}createGLMaterial(e){return 0===e.output||4===e.output?new N(e):null}createBufferWriter(){const e=this.parameters.vertexColors?B:T;return r(this.parameters.stipplePattern)?new U(e):new k(e.clone().vec3f("auxpos1").vec2f("uv0"))}}class N extends w{updateParameters(e){return this.ensureTechnique(R,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})}beginSlot(e){return 0===this._output&&this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}class k{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get("position").length}write(e,t,r,s){A(t,this.vertexBufferLayout,e.transformation,e.invTranspTransformation,r,s),this.writeAuxpos1(e,t,r,s),this.writeUV0(e,t,r,s)}writeAuxpos1(e,t,r,s){const i=r.getField("auxpos1",_),o=t.indices.get("position"),n=t.vertexAttributes.get("position").data,a=e.transformation,u=i.typedBufferStride,c=i.typedBuffer;s*=u;for(let l=0;l<o.length-1;l+=2)for(const e of[1,0]){const t=3*o[l+e],r=n[t],i=n[t+1],f=n[t+2],p=a[0]*r+a[4]*i+a[8]*f+a[12],m=a[1]*r+a[5]*i+a[9]*f+a[13],h=a[2]*r+a[6]*i+a[10]*f+a[14];c[s]=p,c[s+1]=m,c[s+2]=h,s+=u}}writeUV0(e,t,r,s){var i;const n=r.getField("uv0",P),a=t.indices.get("position"),u=t.vertexAttributes.get("position").data,c=null==(i=t.vertexAttributes.get("distanceToStart"))?void 0:i.data,f=e.transformation,h=n.typedBufferStride,d=n.typedBuffer;let g=0;d[s*=h]=0,d[s+1]=g,s+=h;const v=3*a[0],b=o(W,u[v],u[v+1],u[v+2]);f&&m(b,b,f);const j=D,C=a.length-1;let y=1;const x=c?(e,t,r)=>g=c[r]:(e,t,r)=>g+=p(e,t);for(let p=1;p<C;p+=2){const e=3*a[p];o(j,u[e],u[e+1],u[e+2]),f&&m(j,j,f),x(b,j,y++);for(let t=0;t<2;++t)d[s]=1-t,d[s+1]=g,s+=h;l(b,j)}const _=3*a[C];o(j,u[_],u[_+1],u[_+2]),f&&m(j,j,f),x(b,j,y),d[s]=1,d[s+1]=g}}const F={color:[1,1,1,1],vertexColors:!1,slicePlaneEnabled:!1,width:1,stipplePattern:null,stippleOffColor:null,stipplePreferContinuous:!0,sceneHasOcludees:!1,...O},W=h(),D=h(),X=h(),z=h(),I=s(),J=s(),K=h(),Q=h(),Y=d(),Z=d(),$=h(),ee=[s(),s(),s(),s()],te=[h(),h(),h(),h()],re=j(),se=j(),ie=j(),oe=j();export{G as NativeLineMaterial};
