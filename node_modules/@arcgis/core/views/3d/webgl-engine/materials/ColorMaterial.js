/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import e from"../lib/GLMaterial.js";import{outputFromPass as t}from"../lib/GLMaterials.js";import{Material as r,materialParametersDefaults as s}from"../lib/Material.js";import{OITPolygonOffsetLimit as i}from"../lib/OrderIndependentTransparency.js";import{DefaultBufferWriter as a,PositionColorLayout as n}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as u}from"./internal/MaterialUtil.js";import{ColorMaterialTechniqueConfiguration as l,ColorMaterialTechnique as o}from"../shaders/ColorMaterialTechnique.js";class h extends r{constructor(e){super(e,p),this.supportsEdges=!0,this.techniqueConfig=new l}getTechniqueConfig(e,t){return this.techniqueConfig.output=e,this.techniqueConfig.cullFace=this.parameters.cullFace,this.techniqueConfig.vertexColors=this.parameters.vertexColors,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.enableOffset=t.camera.relativeElevation<i,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig}getPassParameters(){return this.parameters}intersect(e,t,r,s,i,a,n){u(e,t,s,i,a,void 0,n)}requiresSlot(e,r){if(20===e)return!0;if(4===t(r))return 2===e;return e===(this.parameters.transparent?this.parameters.writeDepth?4:7:2)}createGLMaterial(e){return 0===e.output||7===e.output||4===e.output||1===e.output&&this.parameters.writeLinearDepth?new c(e):null}createBufferWriter(){return new a(n)}}class c extends e{updateParameters(e){return this.ensureTechnique(o,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})}beginSlot(e){return 0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const p={color:[1,1,1,1],transparent:!1,writeDepth:!0,writeLinearDepth:!1,vertexColors:!1,polygonOffset:!1,slicePlaneEnabled:!1,cullFace:0,sceneHasOcludees:!1,...s};export{h as ColorMaterial};
