/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{clamp as t}from"../../../../core/mathUtils.js";import{isSome as i}from"../../../../core/maybe.js";import{createRenderScreenPointArray3 as r}from"../../../../core/screenUtils.js";import{c as s}from"../../../../chunks/vec2.js";import{s as n,f as a,d as o,a as u,b as l,g as c,l as p,i as h,m}from"../../../../chunks/vec3.js";import{c as f}from"../../../../chunks/vec3f64.js";import{create as d,distance2 as v,fromPoints as b,closestLineSegmentPoint as g}from"../../../../geometry/support/lineSegment.js";import{create as C,fromPoints as S,signedDistance as y,normal as A}from"../../../../geometry/support/plane.js";import{newLayout as q}from"../../support/buffer/InterleavedLayout.js";import{computeAttachmentOriginLines as x}from"../lib/geometryDataUtils.js";import z from"../lib/GLMaterial.js";import{outputFromPass as j}from"../lib/GLMaterials.js";import{materialParametersDefaults as L,Material as E}from"../lib/Material.js";import{isTranslationMatrix as O}from"../lib/Util.js";import P from"./VisualVariableMaterialParameters.js";import{isInstanceHidden as T}from"./renderers/utils.js";import{N as w}from"../../../../chunks/RibbonLine.glsl.js";import{ribbonVertexAttributeLocations as M,RibbonLineTechniqueConfiguration as R,RibbonLineTechnique as F}from"../shaders/RibbonLineTechnique.js";const W=e.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial");class _ extends E{constructor(e){super(e,D),this._vertexAttributeLocations=M,this.techniqueConfig=new R,this.layout=this.createLayout()}isClosed(e,t){return k(this.parameters,e,t)}dispose(){}getPassParameters(){return this.parameters}getTechniqueConfig(e,t){this.techniqueConfig.output=e,this.techniqueConfig.draped=20===t.slot;const r=i(this.parameters.stipplePattern);return this.techniqueConfig.stippleEnabled=r,this.techniqueConfig.stippleOffColorEnabled=r&&i(this.parameters.stippleOffColor),this.techniqueConfig.stippleScaleWithLineWidth=r&&this.parameters.stippleScaleWithLineWidth,this.techniqueConfig.stipplePreferContinuous=r&&this.parameters.stipplePreferContinuous,this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this.techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees,this.techniqueConfig.roundJoins="round"===this.parameters.join,this.techniqueConfig.roundCaps=2===this.parameters.cap,this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.vvColor=this.parameters.vvColorEnabled,this.techniqueConfig.vvOpacity=this.parameters.vvOpacityEnabled,this.techniqueConfig.vvSize=this.parameters.vvSizeEnabled,this.techniqueConfig.innerColorEnabled=this.parameters.innerWidth>0&&i(this.parameters.innerColor),this.techniqueConfig.falloffEnabled=this.parameters.falloff>0,this.techniqueConfig.occluder=8===this.parameters.renderOccluded,this.techniqueConfig.transparencyPassType=t.transparencyPassType,this.techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=t.cullAboveGround,this.techniqueConfig}intersect(e,t,r,s,n,a,o,u,l){i(l)?this.intersectDrapedLineGeometry(e,s,l,a,o):this.intersectLineGeometry(e,t,r,s,o)}intersectDrapedLineGeometry(e,i,r,s,n){if(!i.options.selectionMode)return;const a=e.vertexAttributes.get("position").data,o=e.vertexAttributes.get("size");let u=this.parameters.width;if(this.parameters.vvSizeEnabled){const i=e.vertexAttributes.get("sizeFeatureAttribute").data[0];u*=t(this.parameters.vvSizeOffset[0]+i*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else o&&(u*=o.data[0]);const l=s[0],c=s[1],p=(u/2+4)*e.screenToWorldRatio;let h=Number.MAX_VALUE,m=0;for(let f=0;f<a.length-5;f+=3){const e=a[f],i=a[f+1],r=l-e,s=c-i,n=a[f+3]-e,o=a[f+4]-i,u=t((n*r+o*s)/(n*n+o*o),0,1),p=n*u-r,d=o*u-s,v=p*p+d*d;v<h&&(h=v,m=f/3)}h<p*p&&n(r.dist,r.normal,m,!1)}intersectLineGeometry(e,i,r,m,f){if(!m.options.selectionMode||T(i))return;if(!O(r))return void W.error("intersection assumes a translation-only matrix");const d=e.vertexAttributes,C=d.get("position").data;let q=this.parameters.width;if(this.parameters.vvSizeEnabled){const e=d.get("sizeFeatureAttribute").data[0];q*=t(this.parameters.vvSizeOffset[0]+e*this.parameters.vvSizeFactor[0],this.parameters.vvSizeMinSize[0],this.parameters.vvSizeMaxSize[0])}else d.has("size")&&(q*=d.get("size").data[0]);const x=m.camera,z=I;s(z,m.point);const j=q*x.pixelRatio/2+4*x.pixelRatio;n(se[0],z[0]-j,z[1]+j,0),n(se[1],z[0]+j,z[1]+j,0),n(se[2],z[0]+j,z[1]-j,0),n(se[3],z[0]-j,z[1]-j,0);for(let t=0;t<4;t++)if(!x.unprojectFromRenderScreen(se[t],ne[t]))return;S(x.eye,ne[0],ne[1],ae),S(x.eye,ne[1],ne[2],oe),S(x.eye,ne[2],ne[3],ue),S(x.eye,ne[3],ne[0],le);let L=Number.MAX_VALUE,E=0;const P=J(this.parameters,d,e.indices)?C.length-2:C.length-5;for(let t=0;t<P;t+=3){H[0]=C[t]+r[12],H[1]=C[t+1]+r[13],H[2]=C[t+2]+r[14];const e=(t+3)%C.length;if(V[0]=C[e]+r[12],V[1]=C[e+1]+r[13],V[2]=C[e+2]+r[14],y(ae,H)<0&&y(ae,V)<0||y(oe,H)<0&&y(oe,V)<0||y(ue,H)<0&&y(ue,V)<0||y(le,H)<0&&y(le,V)<0)continue;if(x.projectToRenderScreen(H,K),x.projectToRenderScreen(V,Q),K[2]<0&&Q[2]>0){a(N,H,V);const e=x.frustum,t=-y(e[4],H)/o(N,A(e[4]));u(N,N,t),l(H,H,N),x.projectToRenderScreen(H,K)}else if(K[2]>0&&Q[2]<0){a(N,V,H);const e=x.frustum,t=-y(e[4],V)/o(N,A(e[4]));u(N,N,t),l(V,V,N),x.projectToRenderScreen(V,Q)}else if(K[2]<0&&Q[2]<0)continue;K[2]=0,Q[2]=0;const i=v(b(K,Q,$),z);i<L&&(L=i,c(Y,H),c(Z,V),E=t/3)}const w=m.rayBegin,M=m.rayEnd;if(L<j*j){let e=Number.MAX_VALUE;if(g(b(Y,Z,$),b(w,M,ee),X)){a(X,X,w);const t=p(X);u(X,X,1/t),e=t/h(w,M)}f(e,X,E,!1)}}computeAttachmentOrigin(e,t){const i=e.vertexAttributes;if(!i)return null;const r=e.indices,s=i.get("position");return x(s,r?r.get("position"):null,r&&J(this.parameters,i,r),t)}createLayout(){const e=q().vec3f("position").f32("subdivisionFactor").vec2f("uv0").vec3f("auxpos1").vec3f("auxpos2");return this.parameters.vvSizeEnabled?e.f32("sizeFeatureAttribute"):e.f32("size"),this.parameters.vvColorEnabled?e.f32("colorFeatureAttribute"):e.vec4f("color"),this.parameters.vvOpacityEnabled&&e.f32("opacityFeatureAttribute"),e}createBufferWriter(){return new U(this.layout,this.parameters)}requiresSlot(e,t){if(20===e)return!0;if(8===this.parameters.renderOccluded)return 2===e||9===e||10===e;const i=j(t);if(0===i||7===i){return e===(this.parameters.writeDepth?4:7)}return 2===e}createGLMaterial(e){return 0===e.output||7===e.output||4===e.output||1===e.output?new G(e):null}validateParameters(e){"miter"!==e.join&&(e.miterLimit=0),this.requiresTransparent(e)&&(e.transparent=!0)}requiresTransparent(e){return!!((e.color&&e.color[3])<1||e.innerWidth>0&&this.colorRequiresTransparent(e.innerColor)||e.stipplePattern&&this.colorRequiresTransparent(e.stippleOffColor)||e.falloff>0)}colorRequiresTransparent(e){return i(e)&&e[3]<1&&e[3]>0}}class G extends z{updateParameters(e){return this.ensureTechnique(F,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:e.hasOccludees})}beginSlot(e){return 0!==this._output&&7!==this._output||this._updateOccludeeState(e),this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const D={width:0,color:[1,1,1,1],join:"miter",cap:0,miterLimit:5,writeDepth:!0,polygonOffset:!1,stipplePattern:null,stippleOffColor:null,stippleScaleWithLineWidth:!1,stipplePreferContinuous:!0,slicePlaneEnabled:!1,vvFastUpdate:!1,transparent:!1,isClosed:!1,falloff:0,innerWidth:0,innerColor:null,sceneHasOcludees:!1,...L,...P.Default};class U{constructor(e,t){this.parameters=t,this.numJoinSubdivisions=0,this.vertexBufferLayout=e;const i=t.stipplePattern?1:0;switch(this.parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=i;break;case"round":this.numJoinSubdivisions=w+i}}isClosed(e){return J(this.parameters,e.vertexAttributes,e.indices)}numCapSubdivisions(e){if(this.isClosed(e))return 0;switch(this.parameters.cap){case 1:case 2:return 1;default:return 0}}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){const t=2*this.numCapSubdivisions(e)+2,i=e.indices.get("position").length/2+1,r=this.isClosed(e);let s=r?2:2*t;const n=r?0:1,a=r?i:i-1;if(e.vertexAttributes.has("subdivisions")){const t=e.vertexAttributes.get("subdivisions").data;for(let e=n;e<a;++e){s+=4+2*t[e]}}else{s+=(a-n)*(2*this.numJoinSubdivisions+4)}return s+=2,s}write(e,t,i,r){var s;const a=te,o=ie,u=re,l=t.vertexAttributes.get("position").data,p=t.indices&&t.indices.get("position"),f=null==(s=t.vertexAttributes.get("distanceToStart"))?void 0:s.data,d=this.numCapSubdivisions(t);p&&p.length!==2*(l.length/3-1)&&console.warn("RibbonLineMaterial does not support indices");let v=null;t.vertexAttributes.has("subdivisions")&&(v=t.vertexAttributes.get("subdivisions").data);let b=1,g=0;this.parameters.vvSizeEnabled?g=t.vertexAttributes.get("sizeFeatureAttribute").data[0]:t.vertexAttributes.has("size")&&(b=t.vertexAttributes.get("size").data[0]);let C=[1,1,1,1],S=0;this.parameters.vvColorEnabled?S=t.vertexAttributes.get("colorFeatureAttribute").data[0]:t.vertexAttributes.has("color")&&(C=t.vertexAttributes.get("color").data);let y=0;this.parameters.vvOpacityEnabled&&(y=t.vertexAttributes.get("opacityFeatureAttribute").data[0]);const A=l.length/3,q=e.transformation,x=new Float32Array(i.buffer),z=this.vertexBufferLayout.stride/4;let j=r*z;const L=j;let E=0;const O=(e,t,i,r,s,n,a)=>{if(x[j++]=t[0],x[j++]=t[1],x[j++]=t[2],x[j++]=r,x[j++]=a,x[j++]=s,x[j++]=e[0],x[j++]=e[1],x[j++]=e[2],x[j++]=i[0],x[j++]=i[1],x[j++]=i[2],this.parameters.vvSizeEnabled?x[j++]=g:x[j++]=b,this.parameters.vvColorEnabled)x[j++]=S;else{const e=Math.min(4*n,C.length-4);x[j++]=C[e+0],x[j++]=C[e+1],x[j++]=C[e+2],x[j++]=C[e+3]}this.parameters.vvOpacityEnabled&&(x[j++]=y)};j+=z,n(o,l[0],l[1],l[2]),q&&m(o,o,q);const P=this.isClosed(t);if(P){const e=l.length-3;n(a,l[e],l[e+1],l[e+2]),q&&m(a,a,q)}else{c(a,o),n(u,l[3],l[4],l[5]),q&&m(u,u,q);for(let e=0;e<d;++e){const t=1-e/d;O(a,o,u,t,-4,0,E),O(a,o,u,t,4,0,E)}O(a,o,u,0,-4,0,E),O(a,o,u,0,4,0,E),c(a,o),c(o,u)}const T=P?0:1,w=P?A:A-1,M=f?(e,t,i)=>E=f[i]:(e,t,i)=>E+=h(e,t);for(let h=T;h<w;h++){const e=(h+1)%A*3;n(u,l[e+0],l[e+1],l[e+2]),q&&m(u,u,q),M(a,o,h),O(a,o,u,0,-1,h,E),O(a,o,u,0,1,h,E);const t=v?v[h]:this.numJoinSubdivisions;for(let i=0;i<t;++i){const e=(i+1)/(t+1);O(a,o,u,e,-1,h,E),O(a,o,u,e,1,h,E)}O(a,o,u,1,-2,h,E),O(a,o,u,1,2,h,E),c(a,o),c(o,u)}if(P)n(u,l[3],l[4],l[5]),q&&m(u,u,q),E=M(a,o,w),O(a,o,u,0,-1,T,E),O(a,o,u,0,1,T,E);else{E=M(a,o,w),O(a,o,u,0,-5,w,E),O(a,o,u,0,5,w,E);for(let e=0;e<d;++e){const t=(e+1)/d;O(a,o,u,t,-5,w,E),O(a,o,u,t,5,w,E)}}B(x,L+z,x,L,z);j=B(x,j-z,x,j,z)}}function B(e,t,i,r,s){for(let n=0;n<s;n++)i[r++]=e[t++];return r}function J(e,t,i){return k(e,t.get("position").data,i?i.get("position"):null)}function k(e,t,i){return!!e.isClosed&&(i?i.length>2:t.length>6)}const H=f(),V=f(),N=f(),X=f(),I=f(),K=r(),Q=r(),Y=f(),Z=f(),$=d(),ee=d(),te=f(),ie=f(),re=f(),se=[r(),r(),r(),r()],ne=[f(),f(),f(),f()],ae=C(),oe=C(),ue=C(),le=C();export{_ as RibbonLineMaterial};
