/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{isSome as t}from"../../../../../core/maybe.js";import{MIN_PRIORITY as e}from"../../../../../core/MemCache.js";import{generateUID as r}from"../../../../../core/uid.js";import{StaticFloat32ArrayObject as o}from"../../lib/StaticFloat32ArrayObject.js";const c=e+1;class s{constructor(t,e,o){this._rctx=t,this._locations=e,this._layout=o,this._cache=t.newCache(`MergedRenderer pool ${r()}`,h)}dispose(){this._cache.destroy()}newBuffer(e){const r=e.toString(),s=this._cache.pop(r);if(t(s)){const t=s.pop();return s.length>0&&this._cache.put(r,s,t.array.byteLength*s.length,c),t}return new o(this._rctx,this._locations,this._layout,e)}deleteBuffer(e){const r=e.array.byteLength,o=e.array.length.toString(),c=this._cache.pop(o);return t(c)?(c.push(e),this._cache.put(o,c,r*c.length,-1)):this._cache.put(o,[e],r,-1),null}}function h(t,e){if(0===e)return void t.forEach((t=>t.dispose()));const r=t.pop(),o=t.length*r.array.byteLength;return r.dispose(),o}export{s as MergedGeometryBufferPool};
