/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{AnimationTimer as e}from"../lib/AnimationTimer.js";import{outputFromPass as t}from"../lib/GLMaterials.js";import{Material as r}from"../lib/Material.js";import{OITPolygonOffsetLimit as i}from"../lib/OrderIndependentTransparency.js";import{WaterGLMaterial as a}from"./WaterGLMaterial.js";import{WaterTechniqueConfiguration as n}from"./WaterTechnique.js";import{DefaultBufferWriter as s,PositionUVLayout as o}from"./internal/DefaultBufferWriter.js";import{intersectTriangleGeometry as h}from"./internal/MaterialUtil.js";import{defaultWaterMaterialParameters as u}from"./internal/waterMaterialUtils.js";class c extends r{constructor(t){super(t,u),this._techniqueConfig=new n,this.animation=new e}getTechniqueConfig(e,t){return this._techniqueConfig.output=e,this._techniqueConfig.writeDepth=this.parameters.writeDepth,this._techniqueConfig.receiveShadows=this.parameters.receiveShadows,this._techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled,this._techniqueConfig.transparent=this.parameters.transparent,this._techniqueConfig.useSSR=this.parameters.ssrEnabled,this._techniqueConfig.isDraped=this.parameters.isDraped,this._techniqueConfig.transparencyPassType=t.transparencyPassType,this._techniqueConfig.enableOffset=t.camera.relativeElevation<i,this._techniqueConfig.multipassTerrainEnabled=t.multipassTerrainEnabled,this._techniqueConfig.cullAboveGround=t.cullAboveGround,this._techniqueConfig}update(e){const t=Math.min(e.camera.relativeElevation,e.camera.distance);this.animation.enabled=Math.sqrt(this.parameters.waveTextureRepeat/this.parameters.waveStrength)*t<p;const r=this.animation.advance(e);return this.animation.enabled&&r}intersect(e,t,r,i,a,n,s){h(e,t,i,a,n,void 0,s)}requiresSlot(e,r){switch(t(r)){case 2:return 21===e;case 0:if(this.parameters.isDraped)return 20===e;break;case 4:return 2===e||20===e}let i=2;return this.parameters.transparent&&(i=this.parameters.writeDepth?4:7),e===i}createGLMaterial(e){if(0===e.output&&this.parameters.isDraped)return e.output=5,new a(e);switch(e.output){case 0:case 2:case 4:case 7:return new a(e)}return null}createBufferWriter(){return new s(o)}}const p=35e3;export{c as WaterMaterial};
