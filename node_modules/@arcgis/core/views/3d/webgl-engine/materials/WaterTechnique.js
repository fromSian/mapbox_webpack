/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as r}from"../../../../chunks/tslib.es6.js";import{bindSliceUniformsWithOrigin as t}from"../core/shaderLibrary/Slice.glsl.js";import{bindOutputHighlight as e}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassTerrainTexture as i}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindReadShadowMapUniforms as o}from"../core/shaderLibrary/shading/ReadShadowMap.glsl.js";import{bindSSRUniforms as s}from"../core/shaderLibrary/shading/ScreenSpaceReflections.glsl.js";import{bindWaterDistortionUniforms as a}from"../core/shaderLibrary/shading/WaterDistortion.glsl.js";import{bindProjectionMatrix as n,bindView as p,bindCameraPosition as u}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as l}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as h}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as c,ShaderTechniqueConfiguration as d}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as m}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as g,OITBlending as f,OITDepthTest as b,OITDepthWrite as y,getOITPolygonOffset as v}from"../lib/OrderIndependentTransparency.js";import{Program as S}from"../lib/Program.js";import{W as T}from"../../../../chunks/WaterSurface.glsl.js";import{makePipelineState as w,defaultDepthWriteParams as j,defaultColorWriteParams as P}from"../../../webgl/renderState.js";class x extends h{constructor(r,t,e){super(r,t,e),this._textureRepository=r.waterTextureRepository}initializeProgram(r){const t=x.shader.get(),e=this.configuration,i=t.build({OITEnabled:0===e.transparencyPassType,output:e.output,viewingMode:r.viewingMode,slicePlaneEnabled:e.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,receiveShadows:e.receiveShadows,pbrMode:3,useCustomDTRExponentForWater:!0,ssrEnabled:e.useSSR,highStepCount:!0,multipassTerrainEnabled:e.multipassTerrainEnabled,cullAboveGround:e.cullAboveGround});return new S(r.rctx,i,m)}bindPass(r,t){n(this.program,t.camera.projectionMatrix),t.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",t.camera.nearFar),this.program.setUniform2fv("inverseViewport",t.inverseViewport),i(this.program,t)),0===this.configuration.output&&(t.lighting.setUniforms(this.program,!1),s(this.program,t)),0!==this.configuration.output&&2!==this.configuration.output||(a(this.program,r),this._textureRepository.bind(this.program)),this.program.setUniform4fv("waterColor",r.color),4===this.configuration.output&&e(this.program,t)}bindDraw(r){p(this.program,r),this.program.rebindTextures(),0!==this.configuration.output&&7!==this.configuration.output||u(this.program,r.origin,r.camera.viewInverseTransposeMatrix),0===this.configuration.output&&o(this.program,r),0!==this.configuration.output&&7!==this.configuration.output&&4!==this.configuration.output||t(this.program,this.configuration,r)}setPipelineState(r){const t=this.configuration,e=3===r,i=2===r;return w({blending:2!==t.output&&4!==t.output&&t.transparent?e?g:f(r):null,depthTest:{func:b(r)},depthWrite:e?t.writeDepth&&j:y(r),colorWrite:P,polygonOffset:e||i?null:v(t.enableOffset)})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}x.shader=new l(T,(()=>import("../shaders/WaterSurface.glsl.js")));class E extends d{constructor(){super(...arguments),this.output=0,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.useSSR=!1,this.isDraped=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}r([c({count:8})],E.prototype,"output",void 0),r([c()],E.prototype,"receiveShadows",void 0),r([c()],E.prototype,"slicePlaneEnabled",void 0),r([c()],E.prototype,"transparent",void 0),r([c()],E.prototype,"enableOffset",void 0),r([c()],E.prototype,"writeDepth",void 0),r([c()],E.prototype,"useSSR",void 0),r([c()],E.prototype,"isDraped",void 0),r([c({count:4})],E.prototype,"transparencyPassType",void 0),r([c()],E.prototype,"multipassTerrainEnabled",void 0),r([c()],E.prototype,"cullAboveGround",void 0);export{x as WaterTechnique,E as WaterTechniqueConfiguration};
