/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{isSome as t,unwrap as i,unwrapOr as r}from"../../../../core/maybe.js";import{bindSliceUniformsWithOrigin as o}from"../core/shaderLibrary/Slice.glsl.js";import{bindOutputHighlight as s}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindMultipassTerrainTexture as n}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{bindVisualVariablesUniformsWithOpacity as p}from"../core/shaderLibrary/shading/VisualVariables.glsl.js";import{bindProjectionMatrix as l,bindView as a,bindCameraPosition as d}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as c}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as u}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as h,ShaderTechniqueConfiguration as f}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{blendingDefault as m,OITBlending as g,OITDepthTest as b,OITDepthWrite as v,OITPolygonOffset as y}from"../lib/OrderIndependentTransparency.js";import{Program as P}from"../lib/Program.js";import{stencilWriteMaskOn as T,stencilToolMaskBaseParams as E,stencilBaseAllZerosParams as S,depthCompareAlways as C,stencilToolTransparentOccluderParams as x,stencilWriteMaskOff as O,stencilToolMaskOccluderParams as W,depthCompareLess as j}from"../lib/StencilUtils.js";import{R as w}from"../../../../chunks/RibbonLine.glsl.js";import{makePipelineState as U,defaultDepthWriteParams as z,defaultColorWriteParams as R}from"../../../webgl/renderState.js";const L=new Map([["position",0],["subdivisionFactor",1],["uv0",2],["auxpos1",3],["auxpos2",4],["size",6],["sizeFeatureAttribute",6],["color",5],["colorFeatureAttribute",5],["opacityFeatureAttribute",7]]);class _ extends u{constructor(e,t,i){super(e,t,i),this.stippleTextureRepository=e.stippleTextureRepository}get stippleEnabled(){return this.configuration.stippleEnabled&&4!==this.configuration.output}initializeProgram(e){const t=_.shader.get(),i=this.configuration,r=t.build({OITEnabled:0===i.transparencyPassType,output:i.output,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,draped:i.draped,stippleEnabled:this.stippleEnabled,stippleOffColorEnabled:i.stippleOffColorEnabled,stippleRequiresClamp:!0,stippleScaleWithLineWidth:i.stippleScaleWithLineWidth,stipplePreferContinuous:i.stipplePreferContinuous,roundCaps:i.roundCaps,roundJoins:i.roundJoins,vvColor:i.vvColor,vvSize:i.vvSize,vvInstancingEnabled:!0,vvOpacity:i.vvOpacity,falloffEnabled:i.falloffEnabled,innerColorEnabled:i.innerColorEnabled,multipassTerrainEnabled:i.multipassTerrainEnabled,cullAboveGround:i.cullAboveGround});return new P(e.rctx,r,L)}dispose(){super.dispose(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(e,o){if(l(this.program,o.camera.projectionMatrix),4===this.configuration.output&&s(this.program,o),o.multipassTerrainEnabled&&(this.program.setUniform2fv("inverseViewport",o.inverseViewport),n(this.program,o)),this.program.setUniform1f("intrinsicWidth",e.width),this.program.setUniform4fv("intrinsicColor",e.color),this.program.setUniform1f("miterLimit","miter"!==e.join?0:e.miterLimit),this.program.setUniform2fv("cameraNearFar",o.camera.nearFar),this.program.setUniform1f("pixelRatio",o.camera.pixelRatio),this.program.setUniform2f("screenSize",o.camera.fullViewport[2],o.camera.fullViewport[3]),p(this.program,e),this.stipplePattern!==e.stipplePattern){const t=e.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,t),this.stipplePattern=t}if(this.stippleEnabled){const{pixelSize:r,sdfNormalizer:s,pixels:n}=t(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};if(this.program.setUniform1f("stipplePatternSDFNormalizer",s),this.program.setUniform1f("stipplePatternTextureSize",n),this.program.setUniform1f("stipplePatternPixelSize",r),this.program.setUniform1f("stipplePatternPixelSizeInv",1/r),this.configuration.draped?this.program.setUniform1f("worldToScreenRatio",1/o.screenToPCSRatio):this.program.setUniform1f("worldToScreenPerDistanceRatio",1/o.camera.perScreenPixelRatio),this.configuration.stippleOffColorEnabled){const t=i(e.stippleOffColor);this.program.setUniform4f("stippleOffColor",t[0],t[1],t[2],t.length>3?t[3]:1)}}this.configuration.falloffEnabled&&this.program.setUniform1f("falloff",e.falloff),this.configuration.innerColorEnabled&&(this.program.setUniform4fv("innerColor",r(e.innerColor,e.color)),this.program.setUniform1f("innerWidth",e.innerWidth*o.camera.pixelRatio))}bindDraw(e){a(this.program,e),this.stippleEnabled&&!this.configuration.draped&&d(this.program,e.origin,e.camera.viewInverseTransposeMatrix),o(this.program,this.configuration,e),this.program.rebindTextures()}makePipelineState(e,t){const i=this.configuration,r=3===e,o=2===e;return U({blending:0===i.output||7===i.output?r?m:g(e):null,depthTest:{func:b(e)},depthWrite:r?!i.transparent&&i.writeDepth&&z:v(e),colorWrite:R,stencilWrite:i.sceneHasOcludees?T:null,stencilTest:i.sceneHasOcludees?t?E:S:null,polygonOffset:r||o?i.polygonOffset&&q:y})}initializePipeline(){const e=this.configuration,t=e.polygonOffset&&q;return e.occluder&&(this._occluderPipelineTransparent=U({blending:m,polygonOffset:t,depthTest:C,depthWrite:null,colorWrite:R,stencilWrite:null,stencilTest:x}),this._occluderPipelineOpaque=U({blending:m,polygonOffset:t,depthTest:C,depthWrite:null,colorWrite:R,stencilWrite:O,stencilTest:W}),this._occluderPipelineMaskWrite=U({blending:null,polygonOffset:t,depthTest:j,depthWrite:null,colorWrite:null,stencilWrite:T,stencilTest:E})),this._occludeePipelineState=this.makePipelineState(this.configuration.transparencyPassType,!0),this.makePipelineState(this.configuration.transparencyPassType,!1)}get primitiveType(){return 5}getPipelineState(e,t){return t?this._occludeePipelineState:this.configuration.occluder?10===e?this._occluderPipelineTransparent:9===e?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:super.getPipelineState(e,t)}}_.shader=new c(w,(()=>import("./RibbonLine.glsl.js")));const q={factor:0,units:-4};class F extends f{constructor(){super(...arguments),this.output=0,this.occluder=!1,this.slicePlaneEnabled=!1,this.transparent=!1,this.polygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stippleScaleWithLineWidth=!1,this.stipplePreferContinuous=!0,this.roundCaps=!1,this.roundJoins=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.sceneHasOcludees=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([h({count:8})],F.prototype,"output",void 0),e([h()],F.prototype,"occluder",void 0),e([h()],F.prototype,"slicePlaneEnabled",void 0),e([h()],F.prototype,"transparent",void 0),e([h()],F.prototype,"polygonOffset",void 0),e([h()],F.prototype,"writeDepth",void 0),e([h()],F.prototype,"draped",void 0),e([h()],F.prototype,"stippleEnabled",void 0),e([h()],F.prototype,"stippleOffColorEnabled",void 0),e([h()],F.prototype,"stippleScaleWithLineWidth",void 0),e([h()],F.prototype,"stipplePreferContinuous",void 0),e([h()],F.prototype,"roundCaps",void 0),e([h()],F.prototype,"roundJoins",void 0),e([h()],F.prototype,"vvSize",void 0),e([h()],F.prototype,"vvColor",void 0),e([h()],F.prototype,"vvOpacity",void 0),e([h()],F.prototype,"falloffEnabled",void 0),e([h()],F.prototype,"innerColorEnabled",void 0),e([h()],F.prototype,"sceneHasOcludees",void 0),e([h({count:4})],F.prototype,"transparencyPassType",void 0),e([h()],F.prototype,"multipassTerrainEnabled",void 0),e([h()],F.prototype,"cullAboveGround",void 0);export{_ as RibbonLineTechnique,F as RibbonLineTechniqueConfiguration,L as ribbonVertexAttributeLocations};
