/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{isNone as r,isSome as e}from"../../../../core/maybe.js";import{a as i,b as t}from"../../../../chunks/mat4.js";import{c as a}from"../../../../chunks/mat4f64.js";import{a as o}from"../../../../chunks/vec2f64.js";import{m as s,n as h}from"../../../../chunks/vec3.js";import{c as n}from"../../../../chunks/vec3f64.js";import{c as m}from"../../../../chunks/vec4f64.js";import{ReloadableShaderModule as p}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as c}from"../core/shaderTechnique/ShaderTechnique.js";import{Default3D as l}from"../lib/DefaultVertexAttributeLocations.js";import{Program as g}from"../lib/Program.js";import{inverseProjectionInfo as d}from"../lib/Util.js";import{S as f}from"../../../../chunks/ShadowHighlight.glsl.js";import{makePipelineState as u,separateBlendingParams as x,defaultColorWriteParams as T}from"../../../webgl/renderState.js";const w=0,b=1;class j extends c{initializeProgram(r){const e=j.shader.get().build({highlightedThreshold:.99999,selfShadowThreshold:.025});return new g(r.rctx,e,l)}initializePipeline(r){return u({blending:x(770,1,771,771),colorWrite:T,depthTest:null,depthWrite:null})}bindPass(a,o){if(r(o.linearDepthTexture))return;this.program.bindTexture(o.linearDepthTexture,"depthMap"),this.program.bindTexture(o.highlightColorTexture,"highlightMap"),s(v,o.lighting.lightingMainDirection,o.camera.viewInverseTransposeMatrix),h(v,v),d(o.camera.projectionMatrix,o.camera.fullWidth,o.camera.fullHeight,S,M),i(U,o.camera.viewMatrix,o.camera.center),t(U,U),this.program.setUniform4fv("color",a.shadowColor),this.program.setUniform1f("opacity",a.shadowOpacity),this.program.setUniform1f("occludedOpacity",a.occludedShadowOpacity),this.program.setUniform1f("terminationFactor",a.opacityElevation*a.dayNightTerminator),this.program.setUniform2fv("nearFar",o.camera.nearFar),this.program.setUniformMatrix4fv("inverseView",U),this.program.setUniform4fv("projInfo",S),this.program.setUniform2fv("zScale",M),this.program.setUniform3fv("lightingMainDirectionView",v),this.program.setUniform2f("texelSize",1/o.linearDepthTexture.descriptor.width,1/o.linearDepthTexture.descriptor.height),o.shadowMap.bind(this.program),o.shadowMap.bindView(this.program,o.camera.center);let n=o.shadowMap.getSnapshot(w);e(n)&&this.program.bindTexture(n,"highlightDepthTex"),n=o.shadowMap.getSnapshot(b),e(n)&&this.program.bindTexture(n,"defaultDepthTex")}get primitiveType(){return 5}}j.shader=new p(f,(()=>import("./ShadowHighlight.glsl.js")));const v=n(),M=o(),S=m(),U=a();export{b as DefaultSnapshotSlot,w as HighlightShadowMapSlot,j as ShadowHighlightTechnique};
