/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{isSome as t,unwrap as i}from"../../../../core/maybe.js";import{bindSliceUniformsWithOrigin as r}from"../core/shaderLibrary/Slice.glsl.js";import{bindOutputHighlight as s}from"../core/shaderLibrary/output/OutputHighlight.glsl.js";import{bindProjectionMatrix as o,bindView as p,bindCameraPosition as l}from"../core/shaderLibrary/util/View.glsl.js";import{ReloadableShaderModule as n}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as a}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as u,ShaderTechniqueConfiguration as h}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as d}from"../lib/DefaultVertexAttributeLocations.js";import{Program as c}from"../lib/Program.js";import{depthCompareLess as m,stencilWriteMaskOn as f,stencilToolMaskBaseParams as g,stencilBaseAllZerosParams as b}from"../lib/StencilUtils.js";import{N as P}from"../../../../chunks/NativeLine.glsl.js";import{separateBlendingParams as x,makePipelineState as T,defaultColorWriteParams as S,defaultDepthWriteParams as v}from"../../../webgl/renderState.js";class C extends a{constructor(e,t,i){super(e,t,i),this.stipplePattern=null,this.stippleTextureBind=null,this.stippleTextureRepository=e.stippleTextureRepository}get stippleEnabled(){return this.configuration.stippleEnabled&&4!==this.configuration.output}initializeProgram(e){const t=C.shader.get(),i=this.configuration,r=t.build({output:i.output,attributeColor:i.vertexColors,slicePlaneEnabled:i.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,draped:i.draped,stippleEnabled:this.stippleEnabled,stippleOffColorEnabled:i.stippleOffColorEnabled,stippleRequiresClamp:!1,stippleScaleWithLineWidth:!1,stipplePreferContinuous:i.stipplePreferContinuous});return new c(e.rctx,r,d)}dispose(){super.dispose(),this.stippleTextureRepository.release(this.stipplePattern),this.stipplePattern=null,this.stippleTextureBind=null}bindPass(e,r){if(o(this.program,r.camera.projectionMatrix),this.stipplePattern!==e.stipplePattern){const t=e.stipplePattern;this.stippleTextureBind=this.stippleTextureRepository.swap(this.stipplePattern,t),this.stipplePattern=t}if(this.stippleEnabled){const{pixelSize:e,sdfNormalizer:i,pixels:s}=t(this.stippleTextureBind)?this.stippleTextureBind(this.program):{pixelSize:1,sdfNormalizer:1,pixels:1};this.program.setUniform1f("stipplePatternSDFNormalizer",i),this.program.setUniform1f("stipplePatternTextureSize",s),this.program.setUniform1f("stipplePatternPixelSize",e),this.program.setUniform1f("stipplePatternPixelSizeInv",1/e),this.program.setUniform1f("pixelRatio",r.camera.pixelRatio),this.configuration.draped?this.program.setUniform1f("worldToScreenRatio",1/r.screenToPCSRatio):this.program.setUniform1f("worldToScreenPerDistanceRatio",1/r.camera.perScreenPixelRatio),this.program.setUniform2f("ndcToPixel",r.camera.fullViewport[2]/2,r.camera.fullViewport[3]/2)}if(this.program.setUniform4fv("constantColor",e.color),this.program.setUniform1f("alphaCoverage",Math.min(1,e.width*r.camera.pixelRatio)),this.configuration.stippleOffColorEnabled){const t=i(e.stippleOffColor);this.program.setUniform4f("stippleOffColor",t[0],t[1],t[2],t.length>3?t[3]:1)}4===this.configuration.output&&s(this.program,r)}bindDraw(e){p(this.program,e),this.stippleEnabled&&!this.configuration.draped&&l(this.program,e.origin,e.camera.viewInverseTransposeMatrix),r(this.program,this.configuration,e),this.program.rebindTextures()}initializePipeline(){const e=this.configuration,t=x(770,1,771,771),i=(t,i=null,r=null)=>T({blending:i,depthTest:m,depthWrite:r,colorWrite:S,stencilWrite:e.sceneHasOcludees?f:null,stencilTest:e.sceneHasOcludees?t?g:b:null});return 0===e.output?(this._occludeePipelineState=i(!0,e.transparent||this.stippleEnabled?t:null,v),i(!1,e.transparent||this.stippleEnabled?t:null,v)):i(!1)}get primitiveType(){return 1}getPipelineState(e,t){return t?this._occludeePipelineState:super.getPipelineState(e,t)}}C.shader=new n(P,(()=>import("./NativeLine.glsl.js")));class E extends h{constructor(){super(...arguments),this.output=0,this.slicePlaneEnabled=!1,this.vertexColors=!1,this.transparent=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.sceneHasOcludees=!1}}e([u({count:8})],E.prototype,"output",void 0),e([u()],E.prototype,"slicePlaneEnabled",void 0),e([u()],E.prototype,"vertexColors",void 0),e([u()],E.prototype,"transparent",void 0),e([u()],E.prototype,"draped",void 0),e([u()],E.prototype,"stippleEnabled",void 0),e([u()],E.prototype,"stippleOffColorEnabled",void 0),e([u()],E.prototype,"stipplePreferContinuous",void 0),e([u()],E.prototype,"sceneHasOcludees",void 0);export{C as NativeLineTechnique,E as NativeLineTechniqueConfiguration};
