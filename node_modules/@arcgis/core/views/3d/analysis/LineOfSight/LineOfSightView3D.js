/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as s}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import i from"../../../../core/Evented.js";import{HandleOwnerMixin as r}from"../../../../core/HandleOwner.js";import{destroyMaybe as a,isSome as o,applySome as e,unwrapOr as l}from"../../../../core/maybe.js";import{property as n}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../../core/accessorSupport/decorators/subclass.js";import{AnalysisView3D as y}from"../AnalysisView3D.js";import{LineOfSightController as u}from"./LineOfSightController.js";import{LineOfSightViewData as h}from"./LineOfSightViewData.js";import{LineOfSightVisualization as c}from"./LineOfSightVisualization.js";let d=class extends(y(r(i.EventedMixin(t)))){constructor(s){super(s),this.type="line-of-sight-view",this.suspended=!1,this.fullOpacity=1,this.analysisViewData=new h}initialize(){const s=this.view,t=this.analysis;this._analysisController=new u({analysis:t,analysisViewData:this.analysisViewData,view:s}),this._analysisVisualization=new c({analysis:t,analysisView:this,view:s}),this.handles.add([this._analysisController.on("result-changed",(s=>{s.target!==this.analysisViewData.cursorTarget&&this.emit("result-changed",s)}))])}destroy(){this._analysisController=a(this._analysisController),this._analysisVisualization=a(this._analysisVisualization)}get results(){return this.analysisViewData.analyses.map((s=>s.result))}get priority(){return this._analysisController.priority}set priority(s){this._analysisController.priority=s}get updating(){return o(this._analysisController)&&this._analysisController.updating}getResultForTarget(s){const t=this.analysisViewData.analyses.find((t=>t.target===s)),i=e(t,(s=>s.result));return l(i,null)}get test(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};s([n()],d.prototype,"type",void 0),s([n()],d.prototype,"analysis",void 0),s([n({readOnly:!0})],d.prototype,"results",null),s([n()],d.prototype,"priority",null),s([n()],d.prototype,"suspended",void 0),s([n()],d.prototype,"fullOpacity",void 0),s([n()],d.prototype,"analysisViewData",void 0),s([n()],d.prototype,"updating",null),s([n()],d.prototype,"_analysisController",void 0),s([n()],d.prototype,"_analysisVisualization",void 0),d=s([p("esri.views.3d.analysis.LineOfSight.LineOfSightView3D")],d);const m=d;export{m as default};
