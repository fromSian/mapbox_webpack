/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../chunks/tslib.es6.js";import e from"../../../../Color.js";import t from"../../../../core/Accessor.js";import n from"../../../../core/Handles.js";import{makeHandle as o,handlesGroup as s}from"../../../../core/handleUtils.js";import{applyOpacity as l}from"../../../../core/mathUtils.js";import{removeMaybe as r,destroyMaybe as a}from"../../../../core/maybe.js";import{react as c,syncAndInitial as u,sync as d}from"../../../../core/reactiveUtils.js";import{property as m}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as h}from"../../../../core/accessorSupport/decorators/subclass.js";import{c as p}from"../../../../chunks/mat4f64.js";import{f as y}from"../../../../chunks/vec3.js";import{d as f,c as v}from"../../../../chunks/vec3f64.js";import{LineVisualElement as V}from"../../interactive/visualElements/LineVisualElement.js";let g=class extends t{constructor(i){super(i),this._handle=null,this._analysisHandles=new n}initialize(){this._handle=this._connectAnalyses()}destroy(){this._handle=r(this._handle),this._analysisHandles=a(this._analysisHandles)}get visible(){return this.analysisView.visible&&!this.analysisView.suspended}get _analyses(){return this.analysisView.analysisViewData.analyses}get _configuration(){return this.analysisView.analysisViewData.configuration}get _opacity(){return this.analysisView.fullOpacity}createLineOfSightVisualization(){const i=this._configuration,t=this._opacity,n={view:this.view,attached:!0,width:i.outerWidth,innerWidth:i.innerWidth},o=e.toUnitRGBA(i.visibleOuterColor);l(o,o,t);const s=e.toUnitRGBA(i.visibleInnerColor);l(s,s,t);const r=e.toUnitRGBA(i.occludedOuterColor);l(r,r,t);const a=e.toUnitRGBA(i.occludedInnerColor);l(a,a,t);const c=e.toUnitRGBA(i.undefinedOuterColor);l(c,c,t);const u=e.toUnitRGBA(i.undefinedInnerColor);l(u,u,t);return{visibleLineVisualElement:new V({...n,color:o,innerColor:s}),occludedLineVisualElement:new V({...n,color:r,innerColor:a}),undefinedLineVisualElement:new V({...n,color:c,innerColor:u})}}destroyLineOfSightVisualization(i){i.visibleLineVisualElement=a(i.visibleLineVisualElement),i.occludedLineVisualElement=a(i.occludedLineVisualElement),i.undefinedLineVisualElement=a(i.undefinedLineVisualElement)}updateLineOfSightVisualization(i,t){const n=this.visible,o=this._configuration,{computationResult:s,inputPoints:r}=i,{start:a,end:c,intersection:u,isValid:d,isTargetVisible:m}=s,{observer:h}=r,p=L;p[12]=h[0],p[13]=h[1],p[14]=h[2];const v=y(_,a,h),V=y(b,c,h),g=y(C,u,h),{visibleLineVisualElement:O,occludedLineVisualElement:A,undefinedLineVisualElement:E}=t;if(!n)return O.visible=!1,A.visible=!1,void(E.visible=!1);if(O.visible=!0,A.visible=!0,E.visible=!0,O.geometry=null,A.geometry=null,E.geometry=null,d)if(m){O.geometry=[[f(v),f(V)]],O.transform=p;const i=e.toUnitRGBA(o.visibleOuterColor);O.color=l(i,i,this._opacity)}else{O.geometry=[[f(v),f(g)]],O.transform=p;const i=e.toUnitRGBA(o.occludedOuterColor);O.color=l(i,i,this._opacity),A.geometry=[[f(g),f(V)]],A.transform=p}else E.geometry=[[f(v),f(V)]],E.transform=p}updateVisualizationOpacity(i,t){const n=this._configuration,o=this._opacity,s=e.toUnitRGBA(n.visibleOuterColor);l(s,s,o);const r=e.toUnitRGBA(n.visibleInnerColor);l(r,r,o);const a=e.toUnitRGBA(n.occludedOuterColor);l(a,a,o);const c=e.toUnitRGBA(n.occludedInnerColor);l(c,c,o);const u=e.toUnitRGBA(n.undefinedOuterColor);l(u,u,o);const d=e.toUnitRGBA(n.undefinedInnerColor);l(d,d,o),t.visibleLineVisualElement.color=i.computationResult.isTargetVisible?s:a,t.visibleLineVisualElement.innerColor=r,t.occludedLineVisualElement.color=a,t.occludedLineVisualElement.innerColor=c,t.undefinedLineVisualElement.color=u,t.undefinedLineVisualElement.innerColor=d}getLineOfSightVisualizationDependencies(i){const{computationResult:e}=i,{occludedOuterColor:t,visibleOuterColor:n}=this._configuration;return{computationResult:e,occludedOuterColor:t,visibleOuterColor:n,visible:this.visible}}_connectAnalysis(i){const e=this._analysisHandles;if(e.has(i))return;const t=this.createLineOfSightVisualization();e.add([c((()=>this.getLineOfSightVisualizationDependencies(i)),(()=>this.updateLineOfSightVisualization(i,t)),u),c((()=>this._opacity),(()=>this.updateVisualizationOpacity(i,t)),d),o((()=>this.destroyLineOfSightVisualization(t)))],i)}_disconnectAnalysis(i){this._analysisHandles.remove(i)}_connectAnalyses(){let i=null;return s([c((()=>this._analyses),(e=>{i=r(i),i=e.on("change",(i=>this._onAnalysesCollectionChange(i))),this._onAnalysesCollectionChange({target:e,added:e.items,removed:[],moved:[]})}),u),o((()=>i=r(i)))])}_onAnalysesCollectionChange(i){i.added.forEach((i=>this._connectAnalysis(i))),i.removed.forEach((i=>this._disconnectAnalysis(i)))}};i([m({constructOnly:!0})],g.prototype,"analysis",void 0),i([m({constructOnly:!0})],g.prototype,"analysisView",void 0),i([m({constructOnly:!0})],g.prototype,"view",void 0),i([m({readOnly:!0})],g.prototype,"visible",null),i([m()],g.prototype,"_analyses",null),i([m()],g.prototype,"_configuration",null),i([m()],g.prototype,"_opacity",null),g=i([h("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],g);const _=v(),b=v(),C=v(),L=p();export{g as LineOfSightVisualization};
