/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import r from"../../../core/Accessor.js";import t from"../../../core/Evented.js";import s from"../../../core/Handles.js";import i from"../../../core/Logger.js";import{someMap as a}from"../../../core/MapUtils.js";import{releaseMaybe as o,disposeMaybe as n,isSome as h,unwrapOr as d,isNone as l,unwrap as u}from"../../../core/maybe.js";import c from"../../../core/PooledArray.js";import{someSet as p}from"../../../core/SetUtils.js";import{init as g}from"../../../core/watchUtils.js";import{property as y}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as m}from"../../../core/accessorSupport/decorators/subclass.js";import{o as _,i as f,a as R}from"../../../chunks/mat4.js";import{a as T}from"../../../chunks/vec2f64.js";import{f as w,c as b}from"../../../chunks/vec3f64.js";import{I as v}from"../../../chunks/mat4f64.js";import x from"../support/debugFlags.js";import{Overlay as O}from"./Overlay.js";import{OverlayFramebufferObject as j}from"./OverlayFramebufferObject.js";import{OverlayRenderTarget as L}from"./OverlayRenderTarget.js";import{ShaderTechniqueRepository as S}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueRepository.js";import{autoDispose as P,AutoDisposableMixin as C}from"../webgl-engine/lib/AutoDisposable.js";import G from"../webgl-engine/lib/Camera.js";import{GLMaterialRepository as V}from"../webgl-engine/lib/GLMaterialRepository.js";import{createEmptyDepthTexture as D,createQuadVAO as E}from"../webgl-engine/lib/glUtil3D.js";import{GridLocalOriginFactory as U}from"../webgl-engine/lib/GridLocalOriginFactory.js";import{newIntersectorResult as A}from"../webgl-engine/lib/Intersector.js";import{OverlayRenderContext as q}from"../webgl-engine/lib/RenderContext.js";import{SortedRenderGeometryRenderer as M}from"../webgl-engine/lib/SortedRenderGeometryRenderer.js";import{TextureTechniqueConfiguration as F,TextureTechnique as W}from"../webgl-engine/lib/TextureTechnique.js";import{AmbientLight as k}from"../webgl-engine/lighting/Lightsources.js";import{SceneLighting as H}from"../webgl-engine/lighting/SceneLighting.js";import{StippleTextureRepository as B}from"../webgl-engine/materials/StippleTextureRepository.js";import{ImmediateTask as z,TaskPriority as I,noBudget as X}from"../../support/Scheduler.js";import Y from"../../webgl/Texture.js";import{vertexCount as N}from"../../webgl/Util.js";const Q=i.getLogger("esri.views.3d.webgl-engine.lib.OverlayRenderer");let J=class extends(C(r)){constructor(e){super(e),this._overlays=null,this._overlayRenderTarget=null,this._hasHighlights=!1,this._rendersOccluded=!1,this._hasWater=!1,this._lighting=new H,this._handles=new s,this._frameTask=z,this._layerRenderers=new Map,this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers=new c,this._geometries=new Map,this.worldToPCSRatio=1,this.events=new t,this.longitudeCyclical=null}initialize(){const e=this.view._stage.renderView;this._rctx=e.renderingContext,this._renderContext=new q(this._rctx);const r=e.waterTextureRepository;this._stippleTextureRepository=new B(e.renderingContext),this._shaderTechniqueRepository=new S({rctx:this._rctx,viewingMode:2,stippleTextureRepository:this._stippleTextureRepository,waterTextureRepository:r}),this._handles.add([g(r,"loadingState",(()=>this.events.emit("content-changed"))),g(this,"spatialReference",(e=>this._localOrigins=new U(e)))]),this._materialRepository=new V(e.textureRepository,this._shaderTechniqueRepository,(e=>{(e.renderOccluded&ie)>0!==this._rendersOccluded&&this.updateRendersOccluded(),this.events.emit("content-changed"),this.notifyChange("updating")}),(()=>this.events.emit("content-changed"))),this._lighting.groundLightingFactor=1,this._lighting.globalFactor=0,this._lighting.set([new k(w(1,1,1))]),this._bindParameters={slot:20,highlightDepthTexture:D(this._rctx),camera:ee,inverseViewport:T(),origin:null,screenToWorldRatio:null,screenToPCSRatio:null,shadowMappingEnabled:!1,slicePlane:null,ssaoEnabled:!1,hasOccludees:!1,linearDepthTexture:null,lastFrameColorTexture:null,reprojectionMatrix:v,ssrEnabled:!1,lighting:this._lighting,transparencyPassType:3,terrainLinearDepthTexture:null,geometryLinearDepthTexture:null,multipassTerrainEnabled:!1,cullAboveGround:!1,multipassGeometryEnabled:!1,highlightColorTexture:null},this._frameTask=this.view.resourceController.scheduler.registerTask(I.STAGE,this),this._handles.add(this._frameTask)}dispose(){this._handles.destroy(),this._layerRenderers.forEach((e=>e.dispose())),this._layerRenderers.clear(),this._debugTextureTechnique=o(this._debugTextureTechnique),this._debugPatternTexture=n(this._debugPatternTexture),this._bindParameters.highlightDepthTexture=n(this._bindParameters.highlightDepthTexture),this._shaderTechniqueRepository=n(this._shaderTechniqueRepository),this._temporaryFBO=n(this._temporaryFBO),this._quadVAO=n(this._quadVAO),this.disposeOverlays()}get updating(){return this._sortedLayerRenderersDirty||this._frameTask.updating||a(this._layerRenderers,(e=>e.updating))}get hasOverlays(){return h(this._overlays)&&h(this._overlayRenderTarget)}get gpuMemoryUsage(){return h(this._overlayRenderTarget)?this._overlayRenderTarget.gpuMemoryUsage:0}collectUnusedRenderTargetMemory(e){let r=!1;if(h(this._overlayRenderTarget))for(const t of this._overlayRenderTarget.renderTargets){const s=this.overlays[0].validTargets[t.type]||!this.overlays[1].validTargets[t.type];r=this._overlayRenderTarget.validateUsageForTarget(s,t,e)||r}return r}get overlays(){return d(this._overlays,[])}ensureDrapeTargets(e){h(this._overlays)&&this._overlays.forEach((r=>{r.hasTargetWithoutRasterImage=p(e,(e=>1===e.drapeTargetType))}))}ensureDrapeSources(e){h(this._overlays)&&this._overlays.forEach((r=>{r.hasDrapedFeatureSource=a(e,((e,r)=>1===r.drapeSourceType)),r.hasDrapedRasterSource=a(e,((e,r)=>0===r.drapeSourceType))}))}ensureOverlays(e,r){l(this._overlays)&&(this._overlayRenderTarget=new L(this._rctx),this._overlays=[new O(0,this._overlayRenderTarget),new O(1,this._overlayRenderTarget)]),this.ensureDrapeTargets(e),this.ensureDrapeSources(r)}disposeOverlays(){this._overlays=null,this._overlayRenderTarget=n(this._overlayRenderTarget),this.events.emit("textures-disposed")}get running(){return this.updating}runTask(e,r=(()=>!0)){this._frameTask.processQueue(e),e.done||this._processLayers(e,r)}_processLayers(e,r){let t=!1;for(const[s,i]of this._layerRenderers){if(e.done)break;(s.destroyed||r(s))&&(i.commitChanges()&&(t=!0,e.madeProgress()),i.isEmpty&&(t=!0,this._sortedLayerRenderersDirty=!0,this._layerRenderers.delete(s),this._handles.remove(s)))}this.updateSortedLayerRenderers(),t&&(h(this._overlays)&&0===this._layerRenderers.size&&this.disposeOverlays(),this.notifyChange("updating"),this.events.emit("content-changed"),this.updateHasHighlights(),this.updateRendersOccluded(),this.updateHasWater())}processSyncLayers(){this._processLayers(X,(e=>1===e.updatePolicy))}addGeometries(e,r,t){for(const s of e)l(s.origin)&&(s.origin=this._localOrigins.getOrigin(s.boundingSphere)),this._geometries.set(s.id,s);this.ensureLayerRenderer(r).add(e),2===t&&this.notifyGraphicGeometryChanged(e,r)}removeGeometries(e,r,t){for(const i of e)this._geometries.delete(u(i.id));const s=this._layerRenderers.get(r);s&&(s.remove(e),2===t&&this.notifyGraphicGeometryChanged(e,r))}updateGeometries(e,r,t){const s=this._layerRenderers.get(r);if(s)switch(s.modify(e,t),t){case 4:case 2:return this.notifyGraphicGeometryChanged(e,r);case 1:return this.notifyGraphicVisibilityChanged(e,r)}else Q.warn("Attempted to update geometry for nonexistent layer")}notifyGraphicGeometryChanged(e,r){if(l(r.notifyGraphicGeometryChanged))return;let t;for(const s of e){const e=s.graphicUid;h(e)&&e!==t&&(r.notifyGraphicGeometryChanged(e),t=e)}}notifyGraphicVisibilityChanged(e,r){if(l(r.notifyGraphicVisibilityChanged))return;let t;for(const s of e){const e=s.graphicUid;h(e)&&e!==t&&(r.notifyGraphicVisibilityChanged(e),t=e)}}updateHighlights(e,r){const t=this._layerRenderers.get(r);t?t.modify(e,8):Q.warn("Attempted to update highlights for nonexistent layer")}isEmpty(){return 0===this._geometries.size&&!x.OVERLAY_DRAW_DEBUG_TEXTURE}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}updateLogic(e){let r=!1;return this._layerRenderers.forEach((t=>r=t.updateLogic(e)||r)),r}updateLayerOrder(){this._sortedLayerRenderersDirty=!0}drawTarget(e,r,t){const s=e.canvasGeometries;if(0===s.numViews)return!1;this._screenToWorldRatio=t*e.mapUnitsPerPixel;const i=r.renderPass;if(this.isEmpty()||5===i&&!this.hasHighlights||3===i&&!this.hasWater||!e.hasSomeSizedView())return!1;const a=r.fbo;if(!a.isValid())return!1;const o=2*e.resolution,n=e.resolution;a.resize(o,n);const d=this._rctx;ee.pixelRatio=e.pixelRatio*t,this._renderContext.pass=i,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToPCSRatio=this._screenToWorldRatio*this.worldToPCSRatio,this._bindParameters.slot=3===i?21:20,e.applyViewport(this._rctx),a.bind(d),0===e.index&&(d.setClearColor(0,0,0,0),d.clearSafe(16384));const l=1===r.type?2:4===r.type?1:0;if(1===l&&(this._renderContext.renderOccludedMask=ie),x.OVERLAY_DRAW_DEBUG_TEXTURE&&1!==l)for(let h=0;h<s.numViews;h++)this.setViewParameters(s.extents[h],e,ee),this.drawDebugTexture(e.resolution,Z[e.index]);return this._layerRenderers.size>0&&this._sortedLayerRenderers.forAll((({layerView:r,renderer:t})=>{if(2===l&&h(r)&&0===r.drapeSourceType)return;const c=h(r)&&h(r.fullOpacity)&&r.fullOpacity<1&&0===i;c&&(this.bindTemporaryFramebuffer(this._rctx,o,n),d.clearSafe(16384));for(let i=0;i<s.numViews;i++)this.setViewParameters(s.extents[i],e,ee),t.render(this._renderContext,this._bindParameters);c&&h(this._temporaryFBO)&&(a.bind(d),this.view._stage.renderView.compositingHelper.composite(this._temporaryFBO.getTexture(),2,u(u(r).fullOpacity),3,e.index))})),d.bindFramebuffer(null),a.generateMipMap(),this._renderContext.resetRenderOccludedMask(),!0}bindTemporaryFramebuffer(e,r,t){l(this._temporaryFBO)&&(this._temporaryFBO=new j(e,!1)),this._temporaryFBO.resize(r,t),this._temporaryFBO.bind(e)}async reloadShaders(){await this._shaderTechniqueRepository.reloadAll()}intersect(e,r,t,s){let i=0;this._geometries.forEach((a=>{if(s&&!s(a))return;this._intersectRenderGeometry(a,t,r,0,e,i);const o=this.longitudeCyclical;o&&(a.boundingSphere[0]-a.boundingSphere[3]<o.min&&this._intersectRenderGeometry(a,t,r,o.range,e,i),a.boundingSphere[0]+a.boundingSphere[3]>o.max&&this._intersectRenderGeometry(a,t,r,-o.range,e,i)),i++}))}_intersectRenderGeometry(e,r,t,s,i,a){if(!e.instanceParameters.visible)return;let o=0;h(e.transformation)&&(s+=e.transformation[12],o=e.transformation[13]),re[0]=t[0]-s,re[1]=t[1]-o,re[2]=1,te[0]=t[0]-s,te[1]=t[1]-o,te[2]=0,e.screenToWorldRatio=this._screenToWorldRatio,e.material.intersect(e,null,e.getShaderTransformation(),i,re,te,((t,s,o)=>{$(r,o,e.material.renderPriority,a,i,e.layerUid,e.graphicUid)}),e.calculateShaderTransformation,r)}ensureLayerRenderer(e){let r=this._layerRenderers.get(e);return r||(r=new M({rctx:this._rctx,materialRepository:this._materialRepository}),this._layerRenderers.set(e,r),this._sortedLayerRenderersDirty=!0,"fullOpacity"in e&&this._handles.add(e.watch("fullOpacity",(()=>this.events.emit("content-changed"))),e),this._handles.add(g(r,"updating",(()=>this.notifyChange("updating"))),e)),r}updateSortedLayerRenderers(){if(!this._sortedLayerRenderersDirty)return;if(this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers.clear(),0===this._layerRenderers.size)return;const e=new Set(this._layerRenderers.values());this.view.allLayerViews.forEach((r=>{const t=r,s=this._layerRenderers.get(t);s&&(this._sortedLayerRenderers.push(new K(t,s)),e.delete(s))})),e.forEach((e=>this._sortedLayerRenderers.push(new K(null,e))))}setViewParameters(e,r,t){t.viewport[0]=t.viewport[1]=0,t.viewport[2]=t.viewport[3]=r.resolution,_(t.projectionMatrix,0,e[2]-e[0],0,e[3]-e[1],t.near,t.far),f(t.viewMatrix),R(t.viewMatrix,t.viewMatrix,[-e[0],-e[1],0]),this._renderContext.camera=t,this._bindParameters.camera=t,this._bindParameters.inverseViewport[0]=1/t.fullViewport[2],this._bindParameters.inverseViewport[1]=1/t.fullViewport[3]}updateHasWater(){const e=a(this._layerRenderers,(e=>e.hasWater));e!==this._hasWater&&(this._hasWater=e,this.events.emit("has-water",e))}updateHasHighlights(){const e=a(this._layerRenderers,(e=>e.hasHighlights));e!==this._hasHighlights&&(this._hasHighlights=e,this.events.emit("has-highlights",e))}updateRendersOccluded(){const e=a(this._layerRenderers,(e=>e.rendersOccluded));e!==this._rendersOccluded&&(this._rendersOccluded=e,this.events.emit("renders-occluded",e))}drawDebugTexture(e,r){const t=this._rctx;this.ensureDebugPatternResources(e,e);const s=this._debugTextureTechnique.program;t.useProgram(s),this._debugTextureTechnique.bindPipelineState(t),s.setUniform4f("color",r[0],r[1],r[2],1),s.bindTexture(this._debugPatternTexture,"tex"),t.bindVAO(this._quadVAO),t.drawArrays(5,0,N(this._quadVAO,"geometry"))}ensureDebugPatternResources(e,r){if(this._debugPatternTexture)return;const t=new Uint8Array(e*r*4);let s=0;for(let a=0;a<r;a++)for(let i=0;i<e;i++){const o=Math.floor(i/10),n=Math.floor(a/10);o<2||n<2||10*o>e-20||10*n>r-20?(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=255):(t[s++]=255,t[s++]=255,t[s++]=255,t[s++]=1&o&&1&n?1&i^1&a?0:255:1&o^1&n?0:128)}this._debugPatternTexture=new Y(this._rctx,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,width:e,height:r},t);const i=new F;i.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniqueRepository.acquire(W,i),this._quadVAO=E(this._rctx)}get test(){return{layerRenderers:this._layerRenderers}}};e([y()],J.prototype,"_frameTask",void 0),e([y()],J.prototype,"_sortedLayerRenderersDirty",void 0),e([P()],J.prototype,"_shaderTechniqueRepository",void 0),e([P()],J.prototype,"_stippleTextureRepository",void 0),e([y({constructOnly:!0})],J.prototype,"view",void 0),e([y()],J.prototype,"worldToPCSRatio",void 0),e([y()],J.prototype,"spatialReference",void 0),e([y({type:Boolean,readOnly:!0})],J.prototype,"updating",null),J=e([m("esri.views.3d.terrain.OverlayRenderer")],J);class K{constructor(e,r){this.layerView=e,this.renderer=r}}const Z=[[1,.5,.5],[.5,.5,1]];function $(e,r,t,s,i,a,o){const n={layerUid:a,graphicUid:o,triangleNr:r},h=r=>{r.set(3,n,e.dist,e.normal,e.transformation,t,s)};if((null==i.results.min.drapedLayerOrder||t>=i.results.min.drapedLayerOrder)&&(null==i.results.min.dist||i.results.ground.dist<=i.results.min.dist)&&h(i.results.min),0!==i.options.store&&(null==i.results.max.drapedLayerOrder||t<i.results.max.drapedLayerOrder)&&(null==i.results.max.dist||i.results.ground.dist>i.results.max.dist)&&h(i.results.max),2===i.options.store){const e=A(i.ray);h(e),i.results.all.push(e)}}const ee=new G;ee.near=1,ee.far=1e4,ee.relativeElevation=null;const re=b(),te=b(),se=-2,ie=4;export{se as DRAPED_Z,J as OverlayRenderer,ie as overlayRenderOccludedFlag};
