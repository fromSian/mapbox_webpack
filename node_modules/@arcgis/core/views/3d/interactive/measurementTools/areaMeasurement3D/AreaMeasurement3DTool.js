/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import t from"../../../../../core/Handles.js";import i from"../../../../../core/Logger.js";import{destroyMaybe as s,isNone as r,unwrap as a}from"../../../../../core/maybe.js";import{react as o,sync as n}from"../../../../../core/reactiveUtils.js";import{property as m}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as h}from"../../../../../core/accessorSupport/decorators/subclass.js";import{clonePoint as l}from"../../../../../layers/graphics/hydratedFeatures.js";import{hideManipulatorWhileDragging as p}from"../../editingTools/dragEventPipeline3D.js";import u from"./AreaMeasurement3DView.js";import c from"../support/measurementUtils.js";import{createManipulatorDragEventPipeline as d}from"../../../../interactive/dragEventPipeline.js";import{InteractiveToolBase as w}from"../../../../interactive/InteractiveToolBase.js";import{createScreenPointFromEvent as g}from"../../../../support/screenUtils.js";const y=i.getLogger("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool");let V=class extends w{constructor(e){super(e),this._handles=new t,this._tempPickRequest=new u.PickRequest,this.polygonState="initial"}initialize(){this.measurementView=new u({view:this.view,analysis:this.analysis,toolState:this,manipulators:this.manipulators}),this.measurementView.when().then((()=>this._initialize()))}_initialize(){this.destroyed?y.error("Calling _initialized() on destroyed AreaMeasurement3DTool."):(this._setupManipulators(),this.visible&&this.measurementView.show(),this._handles.add(o((()=>this.state),(e=>{"measured"===e?this.complete():this.finishToolCreation()}),n)),"measured"===this.state?this.complete():this.startToolCreation())}destroy(){this.attached&&this.detach(),this.measurementView.destroy(),this._set("measurementView",null),this._handles=s(this._handles)}get state(){var e,t;switch(this.polygonState){case"initial":return(null==(e=this.measurementView)||null==(t=e.path)?void 0:t.numVertices)>=1?"measuring":"ready";case"drawing":case"editing":return"measuring";case"measured":return"measured"}}get cursor(){return this.destroyed?(y.error("Can't query the cursor of a destroyed tool."),null):!this.active||"initial"!==this.polygonState&&"drawing"!==this.polygonState?null:"crosshair"}onShow(){this.created&&this.measurementView.show()}onHide(){this.created&&this.measurementView.hide()}onDetach(){switch(this.toolState){case"created":case"creating":this.measurementView.path&&this.measurementView.path.clear(),this.measurementView.cursorPoint=null,this.polygonState="initial"}}onInputEvent(e){switch(e.type){case"immediate-double-click":this._handleImmediateDoubleClick(e);break;case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){const e=e=>`manipulator-${e}`;let t=0;const i=e=>i=>("start"===i.action&&(t++,this.measurementView.lastDraggedVertex=a(this.measurementView.manipulatorToVertex(e)),"measured"===this.polygonState&&(this.polygonState="editing")),i),s=()=>e=>"end"===e.action?(t--,0===t&&"editing"===this.polygonState&&(this.polygonState="measured"),null):e,r=(t,r)=>{this._handles.add([d(r,((e,t,r)=>{const o=p(e),n=a(this.measurementView.manipulatorToVertex(e));t.next(i(e)).next(o).next(s()).next(this.measurementView.screenToMap3D()).next((t=>{e.location=t.mapEnd,this.measurementView.path.setVertexPosition(n,l(t.mapEnd))}));const m=l(this.measurementView.path.getVertexPositionAsPoint(n));r.next(o).next((()=>{this.measurementView.path.setVertexPosition(n,m),e.location=m}))}))],e(t))},o=t=>{this._handles.remove(e(t))};this.manipulators.forEach((({id:e,manipulator:t})=>{r(e,t)})),this._handles.add([this.manipulators.on("after-add",(({item:{id:e,manipulator:t}})=>{r(e,t)})),this.manipulators.on("after-remove",(({item:{id:e}})=>{o(e)}))])}_handleImmediateDoubleClick(e){c.isPrimaryPointerAction(e)&&("drawing"===this.polygonState&&this.measurementView.finishMeasurement(),e.stopPropagation())}_handleDrag(e){"editing"===this.polygonState&&e.stopPropagation()}_handleImmediateClick(e){if(!c.isPrimaryPointerAction(e))return;const t=g(e);if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(t))return this.measurementView.cursorPoint=null,this.polygonState="drawing",void e.stopPropagation();break;case"drawing":{const i=this.measurementView.vertexHandleAt(t,e.pointerType);if(r(i)){if(this._addVertexAt(t))return this.measurementView.cursorPoint=null,void e.stopPropagation()}else 0===i.index&&(this.measurementView.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)}_handlePointerMove(e){if("mouse"===e.pointerType){const t=g(e);this._hoverAt(t)}}_handleKeyDown(e){"Enter"===e.key&&"drawing"===this.polygonState&&(this.measurementView.finishMeasurement(),e.stopPropagation())}_hoverAt(e){if(this.measurementView.requiresCursorPoint){const t=this._pick(e);t.mapPoint&&(this.measurementView.cursorPoint=t.mapPoint)}else this.measurementView.cursorPoint=null}_addVertexAt(e){const t=this._pick(e);return!!t.mapPoint&&(this.measurementView.path.add(t.mapPoint),!0)}_pick(e){const t=this._tempPickRequest;return t.screenPoint=e,this.measurementView.pick(t)}};e([m({readOnly:!0})],V.prototype,"state",null),e([m()],V.prototype,"polygonState",void 0),e([m({readOnly:!0})],V.prototype,"cursor",null),e([m()],V.prototype,"measurementView",void 0),e([m({constructOnly:!0})],V.prototype,"view",void 0),e([m()],V.prototype,"analysis",void 0),V=e([h("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],V);const _=V;export{_ as default};
