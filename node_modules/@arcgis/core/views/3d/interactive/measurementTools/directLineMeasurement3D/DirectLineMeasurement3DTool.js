/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../chunks/tslib.es6.js";import"../../../../../geometry.js";import e from"../../../../../core/Handles.js";import{unwrap as i,destroyMaybe as s,isSome as n}from"../../../../../core/maybe.js";import{react as a,sync as r}from"../../../../../core/reactiveUtils.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/arrayUtils.js";import"../../../../../core/has.js";import"../../../../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../../../../core/accessorSupport/decorators/subclass.js";import{clonePoint as c}from"../../../../../layers/graphics/hydratedFeatures.js";import{screenToMap3D as h,hideManipulatorWhileDragging as u}from"../../editingTools/dragEventPipeline3D.js";import{DirectLineMeasurement3DView as d}from"./DirectLineMeasurement3DView.js";import{PickRequest as p}from"./PickRequest.js";import{PickResult as m}from"./PickResult.js";import P from"../support/measurementUtils.js";import{createManipulatorDragEventPipeline as y,resetProperties as v}from"../../../../interactive/dragEventPipeline.js";import{InteractiveToolBase as w}from"../../../../interactive/InteractiveToolBase.js";import{createScreenPointFromEvent as _}from"../../../../support/screenUtils.js";import g from"../../../../../geometry/Point.js";let f=class extends w{constructor(t){super(t),this._handles=new e,this._cachedPickRequest=new p,this._cachedPickResult=new m,this._isAnyPointerDown=!1,this.lineState="initial",this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null}initialize(){this.measurementView=new d({toolState:this,view:this.view,analysis:this.analysis,cursorPoint:this.cursorPoint}),this.measurementView.when().then((()=>this._initialize()))}_initialize(){const{start:t,end:e}=this.measurementView.createManipulators(),s=(t,e,s)=>y(t,((t,n,a)=>{const r=u(t);n.next(r).next(h(this.view)).next((t=>"start"!==t.action?t:null)).next((i=>{const n=c(i.mapEnd,new g);this.analysis[e]=n,t.location=n,this[s]=this._surfaceLocation(n,i.surfaceType)})),a.next(r).next(v(this.analysis,[e])).next(v(this,[s])).next((()=>{t.location=i(this.analysis[e])}))}));this._handles.add([s(t,"startPoint","startPointSurfaceLocation"),s(e,"endPoint","endPointSurfaceLocation")]),[t,e].forEach((i=>{this._handles.add([i.events.on("grab-changed",(()=>{const i=t.grabbing||e.grabbing;i&&"measured"===this.lineState&&(this.lineState="editing"),i||(this.measurementView.finishMeasurement(),"editing"===this.lineState&&(this.lineState="measured"))}))])})),this.manipulators.add(t),this.manipulators.add(e),this.startManipulator=t,this.endManipulator=e,this._handles.add(a((()=>this.state),(t=>{"measured"===t?this.complete():this.finishToolCreation()}),r)),"measured"===this.state?this.complete():this.startToolCreation()}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._handles=s(this._handles)}get state(){return this.analysis.startPoint?"measured"===this.lineState?"measured":"measuring":"ready"}get creating(){return"initial"===this.lineState||"drawing"===this.lineState}get cursor(){return!this.active||"drawing"!==this.lineState&&"initial"!==this.lineState?null:"crosshair"}set cursorPoint(t){this._set("cursorPoint",t),this.measurementView.cursorPoint=t}get validMeasurement(){return n(this.analysis.startPoint)&&n(this.analysis.endPoint)}onDetach(){this.analysis.startPoint=null,this.analysis.endPoint=null,this.cursorPoint=null,this.measurementView.clearMeasurement()}onShow(){this.measurementView.show(),this.created&&this._updateManipulatorVisibility()}onHide(){this.created&&this.measurementView.hide()}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"pointer-down":this._handlePointerDown();break;case"pointer-up":this._handlePointerUp()}this._updateManipulatorVisibility()}_handlePointerMove(t){this._clearCachedPickRequest();const e=_(t);"mouse"===t.pointerType&&(this._hoverAt(e),"drawing"===this.lineState&&(this.endManipulator.events.emit("drag",{action:"update",start:e,screenPoint:e}),t.stopPropagation()))}_handlePointerDown(){this._isAnyPointerDown=!0}_handlePointerUp(){this._isAnyPointerDown=!1}_handleImmediateClick(t){if(this._clearCachedPickRequest(),!P.isPrimaryPointerAction(t))return;const e=_(t),i=t.pointerType;let s=!1;if(this.active)switch(this.lineState){case"initial":this.startManipulator.events.emit("drag",{action:"start",pointerType:i,start:e,screenPoint:e}),this.startManipulator.events.emit("drag",{action:"end",start:e,screenPoint:e}),n(this.analysis.startPoint)&&(this.startManipulator.interactive=!1,this.endManipulator.interactive=!1,this.lineState="drawing",this.endManipulator.events.emit("drag",{action:"start",pointerType:i,start:e,screenPoint:e}),s=!0);break;case"drawing":this.endManipulator.events.emit("drag",{action:"update",start:e,screenPoint:e}),n(this.analysis.endPoint)&&(this.endManipulator.events.emit("drag",{action:"end",start:e,screenPoint:e}),this.startManipulator.interactive=!0,this.endManipulator.interactive=!0,this.measurementView.finishMeasurement(),s=!0)}s&&t.stopPropagation(),"mouse"===t.pointerType&&this._hoverAt(e)}_hoverAt(t){const e=this._isAnyPointerDown&&"drawing"!==this.lineState&&"editing"!==this.lineState;if(this.measurementView.requiresCursorPoint&&!e){const e=this._pick(t);e.mapPoint&&(this.cursorPoint=e.mapPoint)}else this.cursorPoint=null}_pick(t){const e=this._cachedPickRequest.screenPoint;return e&&e.x===t.x&&e.y===t.y||(this._cachedPickRequest.screenPoint=t,this._cachedPickResult=this.measurementView.pick(this._cachedPickRequest)),this._cachedPickResult}_clearCachedPickRequest(){this._cachedPickRequest.screenPoint=null}_surfaceLocation(t,e){return 0===e?"on-the-surface":t.z>=this.measurementView.getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorVisibility(){this.startManipulator.available=n(this.analysis.startPoint),this.endManipulator.available=n(this.analysis.endPoint)}};t([o({readOnly:!0})],f.prototype,"state",null),t([o()],f.prototype,"lineState",void 0),t([o({readOnly:!0})],f.prototype,"creating",null),t([o({readOnly:!0})],f.prototype,"cursor",null),t([o()],f.prototype,"cursorPoint",null),t([o({constructOnly:!0})],f.prototype,"analysis",void 0),t([o()],f.prototype,"measurementView",void 0),t([o({constructOnly:!0})],f.prototype,"view",void 0),t([o({readOnly:!0})],f.prototype,"validMeasurement",null),t([o({value:null})],f.prototype,"startPointSurfaceLocation",void 0),t([o({value:null})],f.prototype,"endPointSurfaceLocation",void 0),f=t([l("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],f);const M=f;export{M as default};
