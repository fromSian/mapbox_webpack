/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import{acosClamped as t}from"../../../../core/mathUtils.js";import{isNone as e,isSome as o,unwrapOr as r}from"../../../../core/maybe.js";import{slice as n}from"../../../../core/typedArrayUtil.js";import{d as a}from"../../../../chunks/vec2.js";import{s as i,n as s,d as u,a as c}from"../../../../chunks/vec3.js";import{c as p}from"../../../../chunks/vec3f64.js";import{projectBuffer as l,lonLatToWebMercatorComparable as f}from"../../../../geometry/projection.js";import{getReferenceEllipsoid as h}from"../../../../geometry/projectionEllipsoid.js";import{pathsToTriangulationInfo as m}from"../../../../geometry/support/triangulationUtils.js";import{WHITE_UNIT as y}from"./constants.js";import{applyPerVertexElevationAlignment as d}from"./elevationAlignmentUtils.js";import{DRAPED_Z as g}from"../../terrain/OverlayRenderer.js";import{Geometry as b}from"../../webgl-engine/lib/Geometry.js";function j(t){const e=[],o=[];v(t,o,e);const r=o[0][1].data,n=e[0][1].length,a=new Uint16Array(n);return w(t,o,e),D(t,o,e,a),P(t,o,e,a),I(t,o,e,a),S(t,o,e,a),U(t,o,e,a),M(t,o,e,r),R(t,o,e,r),new b(o,e,2)}function z(t,e,o,r){const n="polygon"===t.type?1:0,a="polygon"===t.type?t.rings:t.paths,{position:i,outlines:s}=m(a,t.hasZ,n),u=new Float64Array(i.length),c=d(i,t.spatialReference,0,u,0,i,0,i.length/3,e,o,r),p=null!=c;return{lines:p?A(s,i,u):[],projectionSuccess:p,sampledElevation:c}}function A(t,e,o){const r=new Array;for(const{index:n,count:a}of t){if(a<=1)continue;const t=3*n,i=t+3*a;r.push({position:e.subarray(t,i),mapPosition:o?o.subarray(t,i):void 0})}return r}function F(t,e){const o="polygon"===t.type?1:0,r="polygon"===t.type?t.rings:t.paths,{position:n,outlines:a}=m(r,!1,o),i=l(n,t.spatialReference,0,n,e,0,n.length/3);for(let s=2;s<n.length;s+=3)n[s]=g;return{lines:i?A(a,n):[],projectionSuccess:i}}function v(t,e,o){const{attributeData:{position:r},removeDuplicateStartEnd:a}=t,i=k(r)&&1===a,s=r.length/3-(i?1:0),u=new Uint32Array(2*(s-1)),c=i?n(r,0,r.length-3):r;let p=0;for(let n=0;n<s-1;n++)u[p++]=n,u[p++]=n+1;e.push(["position",{size:3,data:c,exclusive:i}]),o.push(["position",u])}function w(t,o,r){const n=t.attributeData.mapPosition;e(n)||(r.push(["mapPos",r[0][1]]),o.push(["mapPos",{size:3,data:n}]))}function D(t,e,n,a){if(o(t.attributeData.colorFeature))return;const i=t.attributeData.color;e.push(["color",{size:4,data:r(i,y)}]),n.push(["color",a])}function I(t,o,r,n){const a=t.attributeData.colorFeature;e(a)||(o.push(["colorFeatureAttribute",{size:1,data:new Float32Array([a])}]),r.push(["color",n]))}function P(t,e,n,a){if(o(t.attributeData.sizeFeature))return;const i=t.attributeData.size;e.push(["size",{size:1,data:[r(i,1)]}]),n.push(["size",a])}function S(t,o,r,n){const a=t.attributeData.sizeFeature;e(a)||(o.push(["sizeFeatureAttribute",{size:1,data:new Float32Array([a])}]),r.push(["sizeFeatureAttribute",n]))}function U(t,o,r,n){const a=t.attributeData.opacityFeature;e(a)||(o.push(["opacityFeatureAttribute",{size:1,data:new Float32Array([a])}]),r.push(["opacityFeatureAttribute",n]))}function M(e,o,n,a){if("round"!==e.join)return;const p=a.length/3,l=new Float32Array(p),f=E,h=G;i(f,0,0,0);const m=r(e.uniformSize,1);for(let r=-1;r<p;++r){const e=r<0?p+r:r,o=(r+1)%p;if(i(h,a[3*o+0]-a[3*e+0],a[3*o+1]-a[3*e+1],a[3*o+2]-a[3*e+2]),s(h,h),r>=0){const e=1*((Math.PI-t(u(f,h)))*T)*x(m);l[r]=Math.max(Math.floor(e),0)}c(f,h,-1)}o.push(["subdivisions",{size:1,data:l}]),n.push(["subdivisions",n[0][1]])}function R(t,o,r,n){if(e(t.overlayInfo)||1!==t.overlayInfo.renderCoordsHelper.viewingMode||!t.overlayInfo.spatialReference.isGeographic)return;const s=new Float64Array(n.length),u=h(t.overlayInfo.spatialReference);for(let e=0;e<s.length;e+=3)f(n,e,s,e,u);const c=n.length/3,p=new Float32Array(c+1);let l=E,m=G,y=0,d=0;i(l,s[d++],s[d++],s[d++]),p[0]=0;for(let e=1;e<c+1;++e)e===c&&(d=0),i(m,s[d++],s[d++],s[d++]),y+=a(l,m),p[e]=y,[l,m]=[m,l];o.push(["distanceToStart",{size:1,data:p}]),r.push(["distanceToStart",r[0][1]])}function x(t){return 1.863798+-2.0062872/(1+t/18.2313)**.8856294}function k(t){const e=t.length;return t[0]===t[e-3]&&t[1]===t[e-2]&&t[2]===t[e-1]}const E=p(),G=p(),T=4/Math.PI;function q(t){switch(t){case"butt":return 0;case"square":return 1;case"round":return 2;default:return null}}export{j as createGeometry,z as geometryToRenderInfo,F as geometryToRenderInfoDraped,q as parseCapType};
