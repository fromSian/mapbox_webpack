/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import s from"../../../core/Error.js";import{init as r}from"../../../core/watchUtils.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/has.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{equals as a}from"../../../geometry/support/spatialReferenceUtils.js";import o from"../../../layers/VoxelWasmManager.js";import{LayerView3D as n}from"./LayerView3D.js";import l from"../../layers/LayerView.js";let d=class extends(n(l)){constructor(){super(...arguments),this.type="voxel-3d",this._wasmLayerId=-1}initialize(){if("local"!==this.view.viewingMode)throw new s("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if("webgl2"!==this.view._stage.renderView.renderingContext.webglVersion)throw new s("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});const e=this.layer.spatialReference;if(!a(e,this.view.spatialReference))throw new s("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t=o.getInstance(),i=t.addLayer(this.view,this).then((e=>{this._wasmLayerId=e,this._suspendedHandle=r(this,"suspended",(e=>{o.getInstance().setLayerEnabled(this.view,this,!e)}))})).catch((e=>{if(t.removeLayer(this.view,this),this._wasmLayerId=-1,-1===e)throw new s("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(-2===e)throw new s("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})}));this.addResolvingPromise(i)}destroy(){o.getInstance().removeLayer(this.view,this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){return!(this._wasmLayerId<0)&&o.getInstance().isUpdating(this.view,this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}};e([t()],d.prototype,"layer",void 0),e([t({readOnly:!0,aliasOf:"layer.parsedUrl.path"})],d.prototype,"baseUrl",void 0),d=e([i("esri.views.3d.layers.VoxelLayerView3D")],d);const p=d;export{p as default};
