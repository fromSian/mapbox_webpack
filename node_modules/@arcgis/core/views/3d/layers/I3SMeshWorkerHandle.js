/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import s from"../../../core/Logger.js";import{isSome as e}from"../../../core/maybe.js";import t from"../../../core/PooledArray.js";import{WorkerHandle as o}from"../../../core/workers/WorkerHandle.js";import{canProjectWithoutEngine as r,projectVectorToVector as p}from"../../../geometry/projection.js";const h=s.getLogger("esri.views.3d.layers.I3SMeshWorkerHandle");class u extends o{constructor(s){super("SceneLayerWorker","process",s,{hasInitialize:!0})}getTransferList(s){return[s.geometryBuffer]}setModifications(s,e,t,o){const r={context:s,modifications:a(e,t,o),isGeodetic:o.isGeographic};this.broadcast(r,"setModifications")}setLegacySchema(s,e){const t=JSON.stringify(e);this.broadcast({context:s,jsonSchema:t},"setLegacySchema")}destroyContext(s){return this.broadcast(s,"destroyContext")}}const n=new t({deallocator:null}),i=[0,0,0];function a(s,t,o){n.clear();let u=1/0,a=1/0,c=-1/0,f=-1/0,l=!1;for(const e of t){const s="clip"===e.type?2:"mask"===e.type?1:0,t=e.geometry;let m=s=>s;if(t.spatialReference){if(!r(t.spatialReference,o)){h.warn("Can't project modification polygon into layer spatial reference, ignoring modification");continue}m=s=>(p(s,t.spatialReference,i,o),i)}else t.hasZ||(i[2]=0,m=s=>(i[0]=s[0],i[1]=s[1],i));l=l||1===s,n.push(s),n.push(t.rings.length);for(const e of t.rings){n.push(e.length);for(const s of e){const e=m(s);n.push(e[0]),n.push(e[1]),n.push(e[2]),u=Math.min(u,e[0]),a=Math.min(a,e[1]),c=Math.max(c,e[0]),f=Math.max(f,e[1])}}}if(e(s))if(l){const e=1e-4;n.push(2),n.push(2),n.push(4),n.push(u-e),n.push(a-e),n.push(0),n.push(c+e),n.push(a-e),n.push(0),n.push(c+e),n.push(f+e),n.push(0),n.push(u-e),n.push(f+e),n.push(0),n.push(4),n.push(s[0]),n.push(s[1]),n.push(0),n.push(s[2]),n.push(s[1]),n.push(0),n.push(s[2]),n.push(s[3]),n.push(0),n.push(s[0]),n.push(s[3]),n.push(0)}else n.push(1),n.push(1),n.push(4),n.push(s[0]),n.push(s[1]),n.push(0),n.push(s[2]),n.push(s[1]),n.push(0),n.push(s[2]),n.push(s[3]),n.push(0),n.push(s[0]),n.push(s[3]),n.push(0);n.push(3);const m=new Float64Array(n.length);for(let e=0;e<n.length;++e)m[e]=n.getItemAt(e);return m}export{u as I3SMeshWorkerHandle,a as toWasmModification};
