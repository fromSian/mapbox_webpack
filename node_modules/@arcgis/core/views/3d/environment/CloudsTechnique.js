/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{C as r}from"../../../chunks/Clouds.glsl.js";import{ReloadableShaderModule as s}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as i}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{parameter as t,ShaderTechniqueConfiguration as o}from"../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as n}from"../webgl-engine/lib/DefaultVertexAttributeLocations.js";import{Program as l}from"../webgl-engine/lib/Program.js";import{makePipelineState as a,separateBlendingParams as c,defaultColorWriteParams as u}from"../../webgl/renderState.js";class d extends i{initializeProgram(e){const r=d.shader.get().build({steps:this.configuration.steps});return new l(e.rctx,r,n)}initializePipeline(){return a({blending:c(1,1,0,0),depthTest:{func:515},colorWrite:u})}}d.shader=new s(r,(()=>import("./Clouds.glsl.js")));class g extends o{constructor(){super(...arguments),this.steps=0}}e([t({count:3})],g.prototype,"steps",void 0);export{d as CloudsTechnique,g as CloudsTechniqueConfiguration};
